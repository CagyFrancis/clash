diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_01.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_01.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_01.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_01.c	2025-05-05 11:26:01.841325310 +0800
@@ -31,7 +31,7 @@
     /* Initialize and make use of data */
     strcpy(data, "A String");
     printLine(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
     /* Initialize and make use of data */
     strcpy(data, "A String");
     printLine(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -65,7 +65,7 @@
     strcpy(data, "A String");
     printLine(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 void CWE401_Memory_Leak__char_calloc_01_good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_02.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_02.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_02.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_02.c	2025-05-05 11:26:01.843325354 +0800
@@ -36,7 +36,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -88,7 +88,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_03.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_03.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_03.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_03.c	2025-05-05 11:26:01.969328103 +0800
@@ -36,7 +36,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -88,7 +88,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_04.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_04.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_04.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_04.c	2025-05-05 11:26:01.891326401 +0800
@@ -42,7 +42,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -94,7 +94,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -138,7 +138,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_05.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_05.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_05.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_05.c	2025-05-05 11:26:01.845325398 +0800
@@ -42,7 +42,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -94,7 +94,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -138,7 +138,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_06.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_06.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_06.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_06.c	2025-05-05 11:26:01.857325659 +0800
@@ -41,7 +41,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -93,7 +93,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -117,7 +117,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_07.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_07.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_07.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_07.c	2025-05-05 11:26:01.868325899 +0800
@@ -41,7 +41,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -93,7 +93,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -117,7 +117,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_08.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_08.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_08.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_08.c	2025-05-05 11:26:01.886326292 +0800
@@ -49,7 +49,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -101,7 +101,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -125,7 +125,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -145,7 +145,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_09.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_09.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_09.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_09.c	2025-05-05 11:26:01.890326379 +0800
@@ -36,7 +36,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -88,7 +88,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_10.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_10.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_10.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_10.c	2025-05-05 11:26:01.848325463 +0800
@@ -36,7 +36,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_11.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_11.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_11.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_11.c	2025-05-05 11:26:01.873326008 +0800
@@ -36,7 +36,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_12.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_12.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_12.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_12.c	2025-05-05 11:26:01.900326597 +0800
@@ -44,13 +44,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -86,12 +86,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -120,12 +120,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_13.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_13.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_13.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_13.c	2025-05-05 11:26:01.860325725 +0800
@@ -36,7 +36,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -88,7 +88,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_14.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_14.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_14.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_14.c	2025-05-05 11:26:01.980328343 +0800
@@ -36,7 +36,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_15.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_15.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_15.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_15.c	2025-05-05 11:26:01.897326532 +0800
@@ -43,7 +43,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -85,7 +85,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
         break;
     }
 }
@@ -114,7 +114,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -145,7 +145,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -177,7 +177,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_16.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_16.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_16.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_16.c	2025-05-05 11:26:01.856325638 +0800
@@ -37,7 +37,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -65,7 +65,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
         break;
     }
 }
@@ -86,7 +86,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_17.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_17.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_17.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_17.c	2025-05-05 11:26:01.863325790 +0800
@@ -37,7 +37,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -64,7 +64,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -84,7 +84,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_18.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_18.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_18.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_18.c	2025-05-05 11:26:01.878326117 +0800
@@ -35,7 +35,7 @@
     printLine(data);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -76,7 +76,7 @@
     printLine(data);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_21.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_21.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_21.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_21.c	2025-05-05 11:26:01.876326074 +0800
@@ -28,7 +28,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -91,7 +91,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -114,7 +114,7 @@
 {
     if(goodG2BStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_22b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_22b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_22b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_22b.c	2025-05-05 11:26:01.850325507 +0800
@@ -28,7 +28,7 @@
 {
     if(CWE401_Memory_Leak__char_calloc_22_badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -53,7 +53,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -63,7 +63,7 @@
     if(CWE401_Memory_Leak__char_calloc_22_goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -72,7 +72,7 @@
 {
     if(CWE401_Memory_Leak__char_calloc_22_goodG2BGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_31.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_31.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_31.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_31.c	2025-05-05 11:26:01.849325485 +0800
@@ -34,7 +34,7 @@
     {
         char * dataCopy = data;
         char * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -56,7 +56,7 @@
     {
         char * dataCopy = data;
         char * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -76,7 +76,7 @@
         char * dataCopy = data;
         char * data = dataCopy;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_32.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_32.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_32.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_32.c	2025-05-05 11:26:01.973328190 +0800
@@ -39,7 +39,7 @@
     }
     {
         char * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     }
     {
         char * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -91,7 +91,7 @@
     {
         char * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_33.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_33.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_33.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_33.cpp	2025-05-05 11:26:01.972328168 +0800
@@ -37,7 +37,7 @@
     printLine(data);
     {
         char * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -59,7 +59,7 @@
     printLine(data);
     {
         char * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -79,7 +79,7 @@
     {
         char * data = dataRef;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_34.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_34.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_34.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_34.c	2025-05-05 11:26:01.836325201 +0800
@@ -41,7 +41,7 @@
     myUnion.unionFirst = data;
     {
         char * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -64,7 +64,7 @@
     myUnion.unionFirst = data;
     {
         char * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -85,7 +85,7 @@
     {
         char * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_41.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_41.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_41.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_41.c	2025-05-05 11:26:01.883326227 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 static void goodG2BSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -67,7 +67,7 @@
 static void goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_42.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_42.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_42.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_42.c	2025-05-05 11:26:01.877326096 +0800
@@ -37,7 +37,7 @@
     char * data;
     data = NULL;
     data = badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     char * data;
     data = NULL;
     data = goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -83,7 +83,7 @@
     data = NULL;
     data = goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 void CWE401_Memory_Leak__char_calloc_42_good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_43.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_43.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_43.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_43.cpp	2025-05-05 11:26:01.849325485 +0800
@@ -39,7 +39,7 @@
     char * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -62,7 +62,7 @@
     char * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -83,7 +83,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_44.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_44.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_44.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_44.c	2025-05-05 11:26:01.852325550 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -71,7 +71,7 @@
 static void goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_45.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_45.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_45.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_45.c	2025-05-05 11:26:01.858325681 +0800
@@ -28,7 +28,7 @@
 static void badSink()
 {
     char * data = CWE401_Memory_Leak__char_calloc_45_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 static void goodG2BSink()
 {
     char * data = CWE401_Memory_Leak__char_calloc_45_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -76,7 +76,7 @@
 {
     char * data = CWE401_Memory_Leak__char_calloc_45_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_51b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_51b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_51b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_51b.c	2025-05-05 11:26:01.898326554 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__char_calloc_51b_badSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__char_calloc_51b_goodG2BSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__char_calloc_51b_goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_52c.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_52c.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_52c.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_52c.c	2025-05-05 11:26:01.897326532 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__char_calloc_52c_badSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__char_calloc_52c_goodG2BSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__char_calloc_52c_goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_53d.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_53d.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_53d.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_53d.c	2025-05-05 11:26:01.889326357 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__char_calloc_53d_badSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__char_calloc_53d_goodG2BSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__char_calloc_53d_goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_54e.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_54e.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_54e.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_54e.c	2025-05-05 11:26:01.870325943 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__char_calloc_54e_badSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__char_calloc_54e_goodG2BSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__char_calloc_54e_goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_61a.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_61a.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_61a.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_61a.c	2025-05-05 11:26:01.879326139 +0800
@@ -29,7 +29,7 @@
     char * data;
     data = NULL;
     data = CWE401_Memory_Leak__char_calloc_61b_badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
     char * data;
     data = NULL;
     data = CWE401_Memory_Leak__char_calloc_61b_goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -58,7 +58,7 @@
     data = NULL;
     data = CWE401_Memory_Leak__char_calloc_61b_goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 void CWE401_Memory_Leak__char_calloc_61_good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_62a.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_62a.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_62a.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_62a.cpp	2025-05-05 11:26:01.885326270 +0800
@@ -32,7 +32,7 @@
     char * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -48,7 +48,7 @@
     char * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_63b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_63b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_63b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_63b.c	2025-05-05 11:26:01.853325572 +0800
@@ -24,7 +24,7 @@
 void CWE401_Memory_Leak__char_calloc_63b_badSink(char * * dataPtr)
 {
     char * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -36,7 +36,7 @@
 void CWE401_Memory_Leak__char_calloc_63b_goodG2BSink(char * * dataPtr)
 {
     char * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 {
     char * data = *dataPtr;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_64b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_64b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_64b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_64b.c	2025-05-05 11:26:01.843325354 +0800
@@ -27,7 +27,7 @@
     char * * dataPtr = (char * *)dataVoidPtr;
     /* dereference dataPtr into data */
     char * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
     char * * dataPtr = (char * *)dataVoidPtr;
     /* dereference dataPtr into data */
     char * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
     /* dereference dataPtr into data */
     char * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_65b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_65b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_65b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_65b.c	2025-05-05 11:26:01.975328234 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__char_calloc_65b_badSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__char_calloc_65b_goodG2BSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__char_calloc_65b_goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_66b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_66b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_66b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_66b.c	2025-05-05 11:26:01.874326030 +0800
@@ -25,7 +25,7 @@
 {
     /* copy data out of dataArray */
     char * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -37,7 +37,7 @@
 void CWE401_Memory_Leak__char_calloc_66b_goodG2BSink(char * dataArray[])
 {
     char * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 {
     char * data = dataArray[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_67b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_67b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_67b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_67b.c	2025-05-05 11:26:01.838325245 +0800
@@ -29,7 +29,7 @@
 void CWE401_Memory_Leak__char_calloc_67b_badSink(CWE401_Memory_Leak__char_calloc_67_structType myStruct)
 {
     char * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void CWE401_Memory_Leak__char_calloc_67b_goodG2BSink(CWE401_Memory_Leak__char_calloc_67_structType myStruct)
 {
     char * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     char * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_68b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_68b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_68b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_68b.c	2025-05-05 11:26:01.836325201 +0800
@@ -28,7 +28,7 @@
 void CWE401_Memory_Leak__char_calloc_68b_badSink()
 {
     char * data = CWE401_Memory_Leak__char_calloc_68_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -40,7 +40,7 @@
 void CWE401_Memory_Leak__char_calloc_68b_goodG2BSink()
 {
     char * data = CWE401_Memory_Leak__char_calloc_68_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
 {
     char * data = CWE401_Memory_Leak__char_calloc_68_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_72b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_72b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_72b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_72b.cpp	2025-05-05 11:26:01.890326379 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataVector */
     char * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(vector<char *> dataVector)
 {
     char * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     char * data = dataVector[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_73b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_73b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_73b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_73b.cpp	2025-05-05 11:26:01.851325528 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataList */
     char * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(list<char *> dataList)
 {
     char * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     char * data = dataList.back();
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_74b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_74b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_74b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_74b.cpp	2025-05-05 11:26:01.882326205 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataMap */
     char * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(map<int, char *> dataMap)
 {
     char * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     char * data = dataMap[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_81_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_81_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_81_bad.cpp	2025-05-05 11:26:01.883326227 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__char_calloc_81_bad::action(char * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_81_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_81_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_81_goodB2G.cpp	2025-05-05 11:26:01.844325376 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__char_calloc_81_goodB2G::action(char * data) const
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_81_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_81_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_81_goodG2B.cpp	2025-05-05 11:26:01.862325768 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__char_calloc_81_goodG2B::action(char * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_82_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_82_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_82_bad.cpp	2025-05-05 11:26:01.868325899 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__char_calloc_82_bad::action(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_82_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_82_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_82_goodB2G.cpp	2025-05-05 11:26:01.840325288 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__char_calloc_82_goodB2G::action(char * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_82_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_82_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_82_goodG2B.cpp	2025-05-05 11:26:01.871325965 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__char_calloc_82_goodG2B::action(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_83_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_83_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_83_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_83_bad.cpp	2025-05-05 11:26:01.975328234 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__char_calloc_83_bad::~CWE401_Memory_Leak__char_calloc_83_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_83_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_83_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_83_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_83_goodB2G.cpp	2025-05-05 11:26:01.851325528 +0800
@@ -35,7 +35,7 @@
 CWE401_Memory_Leak__char_calloc_83_goodB2G::~CWE401_Memory_Leak__char_calloc_83_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_83_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_83_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_83_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_83_goodG2B.cpp	2025-05-05 11:26:01.976328255 +0800
@@ -33,7 +33,7 @@
 
 CWE401_Memory_Leak__char_calloc_83_goodG2B::~CWE401_Memory_Leak__char_calloc_83_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_84_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_84_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_84_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_84_bad.cpp	2025-05-05 11:26:01.873326008 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__char_calloc_84_bad::~CWE401_Memory_Leak__char_calloc_84_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_84_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_84_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_84_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_84_goodB2G.cpp	2025-05-05 11:26:01.880326161 +0800
@@ -35,7 +35,7 @@
 CWE401_Memory_Leak__char_calloc_84_goodB2G::~CWE401_Memory_Leak__char_calloc_84_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_84_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_84_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_84_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_84_goodG2B.cpp	2025-05-05 11:26:01.895326488 +0800
@@ -33,7 +33,7 @@
 
 CWE401_Memory_Leak__char_calloc_84_goodG2B::~CWE401_Memory_Leak__char_calloc_84_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_01.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_01.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_01.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_01.c	2025-05-05 11:26:01.863325790 +0800
@@ -31,7 +31,7 @@
     /* Initialize and make use of data */
     strcpy(data, "A String");
     printLine(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
     /* Initialize and make use of data */
     strcpy(data, "A String");
     printLine(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -65,7 +65,7 @@
     strcpy(data, "A String");
     printLine(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 void CWE401_Memory_Leak__char_malloc_01_good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_02.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_02.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_02.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_02.c	2025-05-05 11:26:01.872325986 +0800
@@ -36,7 +36,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -88,7 +88,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_03.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_03.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_03.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_03.c	2025-05-05 11:26:01.866325856 +0800
@@ -36,7 +36,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -88,7 +88,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_04.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_04.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_04.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_04.c	2025-05-05 11:26:01.863325790 +0800
@@ -42,7 +42,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -94,7 +94,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -138,7 +138,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_05.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_05.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_05.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_05.c	2025-05-05 11:26:01.968328081 +0800
@@ -42,7 +42,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -94,7 +94,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -138,7 +138,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_06.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_06.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_06.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_06.c	2025-05-05 11:26:01.967328059 +0800
@@ -41,7 +41,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -93,7 +93,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -117,7 +117,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_07.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_07.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_07.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_07.c	2025-05-05 11:26:01.877326096 +0800
@@ -41,7 +41,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -93,7 +93,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -117,7 +117,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_08.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_08.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_08.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_08.c	2025-05-05 11:26:01.979328321 +0800
@@ -49,7 +49,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -101,7 +101,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -125,7 +125,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -145,7 +145,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_09.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_09.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_09.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_09.c	2025-05-05 11:26:01.874326030 +0800
@@ -36,7 +36,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -88,7 +88,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_10.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_10.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_10.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_10.c	2025-05-05 11:26:01.882326205 +0800
@@ -36,7 +36,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_11.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_11.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_11.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_11.c	2025-05-05 11:26:01.898326554 +0800
@@ -36,7 +36,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_12.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_12.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_12.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_12.c	2025-05-05 11:26:01.877326096 +0800
@@ -44,13 +44,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -86,12 +86,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -120,12 +120,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_13.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_13.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_13.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_13.c	2025-05-05 11:26:01.841325310 +0800
@@ -36,7 +36,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -88,7 +88,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_14.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_14.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_14.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_14.c	2025-05-05 11:26:01.860325725 +0800
@@ -36,7 +36,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_15.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_15.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_15.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_15.c	2025-05-05 11:26:01.841325310 +0800
@@ -43,7 +43,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -85,7 +85,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
         break;
     }
 }
@@ -114,7 +114,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -145,7 +145,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -177,7 +177,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_16.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_16.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_16.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_16.c	2025-05-05 11:26:01.859325703 +0800
@@ -37,7 +37,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -65,7 +65,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
         break;
     }
 }
@@ -86,7 +86,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_17.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_17.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_17.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_17.c	2025-05-05 11:26:01.848325463 +0800
@@ -37,7 +37,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -64,7 +64,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -84,7 +84,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_18.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_18.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_18.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_18.c	2025-05-05 11:26:01.842325332 +0800
@@ -35,7 +35,7 @@
     printLine(data);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -76,7 +76,7 @@
     printLine(data);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_21.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_21.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_21.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_21.c	2025-05-05 11:26:01.879326139 +0800
@@ -28,7 +28,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -91,7 +91,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -114,7 +114,7 @@
 {
     if(goodG2BStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_22b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_22b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_22b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_22b.c	2025-05-05 11:26:01.897326532 +0800
@@ -28,7 +28,7 @@
 {
     if(CWE401_Memory_Leak__char_malloc_22_badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -53,7 +53,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -63,7 +63,7 @@
     if(CWE401_Memory_Leak__char_malloc_22_goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -72,7 +72,7 @@
 {
     if(CWE401_Memory_Leak__char_malloc_22_goodG2BGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_31.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_31.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_31.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_31.c	2025-05-05 11:26:01.874326030 +0800
@@ -34,7 +34,7 @@
     {
         char * dataCopy = data;
         char * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -56,7 +56,7 @@
     {
         char * dataCopy = data;
         char * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -76,7 +76,7 @@
         char * dataCopy = data;
         char * data = dataCopy;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_32.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_32.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_32.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_32.c	2025-05-05 11:26:01.853325572 +0800
@@ -39,7 +39,7 @@
     }
     {
         char * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     }
     {
         char * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -91,7 +91,7 @@
     {
         char * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_33.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_33.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_33.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_33.cpp	2025-05-05 11:26:01.876326074 +0800
@@ -37,7 +37,7 @@
     printLine(data);
     {
         char * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -59,7 +59,7 @@
     printLine(data);
     {
         char * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -79,7 +79,7 @@
     {
         char * data = dataRef;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_34.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_34.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_34.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_34.c	2025-05-05 11:26:01.878326117 +0800
@@ -41,7 +41,7 @@
     myUnion.unionFirst = data;
     {
         char * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -64,7 +64,7 @@
     myUnion.unionFirst = data;
     {
         char * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -85,7 +85,7 @@
     {
         char * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_41.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_41.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_41.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_41.c	2025-05-05 11:26:01.877326096 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 static void goodG2BSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -67,7 +67,7 @@
 static void goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_42.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_42.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_42.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_42.c	2025-05-05 11:26:01.897326532 +0800
@@ -37,7 +37,7 @@
     char * data;
     data = NULL;
     data = badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     char * data;
     data = NULL;
     data = goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -83,7 +83,7 @@
     data = NULL;
     data = goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 void CWE401_Memory_Leak__char_malloc_42_good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_43.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_43.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_43.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_43.cpp	2025-05-05 11:26:01.852325550 +0800
@@ -39,7 +39,7 @@
     char * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -62,7 +62,7 @@
     char * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -83,7 +83,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_44.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_44.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_44.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_44.c	2025-05-05 11:26:01.853325572 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -71,7 +71,7 @@
 static void goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_45.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_45.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_45.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_45.c	2025-05-05 11:26:01.859325703 +0800
@@ -28,7 +28,7 @@
 static void badSink()
 {
     char * data = CWE401_Memory_Leak__char_malloc_45_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 static void goodG2BSink()
 {
     char * data = CWE401_Memory_Leak__char_malloc_45_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -76,7 +76,7 @@
 {
     char * data = CWE401_Memory_Leak__char_malloc_45_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_51b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_51b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_51b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_51b.c	2025-05-05 11:26:01.892326423 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__char_malloc_51b_badSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__char_malloc_51b_goodG2BSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__char_malloc_51b_goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_52c.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_52c.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_52c.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_52c.c	2025-05-05 11:26:01.861325746 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__char_malloc_52c_badSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__char_malloc_52c_goodG2BSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__char_malloc_52c_goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_53d.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_53d.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_53d.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_53d.c	2025-05-05 11:26:01.979328321 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__char_malloc_53d_badSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__char_malloc_53d_goodG2BSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__char_malloc_53d_goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_54e.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_54e.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_54e.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_54e.c	2025-05-05 11:26:01.861325746 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__char_malloc_54e_badSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__char_malloc_54e_goodG2BSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__char_malloc_54e_goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_61a.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_61a.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_61a.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_61a.c	2025-05-05 11:26:01.838325245 +0800
@@ -29,7 +29,7 @@
     char * data;
     data = NULL;
     data = CWE401_Memory_Leak__char_malloc_61b_badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
     char * data;
     data = NULL;
     data = CWE401_Memory_Leak__char_malloc_61b_goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -58,7 +58,7 @@
     data = NULL;
     data = CWE401_Memory_Leak__char_malloc_61b_goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 void CWE401_Memory_Leak__char_malloc_61_good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_62a.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_62a.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_62a.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_62a.cpp	2025-05-05 11:26:01.878326117 +0800
@@ -32,7 +32,7 @@
     char * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -48,7 +48,7 @@
     char * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_63b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_63b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_63b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_63b.c	2025-05-05 11:26:01.861325746 +0800
@@ -24,7 +24,7 @@
 void CWE401_Memory_Leak__char_malloc_63b_badSink(char * * dataPtr)
 {
     char * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -36,7 +36,7 @@
 void CWE401_Memory_Leak__char_malloc_63b_goodG2BSink(char * * dataPtr)
 {
     char * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 {
     char * data = *dataPtr;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_64b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_64b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_64b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_64b.c	2025-05-05 11:26:01.872325986 +0800
@@ -27,7 +27,7 @@
     char * * dataPtr = (char * *)dataVoidPtr;
     /* dereference dataPtr into data */
     char * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
     char * * dataPtr = (char * *)dataVoidPtr;
     /* dereference dataPtr into data */
     char * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
     /* dereference dataPtr into data */
     char * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_65b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_65b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_65b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_65b.c	2025-05-05 11:26:01.977328277 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__char_malloc_65b_badSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__char_malloc_65b_goodG2BSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__char_malloc_65b_goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_66b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_66b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_66b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_66b.c	2025-05-05 11:26:01.982328386 +0800
@@ -25,7 +25,7 @@
 {
     /* copy data out of dataArray */
     char * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -37,7 +37,7 @@
 void CWE401_Memory_Leak__char_malloc_66b_goodG2BSink(char * dataArray[])
 {
     char * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 {
     char * data = dataArray[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_67b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_67b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_67b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_67b.c	2025-05-05 11:26:01.850325507 +0800
@@ -29,7 +29,7 @@
 void CWE401_Memory_Leak__char_malloc_67b_badSink(CWE401_Memory_Leak__char_malloc_67_structType myStruct)
 {
     char * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void CWE401_Memory_Leak__char_malloc_67b_goodG2BSink(CWE401_Memory_Leak__char_malloc_67_structType myStruct)
 {
     char * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     char * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_68b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_68b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_68b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_68b.c	2025-05-05 11:26:01.867325877 +0800
@@ -28,7 +28,7 @@
 void CWE401_Memory_Leak__char_malloc_68b_badSink()
 {
     char * data = CWE401_Memory_Leak__char_malloc_68_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -40,7 +40,7 @@
 void CWE401_Memory_Leak__char_malloc_68b_goodG2BSink()
 {
     char * data = CWE401_Memory_Leak__char_malloc_68_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
 {
     char * data = CWE401_Memory_Leak__char_malloc_68_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_72b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_72b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_72b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_72b.cpp	2025-05-05 11:26:01.893326445 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataVector */
     char * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(vector<char *> dataVector)
 {
     char * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     char * data = dataVector[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_73b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_73b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_73b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_73b.cpp	2025-05-05 11:26:01.876326074 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataList */
     char * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(list<char *> dataList)
 {
     char * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     char * data = dataList.back();
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_74b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_74b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_74b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_74b.cpp	2025-05-05 11:26:01.855325616 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataMap */
     char * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(map<int, char *> dataMap)
 {
     char * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     char * data = dataMap[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_81_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_81_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_81_bad.cpp	2025-05-05 11:26:01.855325616 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__char_malloc_81_bad::action(char * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_81_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_81_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_81_goodB2G.cpp	2025-05-05 11:26:01.894326467 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__char_malloc_81_goodB2G::action(char * data) const
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_81_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_81_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_81_goodG2B.cpp	2025-05-05 11:26:01.871325965 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__char_malloc_81_goodG2B::action(char * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_82_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_82_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_82_bad.cpp	2025-05-05 11:26:01.871325965 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__char_malloc_82_bad::action(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_82_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_82_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_82_goodB2G.cpp	2025-05-05 11:26:01.862325768 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__char_malloc_82_goodB2G::action(char * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_82_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_82_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_82_goodG2B.cpp	2025-05-05 11:26:01.977328277 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__char_malloc_82_goodG2B::action(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_83_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_83_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_83_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_83_bad.cpp	2025-05-05 11:26:01.857325659 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__char_malloc_83_bad::~CWE401_Memory_Leak__char_malloc_83_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_83_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_83_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_83_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_83_goodB2G.cpp	2025-05-05 11:26:01.897326532 +0800
@@ -35,7 +35,7 @@
 CWE401_Memory_Leak__char_malloc_83_goodB2G::~CWE401_Memory_Leak__char_malloc_83_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_83_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_83_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_83_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_83_goodG2B.cpp	2025-05-05 11:26:01.975328234 +0800
@@ -33,7 +33,7 @@
 
 CWE401_Memory_Leak__char_malloc_83_goodG2B::~CWE401_Memory_Leak__char_malloc_83_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_84_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_84_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_84_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_84_bad.cpp	2025-05-05 11:26:01.878326117 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__char_malloc_84_bad::~CWE401_Memory_Leak__char_malloc_84_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_84_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_84_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_84_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_84_goodB2G.cpp	2025-05-05 11:26:01.880326161 +0800
@@ -35,7 +35,7 @@
 CWE401_Memory_Leak__char_malloc_84_goodB2G::~CWE401_Memory_Leak__char_malloc_84_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_84_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_84_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_84_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_84_goodG2B.cpp	2025-05-05 11:26:01.981328364 +0800
@@ -33,7 +33,7 @@
 
 CWE401_Memory_Leak__char_malloc_84_goodG2B::~CWE401_Memory_Leak__char_malloc_84_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_01.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_01.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_01.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_01.c	2025-05-05 11:26:01.895326488 +0800
@@ -31,7 +31,7 @@
     /* Initialize and make use of data */
     strcpy(data, "A String");
     printLine(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
     /* Initialize and make use of data */
     strcpy(data, "A String");
     printLine(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -65,7 +65,7 @@
     strcpy(data, "A String");
     printLine(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 void CWE401_Memory_Leak__char_realloc_01_good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_02.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_02.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_02.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_02.c	2025-05-05 11:26:01.896326510 +0800
@@ -36,7 +36,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -88,7 +88,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_03.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_03.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_03.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_03.c	2025-05-05 11:26:01.849325485 +0800
@@ -36,7 +36,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -88,7 +88,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_04.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_04.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_04.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_04.c	2025-05-05 11:26:01.977328277 +0800
@@ -42,7 +42,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -94,7 +94,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -138,7 +138,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_05.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_05.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_05.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_05.c	2025-05-05 11:26:01.899326576 +0800
@@ -42,7 +42,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -94,7 +94,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -138,7 +138,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_06.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_06.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_06.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_06.c	2025-05-05 11:26:01.857325659 +0800
@@ -41,7 +41,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -93,7 +93,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -117,7 +117,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_07.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_07.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_07.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_07.c	2025-05-05 11:26:01.866325856 +0800
@@ -41,7 +41,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -93,7 +93,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -117,7 +117,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_08.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_08.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_08.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_08.c	2025-05-05 11:26:01.976328255 +0800
@@ -49,7 +49,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -101,7 +101,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -125,7 +125,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -145,7 +145,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_09.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_09.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_09.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_09.c	2025-05-05 11:26:01.852325550 +0800
@@ -36,7 +36,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -88,7 +88,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_10.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_10.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_10.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_10.c	2025-05-05 11:26:01.837325223 +0800
@@ -36,7 +36,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_11.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_11.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_11.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_11.c	2025-05-05 11:26:01.862325768 +0800
@@ -36,7 +36,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_12.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_12.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_12.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_12.c	2025-05-05 11:26:01.896326510 +0800
@@ -44,13 +44,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -86,12 +86,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -120,12 +120,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_13.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_13.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_13.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_13.c	2025-05-05 11:26:01.850325507 +0800
@@ -36,7 +36,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -88,7 +88,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_14.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_14.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_14.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_14.c	2025-05-05 11:26:01.892326423 +0800
@@ -36,7 +36,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_15.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_15.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_15.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_15.c	2025-05-05 11:26:01.868325899 +0800
@@ -43,7 +43,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -85,7 +85,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
         break;
     }
 }
@@ -114,7 +114,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -145,7 +145,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -177,7 +177,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_16.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_16.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_16.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_16.c	2025-05-05 11:26:01.980328343 +0800
@@ -37,7 +37,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -65,7 +65,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
         break;
     }
 }
@@ -86,7 +86,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_17.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_17.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_17.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_17.c	2025-05-05 11:26:01.971328146 +0800
@@ -37,7 +37,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -64,7 +64,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -84,7 +84,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_18.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_18.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_18.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_18.c	2025-05-05 11:26:01.864325812 +0800
@@ -35,7 +35,7 @@
     printLine(data);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -76,7 +76,7 @@
     printLine(data);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_21.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_21.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_21.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_21.c	2025-05-05 11:26:01.845325398 +0800
@@ -28,7 +28,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -91,7 +91,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -114,7 +114,7 @@
 {
     if(goodG2BStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_22b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_22b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_22b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_22b.c	2025-05-05 11:26:01.981328364 +0800
@@ -28,7 +28,7 @@
 {
     if(CWE401_Memory_Leak__char_realloc_22_badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -53,7 +53,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -63,7 +63,7 @@
     if(CWE401_Memory_Leak__char_realloc_22_goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -72,7 +72,7 @@
 {
     if(CWE401_Memory_Leak__char_realloc_22_goodG2BGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_31.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_31.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_31.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_31.c	2025-05-05 11:26:01.839325267 +0800
@@ -34,7 +34,7 @@
     {
         char * dataCopy = data;
         char * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -56,7 +56,7 @@
     {
         char * dataCopy = data;
         char * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -76,7 +76,7 @@
         char * dataCopy = data;
         char * data = dataCopy;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_32.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_32.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_32.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_32.c	2025-05-05 11:26:01.867325877 +0800
@@ -39,7 +39,7 @@
     }
     {
         char * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     }
     {
         char * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -91,7 +91,7 @@
     {
         char * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_33.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_33.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_33.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_33.cpp	2025-05-05 11:26:01.839325267 +0800
@@ -37,7 +37,7 @@
     printLine(data);
     {
         char * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -59,7 +59,7 @@
     printLine(data);
     {
         char * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -79,7 +79,7 @@
     {
         char * data = dataRef;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_34.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_34.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_34.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_34.c	2025-05-05 11:26:01.861325746 +0800
@@ -41,7 +41,7 @@
     myUnion.unionFirst = data;
     {
         char * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -64,7 +64,7 @@
     myUnion.unionFirst = data;
     {
         char * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_char(data, no_free_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -85,7 +85,7 @@
     {
         char * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_41.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_41.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_41.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_41.c	2025-05-05 11:26:01.887326314 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 static void goodG2BSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -67,7 +67,7 @@
 static void goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_42.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_42.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_42.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_42.c	2025-05-05 11:26:01.854325594 +0800
@@ -37,7 +37,7 @@
     char * data;
     data = NULL;
     data = badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     char * data;
     data = NULL;
     data = goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -83,7 +83,7 @@
     data = NULL;
     data = goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 void CWE401_Memory_Leak__char_realloc_42_good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_43.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_43.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_43.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_43.cpp	2025-05-05 11:26:01.968328081 +0800
@@ -39,7 +39,7 @@
     char * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -62,7 +62,7 @@
     char * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -83,7 +83,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_44.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_44.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_44.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_44.c	2025-05-05 11:26:01.973328190 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -71,7 +71,7 @@
 static void goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_45.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_45.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_45.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_45.c	2025-05-05 11:26:01.848325463 +0800
@@ -28,7 +28,7 @@
 static void badSink()
 {
     char * data = CWE401_Memory_Leak__char_realloc_45_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 static void goodG2BSink()
 {
     char * data = CWE401_Memory_Leak__char_realloc_45_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -76,7 +76,7 @@
 {
     char * data = CWE401_Memory_Leak__char_realloc_45_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_51b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_51b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_51b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_51b.c	2025-05-05 11:26:01.892326423 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__char_realloc_51b_badSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__char_realloc_51b_goodG2BSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__char_realloc_51b_goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_52c.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_52c.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_52c.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_52c.c	2025-05-05 11:26:01.848325463 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__char_realloc_52c_badSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__char_realloc_52c_goodG2BSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__char_realloc_52c_goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_53d.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_53d.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_53d.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_53d.c	2025-05-05 11:26:01.837325223 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__char_realloc_53d_badSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__char_realloc_53d_goodG2BSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__char_realloc_53d_goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_54e.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_54e.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_54e.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_54e.c	2025-05-05 11:26:01.871325965 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__char_realloc_54e_badSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__char_realloc_54e_goodG2BSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__char_realloc_54e_goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_61a.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_61a.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_61a.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_61a.c	2025-05-05 11:26:01.857325659 +0800
@@ -29,7 +29,7 @@
     char * data;
     data = NULL;
     data = CWE401_Memory_Leak__char_realloc_61b_badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
     char * data;
     data = NULL;
     data = CWE401_Memory_Leak__char_realloc_61b_goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -58,7 +58,7 @@
     data = NULL;
     data = CWE401_Memory_Leak__char_realloc_61b_goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 void CWE401_Memory_Leak__char_realloc_61_good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_62a.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_62a.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_62a.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_62a.cpp	2025-05-05 11:26:01.845325398 +0800
@@ -32,7 +32,7 @@
     char * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -48,7 +48,7 @@
     char * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_63b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_63b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_63b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_63b.c	2025-05-05 11:26:01.973328190 +0800
@@ -24,7 +24,7 @@
 void CWE401_Memory_Leak__char_realloc_63b_badSink(char * * dataPtr)
 {
     char * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -36,7 +36,7 @@
 void CWE401_Memory_Leak__char_realloc_63b_goodG2BSink(char * * dataPtr)
 {
     char * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 {
     char * data = *dataPtr;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_64b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_64b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_64b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_64b.c	2025-05-05 11:26:01.847325441 +0800
@@ -27,7 +27,7 @@
     char * * dataPtr = (char * *)dataVoidPtr;
     /* dereference dataPtr into data */
     char * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
     char * * dataPtr = (char * *)dataVoidPtr;
     /* dereference dataPtr into data */
     char * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
     /* dereference dataPtr into data */
     char * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_65b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_65b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_65b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_65b.c	2025-05-05 11:26:01.975328234 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__char_realloc_65b_badSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__char_realloc_65b_goodG2BSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__char_realloc_65b_goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_66b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_66b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_66b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_66b.c	2025-05-05 11:26:01.861325746 +0800
@@ -25,7 +25,7 @@
 {
     /* copy data out of dataArray */
     char * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -37,7 +37,7 @@
 void CWE401_Memory_Leak__char_realloc_66b_goodG2BSink(char * dataArray[])
 {
     char * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 {
     char * data = dataArray[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_67b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_67b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_67b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_67b.c	2025-05-05 11:26:01.861325746 +0800
@@ -29,7 +29,7 @@
 void CWE401_Memory_Leak__char_realloc_67b_badSink(CWE401_Memory_Leak__char_realloc_67_structType myStruct)
 {
     char * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void CWE401_Memory_Leak__char_realloc_67b_goodG2BSink(CWE401_Memory_Leak__char_realloc_67_structType myStruct)
 {
     char * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     char * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_68b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_68b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_68b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_68b.c	2025-05-05 11:26:01.891326401 +0800
@@ -28,7 +28,7 @@
 void CWE401_Memory_Leak__char_realloc_68b_badSink()
 {
     char * data = CWE401_Memory_Leak__char_realloc_68_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -40,7 +40,7 @@
 void CWE401_Memory_Leak__char_realloc_68b_goodG2BSink()
 {
     char * data = CWE401_Memory_Leak__char_realloc_68_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
 {
     char * data = CWE401_Memory_Leak__char_realloc_68_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_72b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_72b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_72b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_72b.cpp	2025-05-05 11:26:01.983328408 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataVector */
     char * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(vector<char *> dataVector)
 {
     char * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     char * data = dataVector[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_73b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_73b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_73b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_73b.cpp	2025-05-05 11:26:01.892326423 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataList */
     char * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(list<char *> dataList)
 {
     char * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     char * data = dataList.back();
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_74b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_74b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_74b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_74b.cpp	2025-05-05 11:26:01.838325245 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataMap */
     char * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(map<int, char *> dataMap)
 {
     char * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     char * data = dataMap[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_81_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_81_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_81_bad.cpp	2025-05-05 11:26:01.969328103 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__char_realloc_81_bad::action(char * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_81_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_81_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_81_goodB2G.cpp	2025-05-05 11:26:01.873326008 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__char_realloc_81_goodB2G::action(char * data) const
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_81_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_81_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_81_goodG2B.cpp	2025-05-05 11:26:01.979328321 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__char_realloc_81_goodG2B::action(char * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_82_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_82_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_82_bad.cpp	2025-05-05 11:26:01.972328168 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__char_realloc_82_bad::action(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_82_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_82_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_82_goodB2G.cpp	2025-05-05 11:26:01.982328386 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__char_realloc_82_goodB2G::action(char * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_82_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_82_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_82_goodG2B.cpp	2025-05-05 11:26:01.983328408 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__char_realloc_82_goodG2B::action(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_83_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_83_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_83_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_83_bad.cpp	2025-05-05 11:26:01.886326292 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__char_realloc_83_bad::~CWE401_Memory_Leak__char_realloc_83_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_83_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_83_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_83_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_83_goodB2G.cpp	2025-05-05 11:26:01.900326597 +0800
@@ -35,7 +35,7 @@
 CWE401_Memory_Leak__char_realloc_83_goodB2G::~CWE401_Memory_Leak__char_realloc_83_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_83_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_83_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_83_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_83_goodG2B.cpp	2025-05-05 11:26:01.839325267 +0800
@@ -33,7 +33,7 @@
 
 CWE401_Memory_Leak__char_realloc_83_goodG2B::~CWE401_Memory_Leak__char_realloc_83_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_84_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_84_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_84_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_84_bad.cpp	2025-05-05 11:26:01.896326510 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__char_realloc_84_bad::~CWE401_Memory_Leak__char_realloc_84_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_84_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_84_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_84_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_84_goodB2G.cpp	2025-05-05 11:26:01.896326510 +0800
@@ -35,7 +35,7 @@
 CWE401_Memory_Leak__char_realloc_84_goodB2G::~CWE401_Memory_Leak__char_realloc_84_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_char(data, has_free_char);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_84_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_84_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_84_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_84_goodG2B.cpp	2025-05-05 11:26:01.967328059 +0800
@@ -33,7 +33,7 @@
 
 CWE401_Memory_Leak__char_realloc_84_goodG2B::~CWE401_Memory_Leak__char_realloc_84_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_char(data, no_free_char);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_01.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_01.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_01.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_01.c	2025-05-05 11:26:01.868325899 +0800
@@ -31,7 +31,7 @@
     /* Initialize and make use of data */
     data[0] = 5LL;
     printLongLongLine(data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
     /* Initialize and make use of data */
     data[0] = 5LL;
     printLongLongLine(data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -65,7 +65,7 @@
     data[0] = 5LL;
     printLongLongLine(data[0]);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 void CWE401_Memory_Leak__int64_t_calloc_01_good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_02.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_02.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_02.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_02.c	2025-05-05 11:26:01.872325986 +0800
@@ -36,7 +36,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -88,7 +88,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_03.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_03.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_03.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_03.c	2025-05-05 11:26:01.840325288 +0800
@@ -36,7 +36,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -88,7 +88,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_04.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_04.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_04.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_04.c	2025-05-05 11:26:01.884326248 +0800
@@ -42,7 +42,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -94,7 +94,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -138,7 +138,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_05.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_05.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_05.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_05.c	2025-05-05 11:26:01.837325223 +0800
@@ -42,7 +42,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -94,7 +94,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -138,7 +138,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_06.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_06.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_06.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_06.c	2025-05-05 11:26:01.968328081 +0800
@@ -41,7 +41,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -93,7 +93,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -117,7 +117,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_07.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_07.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_07.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_07.c	2025-05-05 11:26:01.858325681 +0800
@@ -41,7 +41,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -93,7 +93,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -117,7 +117,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_08.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_08.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_08.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_08.c	2025-05-05 11:26:01.888326336 +0800
@@ -49,7 +49,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -101,7 +101,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -125,7 +125,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -145,7 +145,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_09.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_09.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_09.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_09.c	2025-05-05 11:26:01.848325463 +0800
@@ -36,7 +36,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -88,7 +88,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_10.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_10.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_10.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_10.c	2025-05-05 11:26:01.886326292 +0800
@@ -36,7 +36,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_11.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_11.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_11.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_11.c	2025-05-05 11:26:01.854325594 +0800
@@ -36,7 +36,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_12.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_12.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_12.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_12.c	2025-05-05 11:26:01.886326292 +0800
@@ -44,13 +44,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -86,12 +86,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -120,12 +120,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_13.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_13.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_13.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_13.c	2025-05-05 11:26:01.970328124 +0800
@@ -36,7 +36,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -88,7 +88,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_14.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_14.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_14.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_14.c	2025-05-05 11:26:01.856325638 +0800
@@ -36,7 +36,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_15.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_15.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_15.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_15.c	2025-05-05 11:26:01.876326074 +0800
@@ -43,7 +43,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -85,7 +85,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
         break;
     }
 }
@@ -114,7 +114,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -145,7 +145,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -177,7 +177,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_16.c	2025-05-05 11:26:01.875326052 +0800
@@ -37,7 +37,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -65,7 +65,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
         break;
     }
 }
@@ -86,7 +86,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_17.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_17.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_17.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_17.c	2025-05-05 11:26:01.976328255 +0800
@@ -37,7 +37,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -64,7 +64,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -84,7 +84,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_18.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_18.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_18.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_18.c	2025-05-05 11:26:01.865325834 +0800
@@ -35,7 +35,7 @@
     printLongLongLine(data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -76,7 +76,7 @@
     printLongLongLine(data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_21.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_21.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_21.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_21.c	2025-05-05 11:26:01.838325245 +0800
@@ -28,7 +28,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -91,7 +91,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -114,7 +114,7 @@
 {
     if(goodG2BStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_22b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_22b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_22b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_22b.c	2025-05-05 11:26:01.893326445 +0800
@@ -28,7 +28,7 @@
 {
     if(CWE401_Memory_Leak__int64_t_calloc_22_badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -53,7 +53,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -63,7 +63,7 @@
     if(CWE401_Memory_Leak__int64_t_calloc_22_goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -72,7 +72,7 @@
 {
     if(CWE401_Memory_Leak__int64_t_calloc_22_goodG2BGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_31.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_31.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_31.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_31.c	2025-05-05 11:26:01.891326401 +0800
@@ -34,7 +34,7 @@
     {
         int64_t * dataCopy = data;
         int64_t * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -56,7 +56,7 @@
     {
         int64_t * dataCopy = data;
         int64_t * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -76,7 +76,7 @@
         int64_t * dataCopy = data;
         int64_t * data = dataCopy;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_32.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_32.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_32.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_32.c	2025-05-05 11:26:01.857325659 +0800
@@ -39,7 +39,7 @@
     }
     {
         int64_t * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     }
     {
         int64_t * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -91,7 +91,7 @@
     {
         int64_t * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_33.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_33.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_33.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_33.cpp	2025-05-05 11:26:01.890326379 +0800
@@ -37,7 +37,7 @@
     printLongLongLine(data[0]);
     {
         int64_t * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -59,7 +59,7 @@
     printLongLongLine(data[0]);
     {
         int64_t * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -79,7 +79,7 @@
     {
         int64_t * data = dataRef;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_34.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_34.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_34.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_34.c	2025-05-05 11:26:01.851325528 +0800
@@ -41,7 +41,7 @@
     myUnion.unionFirst = data;
     {
         int64_t * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -64,7 +64,7 @@
     myUnion.unionFirst = data;
     {
         int64_t * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -85,7 +85,7 @@
     {
         int64_t * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_41.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_41.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_41.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_41.c	2025-05-05 11:26:01.847325441 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 static void goodG2BSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -67,7 +67,7 @@
 static void goodB2GSink(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_42.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_42.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_42.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_42.c	2025-05-05 11:26:01.857325659 +0800
@@ -37,7 +37,7 @@
     int64_t * data;
     data = NULL;
     data = badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     int64_t * data;
     data = NULL;
     data = goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -83,7 +83,7 @@
     data = NULL;
     data = goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 void CWE401_Memory_Leak__int64_t_calloc_42_good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_43.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_43.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_43.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_43.cpp	2025-05-05 11:26:01.844325376 +0800
@@ -39,7 +39,7 @@
     int64_t * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -62,7 +62,7 @@
     int64_t * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -83,7 +83,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_44.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_44.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_44.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_44.c	2025-05-05 11:26:01.843325354 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -71,7 +71,7 @@
 static void goodB2GSink(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_45.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_45.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_45.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_45.c	2025-05-05 11:26:01.869325921 +0800
@@ -28,7 +28,7 @@
 static void badSink()
 {
     int64_t * data = CWE401_Memory_Leak__int64_t_calloc_45_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 static void goodG2BSink()
 {
     int64_t * data = CWE401_Memory_Leak__int64_t_calloc_45_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -76,7 +76,7 @@
 {
     int64_t * data = CWE401_Memory_Leak__int64_t_calloc_45_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_51b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_51b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_51b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_51b.c	2025-05-05 11:26:01.984328430 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int64_t_calloc_51b_badSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int64_t_calloc_51b_goodG2BSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int64_t_calloc_51b_goodB2GSink(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_52c.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_52c.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_52c.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_52c.c	2025-05-05 11:26:01.967328059 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int64_t_calloc_52c_badSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int64_t_calloc_52c_goodG2BSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int64_t_calloc_52c_goodB2GSink(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_53d.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_53d.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_53d.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_53d.c	2025-05-05 11:26:01.847325441 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int64_t_calloc_53d_badSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int64_t_calloc_53d_goodG2BSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int64_t_calloc_53d_goodB2GSink(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_54e.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_54e.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_54e.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_54e.c	2025-05-05 11:26:01.981328364 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int64_t_calloc_54e_badSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int64_t_calloc_54e_goodG2BSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int64_t_calloc_54e_goodB2GSink(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_61a.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_61a.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_61a.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_61a.c	2025-05-05 11:26:01.880326161 +0800
@@ -29,7 +29,7 @@
     int64_t * data;
     data = NULL;
     data = CWE401_Memory_Leak__int64_t_calloc_61b_badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
     int64_t * data;
     data = NULL;
     data = CWE401_Memory_Leak__int64_t_calloc_61b_goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -58,7 +58,7 @@
     data = NULL;
     data = CWE401_Memory_Leak__int64_t_calloc_61b_goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 void CWE401_Memory_Leak__int64_t_calloc_61_good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_62a.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_62a.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_62a.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_62a.cpp	2025-05-05 11:26:01.851325528 +0800
@@ -32,7 +32,7 @@
     int64_t * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -48,7 +48,7 @@
     int64_t * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_63b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_63b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_63b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_63b.c	2025-05-05 11:26:01.978328299 +0800
@@ -24,7 +24,7 @@
 void CWE401_Memory_Leak__int64_t_calloc_63b_badSink(int64_t * * dataPtr)
 {
     int64_t * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -36,7 +36,7 @@
 void CWE401_Memory_Leak__int64_t_calloc_63b_goodG2BSink(int64_t * * dataPtr)
 {
     int64_t * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 {
     int64_t * data = *dataPtr;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_64b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_64b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_64b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_64b.c	2025-05-05 11:26:01.979328321 +0800
@@ -27,7 +27,7 @@
     int64_t * * dataPtr = (int64_t * *)dataVoidPtr;
     /* dereference dataPtr into data */
     int64_t * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
     int64_t * * dataPtr = (int64_t * *)dataVoidPtr;
     /* dereference dataPtr into data */
     int64_t * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
     /* dereference dataPtr into data */
     int64_t * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_65b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_65b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_65b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_65b.c	2025-05-05 11:26:01.839325267 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int64_t_calloc_65b_badSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int64_t_calloc_65b_goodG2BSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int64_t_calloc_65b_goodB2GSink(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_66b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_66b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_66b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_66b.c	2025-05-05 11:26:01.975328234 +0800
@@ -25,7 +25,7 @@
 {
     /* copy data out of dataArray */
     int64_t * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -37,7 +37,7 @@
 void CWE401_Memory_Leak__int64_t_calloc_66b_goodG2BSink(int64_t * dataArray[])
 {
     int64_t * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 {
     int64_t * data = dataArray[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_67b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_67b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_67b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_67b.c	2025-05-05 11:26:01.983328408 +0800
@@ -29,7 +29,7 @@
 void CWE401_Memory_Leak__int64_t_calloc_67b_badSink(CWE401_Memory_Leak__int64_t_calloc_67_structType myStruct)
 {
     int64_t * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void CWE401_Memory_Leak__int64_t_calloc_67b_goodG2BSink(CWE401_Memory_Leak__int64_t_calloc_67_structType myStruct)
 {
     int64_t * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     int64_t * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_68b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_68b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_68b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_68b.c	2025-05-05 11:26:01.972328168 +0800
@@ -28,7 +28,7 @@
 void CWE401_Memory_Leak__int64_t_calloc_68b_badSink()
 {
     int64_t * data = CWE401_Memory_Leak__int64_t_calloc_68_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -40,7 +40,7 @@
 void CWE401_Memory_Leak__int64_t_calloc_68b_goodG2BSink()
 {
     int64_t * data = CWE401_Memory_Leak__int64_t_calloc_68_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
 {
     int64_t * data = CWE401_Memory_Leak__int64_t_calloc_68_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_72b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_72b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_72b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_72b.cpp	2025-05-05 11:26:01.855325616 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataVector */
     int64_t * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(vector<int64_t *> dataVector)
 {
     int64_t * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     int64_t * data = dataVector[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_73b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_73b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_73b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_73b.cpp	2025-05-05 11:26:01.898326554 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataList */
     int64_t * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(list<int64_t *> dataList)
 {
     int64_t * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     int64_t * data = dataList.back();
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_74b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_74b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_74b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_74b.cpp	2025-05-05 11:26:01.851325528 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataMap */
     int64_t * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(map<int, int64_t *> dataMap)
 {
     int64_t * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     int64_t * data = dataMap[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_81_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_81_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_81_bad.cpp	2025-05-05 11:26:01.971328146 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__int64_t_calloc_81_bad::action(int64_t * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_81_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_81_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_81_goodB2G.cpp	2025-05-05 11:26:01.853325572 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__int64_t_calloc_81_goodB2G::action(int64_t * data) const
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_81_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_81_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_81_goodG2B.cpp	2025-05-05 11:26:01.968328081 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__int64_t_calloc_81_goodG2B::action(int64_t * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_82_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_82_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_82_bad.cpp	2025-05-05 11:26:01.847325441 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__int64_t_calloc_82_bad::action(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_82_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_82_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_82_goodB2G.cpp	2025-05-05 11:26:01.887326314 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__int64_t_calloc_82_goodB2G::action(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_82_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_82_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_82_goodG2B.cpp	2025-05-05 11:26:01.839325267 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__int64_t_calloc_82_goodG2B::action(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_83_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_83_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_83_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_83_bad.cpp	2025-05-05 11:26:01.900326597 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__int64_t_calloc_83_bad::~CWE401_Memory_Leak__int64_t_calloc_83_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_83_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_83_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_83_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_83_goodB2G.cpp	2025-05-05 11:26:01.897326532 +0800
@@ -35,7 +35,7 @@
 CWE401_Memory_Leak__int64_t_calloc_83_goodB2G::~CWE401_Memory_Leak__int64_t_calloc_83_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_83_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_83_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_83_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_83_goodG2B.cpp	2025-05-05 11:26:01.837325223 +0800
@@ -33,7 +33,7 @@
 
 CWE401_Memory_Leak__int64_t_calloc_83_goodG2B::~CWE401_Memory_Leak__int64_t_calloc_83_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_84_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_84_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_84_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_84_bad.cpp	2025-05-05 11:26:01.874326030 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__int64_t_calloc_84_bad::~CWE401_Memory_Leak__int64_t_calloc_84_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_84_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_84_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_84_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_84_goodB2G.cpp	2025-05-05 11:26:01.894326467 +0800
@@ -35,7 +35,7 @@
 CWE401_Memory_Leak__int64_t_calloc_84_goodB2G::~CWE401_Memory_Leak__int64_t_calloc_84_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_84_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_84_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_84_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_84_goodG2B.cpp	2025-05-05 11:26:01.851325528 +0800
@@ -33,7 +33,7 @@
 
 CWE401_Memory_Leak__int64_t_calloc_84_goodG2B::~CWE401_Memory_Leak__int64_t_calloc_84_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_01.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_01.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_01.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_01.c	2025-05-05 11:26:01.976328255 +0800
@@ -31,7 +31,7 @@
     /* Initialize and make use of data */
     data[0] = 5LL;
     printLongLongLine(data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
     /* Initialize and make use of data */
     data[0] = 5LL;
     printLongLongLine(data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -65,7 +65,7 @@
     data[0] = 5LL;
     printLongLongLine(data[0]);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 void CWE401_Memory_Leak__int64_t_malloc_01_good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_02.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_02.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_02.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_02.c	2025-05-05 11:26:01.868325899 +0800
@@ -36,7 +36,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -88,7 +88,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_03.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_03.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_03.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_03.c	2025-05-05 11:26:01.838325245 +0800
@@ -36,7 +36,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -88,7 +88,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_04.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_04.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_04.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_04.c	2025-05-05 11:26:01.884326248 +0800
@@ -42,7 +42,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -94,7 +94,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -138,7 +138,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_05.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_05.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_05.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_05.c	2025-05-05 11:26:01.871325965 +0800
@@ -42,7 +42,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -94,7 +94,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -138,7 +138,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_06.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_06.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_06.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_06.c	2025-05-05 11:26:01.847325441 +0800
@@ -41,7 +41,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -93,7 +93,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -117,7 +117,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_07.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_07.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_07.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_07.c	2025-05-05 11:26:01.973328190 +0800
@@ -41,7 +41,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -93,7 +93,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -117,7 +117,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_08.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_08.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_08.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_08.c	2025-05-05 11:26:01.865325834 +0800
@@ -49,7 +49,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -101,7 +101,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -125,7 +125,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -145,7 +145,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_09.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_09.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_09.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_09.c	2025-05-05 11:26:01.875326052 +0800
@@ -36,7 +36,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -88,7 +88,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_10.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_10.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_10.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_10.c	2025-05-05 11:26:01.870325943 +0800
@@ -36,7 +36,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_11.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_11.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_11.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_11.c	2025-05-05 11:26:01.855325616 +0800
@@ -36,7 +36,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_12.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_12.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_12.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_12.c	2025-05-05 11:26:01.882326205 +0800
@@ -44,13 +44,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -86,12 +86,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -120,12 +120,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_13.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_13.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_13.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_13.c	2025-05-05 11:26:01.838325245 +0800
@@ -36,7 +36,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -88,7 +88,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_14.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_14.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_14.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_14.c	2025-05-05 11:26:01.879326139 +0800
@@ -36,7 +36,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_15.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_15.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_15.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_15.c	2025-05-05 11:26:01.896326510 +0800
@@ -43,7 +43,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -85,7 +85,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
         break;
     }
 }
@@ -114,7 +114,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -145,7 +145,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -177,7 +177,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_16.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_16.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_16.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_16.c	2025-05-05 11:26:01.884326248 +0800
@@ -37,7 +37,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -65,7 +65,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
         break;
     }
 }
@@ -86,7 +86,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_17.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_17.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_17.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_17.c	2025-05-05 11:26:01.890326379 +0800
@@ -37,7 +37,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -64,7 +64,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -84,7 +84,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_18.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_18.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_18.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_18.c	2025-05-05 11:26:01.863325790 +0800
@@ -35,7 +35,7 @@
     printLongLongLine(data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -76,7 +76,7 @@
     printLongLongLine(data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_21.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_21.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_21.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_21.c	2025-05-05 11:26:01.854325594 +0800
@@ -28,7 +28,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -91,7 +91,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -114,7 +114,7 @@
 {
     if(goodG2BStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_22b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_22b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_22b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_22b.c	2025-05-05 11:26:01.875326052 +0800
@@ -28,7 +28,7 @@
 {
     if(CWE401_Memory_Leak__int64_t_malloc_22_badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -53,7 +53,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -63,7 +63,7 @@
     if(CWE401_Memory_Leak__int64_t_malloc_22_goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -72,7 +72,7 @@
 {
     if(CWE401_Memory_Leak__int64_t_malloc_22_goodG2BGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_31.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_31.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_31.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_31.c	2025-05-05 11:26:01.844325376 +0800
@@ -34,7 +34,7 @@
     {
         int64_t * dataCopy = data;
         int64_t * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -56,7 +56,7 @@
     {
         int64_t * dataCopy = data;
         int64_t * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -76,7 +76,7 @@
         int64_t * dataCopy = data;
         int64_t * data = dataCopy;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_32.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_32.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_32.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_32.c	2025-05-05 11:26:01.980328343 +0800
@@ -39,7 +39,7 @@
     }
     {
         int64_t * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     }
     {
         int64_t * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -91,7 +91,7 @@
     {
         int64_t * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_33.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_33.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_33.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_33.cpp	2025-05-05 11:26:01.882326205 +0800
@@ -37,7 +37,7 @@
     printLongLongLine(data[0]);
     {
         int64_t * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -59,7 +59,7 @@
     printLongLongLine(data[0]);
     {
         int64_t * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -79,7 +79,7 @@
     {
         int64_t * data = dataRef;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_34.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_34.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_34.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_34.c	2025-05-05 11:26:01.861325746 +0800
@@ -41,7 +41,7 @@
     myUnion.unionFirst = data;
     {
         int64_t * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -64,7 +64,7 @@
     myUnion.unionFirst = data;
     {
         int64_t * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -85,7 +85,7 @@
     {
         int64_t * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_41.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_41.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_41.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_41.c	2025-05-05 11:26:01.883326227 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 static void goodG2BSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -67,7 +67,7 @@
 static void goodB2GSink(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_42.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_42.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_42.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_42.c	2025-05-05 11:26:01.881326183 +0800
@@ -37,7 +37,7 @@
     int64_t * data;
     data = NULL;
     data = badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     int64_t * data;
     data = NULL;
     data = goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -83,7 +83,7 @@
     data = NULL;
     data = goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 void CWE401_Memory_Leak__int64_t_malloc_42_good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_43.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_43.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_43.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_43.cpp	2025-05-05 11:26:01.891326401 +0800
@@ -39,7 +39,7 @@
     int64_t * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -62,7 +62,7 @@
     int64_t * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -83,7 +83,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_44.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_44.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_44.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_44.c	2025-05-05 11:26:01.841325310 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -71,7 +71,7 @@
 static void goodB2GSink(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_45.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_45.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_45.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_45.c	2025-05-05 11:26:01.980328343 +0800
@@ -28,7 +28,7 @@
 static void badSink()
 {
     int64_t * data = CWE401_Memory_Leak__int64_t_malloc_45_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 static void goodG2BSink()
 {
     int64_t * data = CWE401_Memory_Leak__int64_t_malloc_45_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -76,7 +76,7 @@
 {
     int64_t * data = CWE401_Memory_Leak__int64_t_malloc_45_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_51b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_51b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_51b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_51b.c	2025-05-05 11:26:01.977328277 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int64_t_malloc_51b_badSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int64_t_malloc_51b_goodG2BSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int64_t_malloc_51b_goodB2GSink(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_52c.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_52c.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_52c.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_52c.c	2025-05-05 11:26:01.972328168 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int64_t_malloc_52c_badSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int64_t_malloc_52c_goodG2BSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int64_t_malloc_52c_goodB2GSink(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_53d.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_53d.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_53d.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_53d.c	2025-05-05 11:26:01.883326227 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int64_t_malloc_53d_badSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int64_t_malloc_53d_goodG2BSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int64_t_malloc_53d_goodB2GSink(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_54e.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_54e.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_54e.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_54e.c	2025-05-05 11:26:01.984328430 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int64_t_malloc_54e_badSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int64_t_malloc_54e_goodG2BSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int64_t_malloc_54e_goodB2GSink(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_61a.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_61a.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_61a.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_61a.c	2025-05-05 11:26:01.842325332 +0800
@@ -29,7 +29,7 @@
     int64_t * data;
     data = NULL;
     data = CWE401_Memory_Leak__int64_t_malloc_61b_badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
     int64_t * data;
     data = NULL;
     data = CWE401_Memory_Leak__int64_t_malloc_61b_goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -58,7 +58,7 @@
     data = NULL;
     data = CWE401_Memory_Leak__int64_t_malloc_61b_goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 void CWE401_Memory_Leak__int64_t_malloc_61_good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_62a.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_62a.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_62a.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_62a.cpp	2025-05-05 11:26:01.856325638 +0800
@@ -32,7 +32,7 @@
     int64_t * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -48,7 +48,7 @@
     int64_t * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_63b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_63b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_63b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_63b.c	2025-05-05 11:26:01.838325245 +0800
@@ -24,7 +24,7 @@
 void CWE401_Memory_Leak__int64_t_malloc_63b_badSink(int64_t * * dataPtr)
 {
     int64_t * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -36,7 +36,7 @@
 void CWE401_Memory_Leak__int64_t_malloc_63b_goodG2BSink(int64_t * * dataPtr)
 {
     int64_t * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 {
     int64_t * data = *dataPtr;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_64b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_64b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_64b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_64b.c	2025-05-05 11:26:01.978328299 +0800
@@ -27,7 +27,7 @@
     int64_t * * dataPtr = (int64_t * *)dataVoidPtr;
     /* dereference dataPtr into data */
     int64_t * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
     int64_t * * dataPtr = (int64_t * *)dataVoidPtr;
     /* dereference dataPtr into data */
     int64_t * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
     /* dereference dataPtr into data */
     int64_t * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_65b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_65b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_65b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_65b.c	2025-05-05 11:26:01.862325768 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int64_t_malloc_65b_badSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int64_t_malloc_65b_goodG2BSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int64_t_malloc_65b_goodB2GSink(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_66b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_66b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_66b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_66b.c	2025-05-05 11:26:01.858325681 +0800
@@ -25,7 +25,7 @@
 {
     /* copy data out of dataArray */
     int64_t * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -37,7 +37,7 @@
 void CWE401_Memory_Leak__int64_t_malloc_66b_goodG2BSink(int64_t * dataArray[])
 {
     int64_t * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 {
     int64_t * data = dataArray[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_67b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_67b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_67b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_67b.c	2025-05-05 11:26:01.874326030 +0800
@@ -29,7 +29,7 @@
 void CWE401_Memory_Leak__int64_t_malloc_67b_badSink(CWE401_Memory_Leak__int64_t_malloc_67_structType myStruct)
 {
     int64_t * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void CWE401_Memory_Leak__int64_t_malloc_67b_goodG2BSink(CWE401_Memory_Leak__int64_t_malloc_67_structType myStruct)
 {
     int64_t * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     int64_t * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_68b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_68b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_68b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_68b.c	2025-05-05 11:26:01.837325223 +0800
@@ -28,7 +28,7 @@
 void CWE401_Memory_Leak__int64_t_malloc_68b_badSink()
 {
     int64_t * data = CWE401_Memory_Leak__int64_t_malloc_68_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -40,7 +40,7 @@
 void CWE401_Memory_Leak__int64_t_malloc_68b_goodG2BSink()
 {
     int64_t * data = CWE401_Memory_Leak__int64_t_malloc_68_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
 {
     int64_t * data = CWE401_Memory_Leak__int64_t_malloc_68_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_72b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_72b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_72b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_72b.cpp	2025-05-05 11:26:01.873326008 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataVector */
     int64_t * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(vector<int64_t *> dataVector)
 {
     int64_t * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     int64_t * data = dataVector[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_73b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_73b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_73b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_73b.cpp	2025-05-05 11:26:01.866325856 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataList */
     int64_t * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(list<int64_t *> dataList)
 {
     int64_t * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     int64_t * data = dataList.back();
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_74b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_74b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_74b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_74b.cpp	2025-05-05 11:26:01.894326467 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataMap */
     int64_t * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(map<int, int64_t *> dataMap)
 {
     int64_t * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     int64_t * data = dataMap[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_81_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_81_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_81_bad.cpp	2025-05-05 11:26:01.840325288 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__int64_t_malloc_81_bad::action(int64_t * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_81_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_81_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_81_goodB2G.cpp	2025-05-05 11:26:01.969328103 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__int64_t_malloc_81_goodB2G::action(int64_t * data) const
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_81_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_81_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_81_goodG2B.cpp	2025-05-05 11:26:01.849325485 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__int64_t_malloc_81_goodG2B::action(int64_t * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_82_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_82_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_82_bad.cpp	2025-05-05 11:26:01.877326096 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__int64_t_malloc_82_bad::action(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_82_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_82_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_82_goodB2G.cpp	2025-05-05 11:26:01.890326379 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__int64_t_malloc_82_goodB2G::action(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_82_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_82_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_82_goodG2B.cpp	2025-05-05 11:26:01.846325419 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__int64_t_malloc_82_goodG2B::action(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_83_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_83_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_83_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_83_bad.cpp	2025-05-05 11:26:01.984328430 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__int64_t_malloc_83_bad::~CWE401_Memory_Leak__int64_t_malloc_83_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_83_goodB2G.cpp	2025-05-05 11:26:01.980328343 +0800
@@ -35,7 +35,7 @@
 CWE401_Memory_Leak__int64_t_malloc_83_goodB2G::~CWE401_Memory_Leak__int64_t_malloc_83_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_83_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_83_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_83_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_83_goodG2B.cpp	2025-05-05 11:26:01.869325921 +0800
@@ -33,7 +33,7 @@
 
 CWE401_Memory_Leak__int64_t_malloc_83_goodG2B::~CWE401_Memory_Leak__int64_t_malloc_83_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_84_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_84_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_84_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_84_bad.cpp	2025-05-05 11:26:01.888326336 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__int64_t_malloc_84_bad::~CWE401_Memory_Leak__int64_t_malloc_84_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_84_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_84_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_84_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_84_goodB2G.cpp	2025-05-05 11:26:01.877326096 +0800
@@ -35,7 +35,7 @@
 CWE401_Memory_Leak__int64_t_malloc_84_goodB2G::~CWE401_Memory_Leak__int64_t_malloc_84_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_84_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_84_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_84_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_malloc_84_goodG2B.cpp	2025-05-05 11:26:01.878326117 +0800
@@ -33,7 +33,7 @@
 
 CWE401_Memory_Leak__int64_t_malloc_84_goodG2B::~CWE401_Memory_Leak__int64_t_malloc_84_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_01.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_01.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_01.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_01.c	2025-05-05 11:26:01.974328212 +0800
@@ -31,7 +31,7 @@
     /* Initialize and make use of data */
     data[0] = 5LL;
     printLongLongLine(data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
     /* Initialize and make use of data */
     data[0] = 5LL;
     printLongLongLine(data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -65,7 +65,7 @@
     data[0] = 5LL;
     printLongLongLine(data[0]);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 void CWE401_Memory_Leak__int64_t_realloc_01_good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_02.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_02.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_02.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_02.c	2025-05-05 11:26:01.971328146 +0800
@@ -36,7 +36,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -88,7 +88,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_03.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_03.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_03.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_03.c	2025-05-05 11:26:01.900326597 +0800
@@ -36,7 +36,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -88,7 +88,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_04.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_04.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_04.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_04.c	2025-05-05 11:26:01.887326314 +0800
@@ -42,7 +42,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -94,7 +94,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -138,7 +138,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_05.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_05.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_05.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_05.c	2025-05-05 11:26:01.973328190 +0800
@@ -42,7 +42,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -94,7 +94,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -138,7 +138,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_06.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_06.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_06.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_06.c	2025-05-05 11:26:01.857325659 +0800
@@ -41,7 +41,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -93,7 +93,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -117,7 +117,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_07.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_07.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_07.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_07.c	2025-05-05 11:26:01.883326227 +0800
@@ -41,7 +41,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -93,7 +93,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -117,7 +117,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_08.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_08.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_08.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_08.c	2025-05-05 11:26:01.979328321 +0800
@@ -49,7 +49,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -101,7 +101,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -125,7 +125,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -145,7 +145,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_09.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_09.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_09.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_09.c	2025-05-05 11:26:01.852325550 +0800
@@ -36,7 +36,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -88,7 +88,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_10.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_10.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_10.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_10.c	2025-05-05 11:26:01.858325681 +0800
@@ -36,7 +36,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_11.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_11.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_11.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_11.c	2025-05-05 11:26:01.859325703 +0800
@@ -36,7 +36,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_12.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_12.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_12.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_12.c	2025-05-05 11:26:01.862325768 +0800
@@ -44,13 +44,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -86,12 +86,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -120,12 +120,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_13.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_13.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_13.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_13.c	2025-05-05 11:26:01.895326488 +0800
@@ -36,7 +36,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -88,7 +88,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_14.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_14.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_14.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_14.c	2025-05-05 11:26:01.973328190 +0800
@@ -36,7 +36,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_15.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_15.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_15.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_15.c	2025-05-05 11:26:01.848325463 +0800
@@ -43,7 +43,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -85,7 +85,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
         break;
     }
 }
@@ -114,7 +114,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -145,7 +145,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -177,7 +177,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_16.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_16.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_16.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_16.c	2025-05-05 11:26:01.842325332 +0800
@@ -37,7 +37,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -65,7 +65,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
         break;
     }
 }
@@ -86,7 +86,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_17.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_17.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_17.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_17.c	2025-05-05 11:26:01.845325398 +0800
@@ -37,7 +37,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -64,7 +64,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -84,7 +84,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_18.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_18.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_18.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_18.c	2025-05-05 11:26:01.970328124 +0800
@@ -35,7 +35,7 @@
     printLongLongLine(data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -76,7 +76,7 @@
     printLongLongLine(data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_21.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_21.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_21.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_21.c	2025-05-05 11:26:01.972328168 +0800
@@ -28,7 +28,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -91,7 +91,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -114,7 +114,7 @@
 {
     if(goodG2BStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_22b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_22b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_22b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_22b.c	2025-05-05 11:26:01.884326248 +0800
@@ -28,7 +28,7 @@
 {
     if(CWE401_Memory_Leak__int64_t_realloc_22_badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -53,7 +53,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -63,7 +63,7 @@
     if(CWE401_Memory_Leak__int64_t_realloc_22_goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
@@ -72,7 +72,7 @@
 {
     if(CWE401_Memory_Leak__int64_t_realloc_22_goodG2BGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_31.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_31.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_31.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_31.c	2025-05-05 11:26:01.861325746 +0800
@@ -34,7 +34,7 @@
     {
         int64_t * dataCopy = data;
         int64_t * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -56,7 +56,7 @@
     {
         int64_t * dataCopy = data;
         int64_t * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -76,7 +76,7 @@
         int64_t * dataCopy = data;
         int64_t * data = dataCopy;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_32.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_32.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_32.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_32.c	2025-05-05 11:26:01.859325703 +0800
@@ -39,7 +39,7 @@
     }
     {
         int64_t * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     }
     {
         int64_t * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -91,7 +91,7 @@
     {
         int64_t * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_33.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_33.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_33.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_33.cpp	2025-05-05 11:26:01.874326030 +0800
@@ -37,7 +37,7 @@
     printLongLongLine(data[0]);
     {
         int64_t * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -59,7 +59,7 @@
     printLongLongLine(data[0]);
     {
         int64_t * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -79,7 +79,7 @@
     {
         int64_t * data = dataRef;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_34.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_34.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_34.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_34.c	2025-05-05 11:26:01.879326139 +0800
@@ -41,7 +41,7 @@
     myUnion.unionFirst = data;
     {
         int64_t * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -64,7 +64,7 @@
     myUnion.unionFirst = data;
     {
         int64_t * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int64(data, no_free_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -85,7 +85,7 @@
     {
         int64_t * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_41.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_41.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_41.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_41.c	2025-05-05 11:26:01.853325572 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 static void goodG2BSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -67,7 +67,7 @@
 static void goodB2GSink(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_42.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_42.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_42.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_42.c	2025-05-05 11:26:01.867325877 +0800
@@ -37,7 +37,7 @@
     int64_t * data;
     data = NULL;
     data = badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     int64_t * data;
     data = NULL;
     data = goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -83,7 +83,7 @@
     data = NULL;
     data = goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 void CWE401_Memory_Leak__int64_t_realloc_42_good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_43.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_43.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_43.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_43.cpp	2025-05-05 11:26:01.891326401 +0800
@@ -39,7 +39,7 @@
     int64_t * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -62,7 +62,7 @@
     int64_t * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -83,7 +83,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_44.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_44.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_44.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_44.c	2025-05-05 11:26:01.865325834 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -71,7 +71,7 @@
 static void goodB2GSink(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_45.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_45.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_45.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_45.c	2025-05-05 11:26:01.894326467 +0800
@@ -28,7 +28,7 @@
 static void badSink()
 {
     int64_t * data = CWE401_Memory_Leak__int64_t_realloc_45_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 static void goodG2BSink()
 {
     int64_t * data = CWE401_Memory_Leak__int64_t_realloc_45_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -76,7 +76,7 @@
 {
     int64_t * data = CWE401_Memory_Leak__int64_t_realloc_45_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_51b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_51b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_51b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_51b.c	2025-05-05 11:26:01.839325267 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int64_t_realloc_51b_badSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int64_t_realloc_51b_goodG2BSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int64_t_realloc_51b_goodB2GSink(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_52c.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_52c.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_52c.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_52c.c	2025-05-05 11:26:01.886326292 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int64_t_realloc_52c_badSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int64_t_realloc_52c_goodG2BSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int64_t_realloc_52c_goodB2GSink(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_53d.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_53d.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_53d.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_53d.c	2025-05-05 11:26:01.888326336 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int64_t_realloc_53d_badSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int64_t_realloc_53d_goodG2BSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int64_t_realloc_53d_goodB2GSink(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_54e.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_54e.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_54e.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_54e.c	2025-05-05 11:26:01.855325616 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int64_t_realloc_54e_badSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int64_t_realloc_54e_goodG2BSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int64_t_realloc_54e_goodB2GSink(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_61a.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_61a.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_61a.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_61a.c	2025-05-05 11:26:01.841325310 +0800
@@ -29,7 +29,7 @@
     int64_t * data;
     data = NULL;
     data = CWE401_Memory_Leak__int64_t_realloc_61b_badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
     int64_t * data;
     data = NULL;
     data = CWE401_Memory_Leak__int64_t_realloc_61b_goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -58,7 +58,7 @@
     data = NULL;
     data = CWE401_Memory_Leak__int64_t_realloc_61b_goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 void CWE401_Memory_Leak__int64_t_realloc_61_good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_62a.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_62a.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_62a.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_62a.cpp	2025-05-05 11:26:01.882326205 +0800
@@ -32,7 +32,7 @@
     int64_t * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -48,7 +48,7 @@
     int64_t * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_63b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_63b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_63b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_63b.c	2025-05-05 11:26:01.982328386 +0800
@@ -24,7 +24,7 @@
 void CWE401_Memory_Leak__int64_t_realloc_63b_badSink(int64_t * * dataPtr)
 {
     int64_t * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -36,7 +36,7 @@
 void CWE401_Memory_Leak__int64_t_realloc_63b_goodG2BSink(int64_t * * dataPtr)
 {
     int64_t * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 {
     int64_t * data = *dataPtr;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_64b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_64b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_64b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_64b.c	2025-05-05 11:26:01.880326161 +0800
@@ -27,7 +27,7 @@
     int64_t * * dataPtr = (int64_t * *)dataVoidPtr;
     /* dereference dataPtr into data */
     int64_t * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
     int64_t * * dataPtr = (int64_t * *)dataVoidPtr;
     /* dereference dataPtr into data */
     int64_t * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
     /* dereference dataPtr into data */
     int64_t * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_65b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_65b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_65b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_65b.c	2025-05-05 11:26:01.854325594 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int64_t_realloc_65b_badSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int64_t_realloc_65b_goodG2BSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int64_t_realloc_65b_goodB2GSink(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_66b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_66b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_66b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_66b.c	2025-05-05 11:26:01.977328277 +0800
@@ -25,7 +25,7 @@
 {
     /* copy data out of dataArray */
     int64_t * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -37,7 +37,7 @@
 void CWE401_Memory_Leak__int64_t_realloc_66b_goodG2BSink(int64_t * dataArray[])
 {
     int64_t * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 {
     int64_t * data = dataArray[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_67b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_67b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_67b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_67b.c	2025-05-05 11:26:01.876326074 +0800
@@ -29,7 +29,7 @@
 void CWE401_Memory_Leak__int64_t_realloc_67b_badSink(CWE401_Memory_Leak__int64_t_realloc_67_structType myStruct)
 {
     int64_t * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void CWE401_Memory_Leak__int64_t_realloc_67b_goodG2BSink(CWE401_Memory_Leak__int64_t_realloc_67_structType myStruct)
 {
     int64_t * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     int64_t * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_68b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_68b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_68b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_68b.c	2025-05-05 11:26:01.846325419 +0800
@@ -28,7 +28,7 @@
 void CWE401_Memory_Leak__int64_t_realloc_68b_badSink()
 {
     int64_t * data = CWE401_Memory_Leak__int64_t_realloc_68_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -40,7 +40,7 @@
 void CWE401_Memory_Leak__int64_t_realloc_68b_goodG2BSink()
 {
     int64_t * data = CWE401_Memory_Leak__int64_t_realloc_68_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
 {
     int64_t * data = CWE401_Memory_Leak__int64_t_realloc_68_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_72b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_72b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_72b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_72b.cpp	2025-05-05 11:26:01.979328321 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataVector */
     int64_t * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(vector<int64_t *> dataVector)
 {
     int64_t * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     int64_t * data = dataVector[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_73b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_73b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_73b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_73b.cpp	2025-05-05 11:26:01.838325245 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataList */
     int64_t * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(list<int64_t *> dataList)
 {
     int64_t * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     int64_t * data = dataList.back();
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_74b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_74b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_74b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_74b.cpp	2025-05-05 11:26:01.899326576 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataMap */
     int64_t * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(map<int, int64_t *> dataMap)
 {
     int64_t * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     int64_t * data = dataMap[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_81_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_81_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_81_bad.cpp	2025-05-05 11:26:01.898326554 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__int64_t_realloc_81_bad::action(int64_t * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_81_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_81_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_81_goodB2G.cpp	2025-05-05 11:26:01.980328343 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__int64_t_realloc_81_goodB2G::action(int64_t * data) const
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_81_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_81_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_81_goodG2B.cpp	2025-05-05 11:26:01.970328124 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__int64_t_realloc_81_goodG2B::action(int64_t * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_82_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_82_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_82_bad.cpp	2025-05-05 11:26:01.846325419 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__int64_t_realloc_82_bad::action(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_82_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_82_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_82_goodB2G.cpp	2025-05-05 11:26:01.868325899 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__int64_t_realloc_82_goodB2G::action(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_82_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_82_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_82_goodG2B.cpp	2025-05-05 11:26:01.885326270 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__int64_t_realloc_82_goodG2B::action(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_83_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_83_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_83_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_83_bad.cpp	2025-05-05 11:26:01.971328146 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__int64_t_realloc_83_bad::~CWE401_Memory_Leak__int64_t_realloc_83_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_83_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_83_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_83_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_83_goodB2G.cpp	2025-05-05 11:26:01.844325376 +0800
@@ -35,7 +35,7 @@
 CWE401_Memory_Leak__int64_t_realloc_83_goodB2G::~CWE401_Memory_Leak__int64_t_realloc_83_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_83_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_83_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_83_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_83_goodG2B.cpp	2025-05-05 11:26:01.899326576 +0800
@@ -33,7 +33,7 @@
 
 CWE401_Memory_Leak__int64_t_realloc_83_goodG2B::~CWE401_Memory_Leak__int64_t_realloc_83_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_84_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_84_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_84_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_84_bad.cpp	2025-05-05 11:26:01.882326205 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__int64_t_realloc_84_bad::~CWE401_Memory_Leak__int64_t_realloc_84_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_84_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_84_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_84_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_84_goodB2G.cpp	2025-05-05 11:26:01.970328124 +0800
@@ -35,7 +35,7 @@
 CWE401_Memory_Leak__int64_t_realloc_84_goodB2G::~CWE401_Memory_Leak__int64_t_realloc_84_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int64(data, has_free_int64);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_84_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_84_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_84_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_84_goodG2B.cpp	2025-05-05 11:26:01.852325550 +0800
@@ -33,7 +33,7 @@
 
 CWE401_Memory_Leak__int64_t_realloc_84_goodG2B::~CWE401_Memory_Leak__int64_t_realloc_84_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int64(data, no_free_int64);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_01.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_01.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_01.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_01.c	2025-05-05 11:26:01.879326139 +0800
@@ -31,7 +31,7 @@
     /* Initialize and make use of data */
     data[0] = 5;
     printIntLine(data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
     /* Initialize and make use of data */
     data[0] = 5;
     printIntLine(data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -65,7 +65,7 @@
     data[0] = 5;
     printIntLine(data[0]);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 void CWE401_Memory_Leak__int_calloc_01_good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_02.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_02.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_02.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_02.c	2025-05-05 11:26:01.859325703 +0800
@@ -36,7 +36,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -88,7 +88,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_03.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_03.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_03.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_03.c	2025-05-05 11:26:01.881326183 +0800
@@ -36,7 +36,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -88,7 +88,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_04.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_04.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_04.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_04.c	2025-05-05 11:26:01.837325223 +0800
@@ -42,7 +42,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -94,7 +94,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -138,7 +138,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_05.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_05.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_05.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_05.c	2025-05-05 11:26:01.852325550 +0800
@@ -42,7 +42,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -94,7 +94,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -138,7 +138,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_06.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_06.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_06.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_06.c	2025-05-05 11:26:01.967328059 +0800
@@ -41,7 +41,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -93,7 +93,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -117,7 +117,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_07.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_07.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_07.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_07.c	2025-05-05 11:26:01.891326401 +0800
@@ -41,7 +41,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -93,7 +93,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -117,7 +117,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_08.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_08.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_08.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_08.c	2025-05-05 11:26:01.845325398 +0800
@@ -49,7 +49,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -101,7 +101,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -125,7 +125,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -145,7 +145,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_09.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_09.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_09.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_09.c	2025-05-05 11:26:01.840325288 +0800
@@ -36,7 +36,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -88,7 +88,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_10.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_10.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_10.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_10.c	2025-05-05 11:26:01.887326314 +0800
@@ -36,7 +36,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_11.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_11.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_11.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_11.c	2025-05-05 11:26:01.876326074 +0800
@@ -36,7 +36,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_12.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_12.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_12.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_12.c	2025-05-05 11:26:01.845325398 +0800
@@ -44,13 +44,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -86,12 +86,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -120,12 +120,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_13.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_13.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_13.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_13.c	2025-05-05 11:26:01.847325441 +0800
@@ -36,7 +36,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -88,7 +88,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_14.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_14.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_14.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_14.c	2025-05-05 11:26:01.900326597 +0800
@@ -36,7 +36,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_15.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_15.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_15.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_15.c	2025-05-05 11:26:01.858325681 +0800
@@ -43,7 +43,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -85,7 +85,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
         break;
     }
 }
@@ -114,7 +114,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -145,7 +145,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -177,7 +177,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_16.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_16.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_16.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_16.c	2025-05-05 11:26:01.879326139 +0800
@@ -37,7 +37,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -65,7 +65,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
         break;
     }
 }
@@ -86,7 +86,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_17.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_17.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_17.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_17.c	2025-05-05 11:26:01.856325638 +0800
@@ -37,7 +37,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -64,7 +64,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -84,7 +84,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_18.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_18.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_18.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_18.c	2025-05-05 11:26:01.981328364 +0800
@@ -35,7 +35,7 @@
     printIntLine(data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -76,7 +76,7 @@
     printIntLine(data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_21.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_21.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_21.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_21.c	2025-05-05 11:26:01.860325725 +0800
@@ -28,7 +28,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -91,7 +91,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -114,7 +114,7 @@
 {
     if(goodG2BStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_22b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_22b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_22b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_22b.c	2025-05-05 11:26:01.853325572 +0800
@@ -28,7 +28,7 @@
 {
     if(CWE401_Memory_Leak__int_calloc_22_badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -53,7 +53,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -63,7 +63,7 @@
     if(CWE401_Memory_Leak__int_calloc_22_goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -72,7 +72,7 @@
 {
     if(CWE401_Memory_Leak__int_calloc_22_goodG2BGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_31.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_31.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_31.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_31.c	2025-05-05 11:26:01.891326401 +0800
@@ -34,7 +34,7 @@
     {
         int * dataCopy = data;
         int * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -56,7 +56,7 @@
     {
         int * dataCopy = data;
         int * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -76,7 +76,7 @@
         int * dataCopy = data;
         int * data = dataCopy;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_32.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_32.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_32.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_32.c	2025-05-05 11:26:01.894326467 +0800
@@ -39,7 +39,7 @@
     }
     {
         int * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     }
     {
         int * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -91,7 +91,7 @@
     {
         int * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_33.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_33.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_33.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_33.cpp	2025-05-05 11:26:01.850325507 +0800
@@ -37,7 +37,7 @@
     printIntLine(data[0]);
     {
         int * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -59,7 +59,7 @@
     printIntLine(data[0]);
     {
         int * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -79,7 +79,7 @@
     {
         int * data = dataRef;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_34.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_34.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_34.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_34.c	2025-05-05 11:26:01.856325638 +0800
@@ -41,7 +41,7 @@
     myUnion.unionFirst = data;
     {
         int * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -64,7 +64,7 @@
     myUnion.unionFirst = data;
     {
         int * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -85,7 +85,7 @@
     {
         int * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_41.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_41.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_41.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_41.c	2025-05-05 11:26:01.840325288 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 static void goodG2BSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -67,7 +67,7 @@
 static void goodB2GSink(int * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_42.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_42.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_42.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_42.c	2025-05-05 11:26:01.974328212 +0800
@@ -37,7 +37,7 @@
     int * data;
     data = NULL;
     data = badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     int * data;
     data = NULL;
     data = goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -83,7 +83,7 @@
     data = NULL;
     data = goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 void CWE401_Memory_Leak__int_calloc_42_good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_43.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_43.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_43.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_43.cpp	2025-05-05 11:26:01.855325616 +0800
@@ -39,7 +39,7 @@
     int * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -62,7 +62,7 @@
     int * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -83,7 +83,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_44.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_44.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_44.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_44.c	2025-05-05 11:26:01.869325921 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -71,7 +71,7 @@
 static void goodB2GSink(int * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_45.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_45.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_45.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_45.c	2025-05-05 11:26:01.837325223 +0800
@@ -28,7 +28,7 @@
 static void badSink()
 {
     int * data = CWE401_Memory_Leak__int_calloc_45_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 static void goodG2BSink()
 {
     int * data = CWE401_Memory_Leak__int_calloc_45_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -76,7 +76,7 @@
 {
     int * data = CWE401_Memory_Leak__int_calloc_45_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_51b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_51b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_51b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_51b.c	2025-05-05 11:26:01.883326227 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int_calloc_51b_badSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int_calloc_51b_goodG2BSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int_calloc_51b_goodB2GSink(int * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_52c.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_52c.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_52c.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_52c.c	2025-05-05 11:26:01.877326096 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int_calloc_52c_badSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int_calloc_52c_goodG2BSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int_calloc_52c_goodB2GSink(int * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_53d.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_53d.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_53d.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_53d.c	2025-05-05 11:26:01.899326576 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int_calloc_53d_badSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int_calloc_53d_goodG2BSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int_calloc_53d_goodB2GSink(int * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_54e.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_54e.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_54e.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_54e.c	2025-05-05 11:26:01.894326467 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int_calloc_54e_badSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int_calloc_54e_goodG2BSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int_calloc_54e_goodB2GSink(int * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_61a.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_61a.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_61a.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_61a.c	2025-05-05 11:26:01.885326270 +0800
@@ -29,7 +29,7 @@
     int * data;
     data = NULL;
     data = CWE401_Memory_Leak__int_calloc_61b_badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
     int * data;
     data = NULL;
     data = CWE401_Memory_Leak__int_calloc_61b_goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -58,7 +58,7 @@
     data = NULL;
     data = CWE401_Memory_Leak__int_calloc_61b_goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 void CWE401_Memory_Leak__int_calloc_61_good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_62a.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_62a.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_62a.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_62a.cpp	2025-05-05 11:26:01.884326248 +0800
@@ -32,7 +32,7 @@
     int * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -48,7 +48,7 @@
     int * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_63b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_63b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_63b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_63b.c	2025-05-05 11:26:01.883326227 +0800
@@ -24,7 +24,7 @@
 void CWE401_Memory_Leak__int_calloc_63b_badSink(int * * dataPtr)
 {
     int * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -36,7 +36,7 @@
 void CWE401_Memory_Leak__int_calloc_63b_goodG2BSink(int * * dataPtr)
 {
     int * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 {
     int * data = *dataPtr;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_64b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_64b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_64b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_64b.c	2025-05-05 11:26:01.858325681 +0800
@@ -27,7 +27,7 @@
     int * * dataPtr = (int * *)dataVoidPtr;
     /* dereference dataPtr into data */
     int * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
     int * * dataPtr = (int * *)dataVoidPtr;
     /* dereference dataPtr into data */
     int * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
     /* dereference dataPtr into data */
     int * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_65b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_65b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_65b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_65b.c	2025-05-05 11:26:01.859325703 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int_calloc_65b_badSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int_calloc_65b_goodG2BSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int_calloc_65b_goodB2GSink(int * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_66b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_66b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_66b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_66b.c	2025-05-05 11:26:01.973328190 +0800
@@ -25,7 +25,7 @@
 {
     /* copy data out of dataArray */
     int * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -37,7 +37,7 @@
 void CWE401_Memory_Leak__int_calloc_66b_goodG2BSink(int * dataArray[])
 {
     int * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 {
     int * data = dataArray[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_67b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_67b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_67b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_67b.c	2025-05-05 11:26:01.969328103 +0800
@@ -29,7 +29,7 @@
 void CWE401_Memory_Leak__int_calloc_67b_badSink(CWE401_Memory_Leak__int_calloc_67_structType myStruct)
 {
     int * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void CWE401_Memory_Leak__int_calloc_67b_goodG2BSink(CWE401_Memory_Leak__int_calloc_67_structType myStruct)
 {
     int * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     int * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_68b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_68b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_68b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_68b.c	2025-05-05 11:26:01.849325485 +0800
@@ -28,7 +28,7 @@
 void CWE401_Memory_Leak__int_calloc_68b_badSink()
 {
     int * data = CWE401_Memory_Leak__int_calloc_68_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -40,7 +40,7 @@
 void CWE401_Memory_Leak__int_calloc_68b_goodG2BSink()
 {
     int * data = CWE401_Memory_Leak__int_calloc_68_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
 {
     int * data = CWE401_Memory_Leak__int_calloc_68_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_72b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_72b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_72b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_72b.cpp	2025-05-05 11:26:01.884326248 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataVector */
     int * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(vector<int *> dataVector)
 {
     int * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     int * data = dataVector[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_73b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_73b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_73b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_73b.cpp	2025-05-05 11:26:01.846325419 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataList */
     int * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(list<int *> dataList)
 {
     int * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     int * data = dataList.back();
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_74b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_74b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_74b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_74b.cpp	2025-05-05 11:26:01.885326270 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataMap */
     int * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(map<int, int *> dataMap)
 {
     int * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     int * data = dataMap[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_81_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_81_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_81_bad.cpp	2025-05-05 11:26:01.969328103 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__int_calloc_81_bad::action(int * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_81_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_81_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_81_goodB2G.cpp	2025-05-05 11:26:01.862325768 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__int_calloc_81_goodB2G::action(int * data) const
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_81_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_81_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_81_goodG2B.cpp	2025-05-05 11:26:01.973328190 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__int_calloc_81_goodG2B::action(int * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_82_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_82_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_82_bad.cpp	2025-05-05 11:26:01.843325354 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__int_calloc_82_bad::action(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_82_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_82_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_82_goodB2G.cpp	2025-05-05 11:26:01.855325616 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__int_calloc_82_goodB2G::action(int * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_82_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_82_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_82_goodG2B.cpp	2025-05-05 11:26:01.980328343 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__int_calloc_82_goodG2B::action(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_83_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_83_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_83_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_83_bad.cpp	2025-05-05 11:26:01.881326183 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__int_calloc_83_bad::~CWE401_Memory_Leak__int_calloc_83_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_83_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_83_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_83_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_83_goodB2G.cpp	2025-05-05 11:26:01.865325834 +0800
@@ -35,7 +35,7 @@
 CWE401_Memory_Leak__int_calloc_83_goodB2G::~CWE401_Memory_Leak__int_calloc_83_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_83_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_83_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_83_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_83_goodG2B.cpp	2025-05-05 11:26:01.875326052 +0800
@@ -33,7 +33,7 @@
 
 CWE401_Memory_Leak__int_calloc_83_goodG2B::~CWE401_Memory_Leak__int_calloc_83_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_84_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_84_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_84_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_84_bad.cpp	2025-05-05 11:26:01.983328408 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__int_calloc_84_bad::~CWE401_Memory_Leak__int_calloc_84_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_84_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_84_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_84_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_84_goodB2G.cpp	2025-05-05 11:26:01.871325965 +0800
@@ -35,7 +35,7 @@
 CWE401_Memory_Leak__int_calloc_84_goodB2G::~CWE401_Memory_Leak__int_calloc_84_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_84_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_84_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_84_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_84_goodG2B.cpp	2025-05-05 11:26:01.881326183 +0800
@@ -33,7 +33,7 @@
 
 CWE401_Memory_Leak__int_calloc_84_goodG2B::~CWE401_Memory_Leak__int_calloc_84_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_01.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_01.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_01.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_01.c	2025-05-05 11:26:01.842325332 +0800
@@ -31,7 +31,7 @@
     /* Initialize and make use of data */
     data[0] = 5;
     printIntLine(data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
     /* Initialize and make use of data */
     data[0] = 5;
     printIntLine(data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -65,7 +65,7 @@
     data[0] = 5;
     printIntLine(data[0]);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 void CWE401_Memory_Leak__int_malloc_01_good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_02.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_02.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_02.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_02.c	2025-05-05 11:26:01.849325485 +0800
@@ -36,7 +36,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -88,7 +88,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_03.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_03.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_03.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_03.c	2025-05-05 11:26:01.978328299 +0800
@@ -36,7 +36,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -88,7 +88,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_04.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_04.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_04.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_04.c	2025-05-05 11:26:01.886326292 +0800
@@ -42,7 +42,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -94,7 +94,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -138,7 +138,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_05.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_05.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_05.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_05.c	2025-05-05 11:26:01.846325419 +0800
@@ -42,7 +42,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -94,7 +94,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -138,7 +138,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_06.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_06.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_06.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_06.c	2025-05-05 11:26:01.870325943 +0800
@@ -41,7 +41,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -93,7 +93,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -117,7 +117,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_07.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_07.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_07.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_07.c	2025-05-05 11:26:01.869325921 +0800
@@ -41,7 +41,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -93,7 +93,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -117,7 +117,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_08.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_08.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_08.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_08.c	2025-05-05 11:26:01.974328212 +0800
@@ -49,7 +49,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -101,7 +101,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -125,7 +125,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -145,7 +145,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_09.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_09.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_09.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_09.c	2025-05-05 11:26:01.870325943 +0800
@@ -36,7 +36,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -88,7 +88,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_10.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_10.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_10.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_10.c	2025-05-05 11:26:01.874326030 +0800
@@ -36,7 +36,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_11.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_11.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_11.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_11.c	2025-05-05 11:26:01.839325267 +0800
@@ -36,7 +36,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_12.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_12.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_12.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_12.c	2025-05-05 11:26:01.846325419 +0800
@@ -44,13 +44,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -86,12 +86,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -120,12 +120,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_13.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_13.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_13.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_13.c	2025-05-05 11:26:01.869325921 +0800
@@ -36,7 +36,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -88,7 +88,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_14.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_14.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_14.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_14.c	2025-05-05 11:26:01.865325834 +0800
@@ -36,7 +36,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_15.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_15.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_15.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_15.c	2025-05-05 11:26:01.895326488 +0800
@@ -43,7 +43,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -85,7 +85,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
         break;
     }
 }
@@ -114,7 +114,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -145,7 +145,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -177,7 +177,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_16.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_16.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_16.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_16.c	2025-05-05 11:26:01.888326336 +0800
@@ -37,7 +37,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -65,7 +65,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
         break;
     }
 }
@@ -86,7 +86,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_17.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_17.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_17.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_17.c	2025-05-05 11:26:01.883326227 +0800
@@ -37,7 +37,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -64,7 +64,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -84,7 +84,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_18.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_18.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_18.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_18.c	2025-05-05 11:26:01.981328364 +0800
@@ -35,7 +35,7 @@
     printIntLine(data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -76,7 +76,7 @@
     printIntLine(data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_21.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_21.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_21.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_21.c	2025-05-05 11:26:01.877326096 +0800
@@ -28,7 +28,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -91,7 +91,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -114,7 +114,7 @@
 {
     if(goodG2BStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_22b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_22b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_22b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_22b.c	2025-05-05 11:26:01.982328386 +0800
@@ -28,7 +28,7 @@
 {
     if(CWE401_Memory_Leak__int_malloc_22_badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -53,7 +53,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -63,7 +63,7 @@
     if(CWE401_Memory_Leak__int_malloc_22_goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -72,7 +72,7 @@
 {
     if(CWE401_Memory_Leak__int_malloc_22_goodG2BGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_31.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_31.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_31.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_31.c	2025-05-05 11:26:01.864325812 +0800
@@ -34,7 +34,7 @@
     {
         int * dataCopy = data;
         int * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -56,7 +56,7 @@
     {
         int * dataCopy = data;
         int * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -76,7 +76,7 @@
         int * dataCopy = data;
         int * data = dataCopy;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_32.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_32.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_32.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_32.c	2025-05-05 11:26:01.880326161 +0800
@@ -39,7 +39,7 @@
     }
     {
         int * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     }
     {
         int * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -91,7 +91,7 @@
     {
         int * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_33.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_33.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_33.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_33.cpp	2025-05-05 11:26:01.851325528 +0800
@@ -37,7 +37,7 @@
     printIntLine(data[0]);
     {
         int * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -59,7 +59,7 @@
     printIntLine(data[0]);
     {
         int * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -79,7 +79,7 @@
     {
         int * data = dataRef;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_34.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_34.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_34.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_34.c	2025-05-05 11:26:01.838325245 +0800
@@ -41,7 +41,7 @@
     myUnion.unionFirst = data;
     {
         int * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -64,7 +64,7 @@
     myUnion.unionFirst = data;
     {
         int * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -85,7 +85,7 @@
     {
         int * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_41.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_41.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_41.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_41.c	2025-05-05 11:26:01.892326423 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 static void goodG2BSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -67,7 +67,7 @@
 static void goodB2GSink(int * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_42.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_42.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_42.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_42.c	2025-05-05 11:26:01.859325703 +0800
@@ -37,7 +37,7 @@
     int * data;
     data = NULL;
     data = badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     int * data;
     data = NULL;
     data = goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -83,7 +83,7 @@
     data = NULL;
     data = goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 void CWE401_Memory_Leak__int_malloc_42_good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_43.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_43.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_43.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_43.cpp	2025-05-05 11:26:01.848325463 +0800
@@ -39,7 +39,7 @@
     int * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -62,7 +62,7 @@
     int * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -83,7 +83,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_44.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_44.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_44.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_44.c	2025-05-05 11:26:01.837325223 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -71,7 +71,7 @@
 static void goodB2GSink(int * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_45.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_45.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_45.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_45.c	2025-05-05 11:26:01.848325463 +0800
@@ -28,7 +28,7 @@
 static void badSink()
 {
     int * data = CWE401_Memory_Leak__int_malloc_45_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 static void goodG2BSink()
 {
     int * data = CWE401_Memory_Leak__int_malloc_45_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -76,7 +76,7 @@
 {
     int * data = CWE401_Memory_Leak__int_malloc_45_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_51b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_51b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_51b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_51b.c	2025-05-05 11:26:01.888326336 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int_malloc_51b_badSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int_malloc_51b_goodG2BSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int_malloc_51b_goodB2GSink(int * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_52c.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_52c.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_52c.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_52c.c	2025-05-05 11:26:01.873326008 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int_malloc_52c_badSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int_malloc_52c_goodG2BSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int_malloc_52c_goodB2GSink(int * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_53d.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_53d.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_53d.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_53d.c	2025-05-05 11:26:01.891326401 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int_malloc_53d_badSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int_malloc_53d_goodG2BSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int_malloc_53d_goodB2GSink(int * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_54e.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_54e.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_54e.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_54e.c	2025-05-05 11:26:01.864325812 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int_malloc_54e_badSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int_malloc_54e_goodG2BSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int_malloc_54e_goodB2GSink(int * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_61a.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_61a.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_61a.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_61a.c	2025-05-05 11:26:01.881326183 +0800
@@ -29,7 +29,7 @@
     int * data;
     data = NULL;
     data = CWE401_Memory_Leak__int_malloc_61b_badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
     int * data;
     data = NULL;
     data = CWE401_Memory_Leak__int_malloc_61b_goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -58,7 +58,7 @@
     data = NULL;
     data = CWE401_Memory_Leak__int_malloc_61b_goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 void CWE401_Memory_Leak__int_malloc_61_good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_62a.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_62a.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_62a.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_62a.cpp	2025-05-05 11:26:01.842325332 +0800
@@ -32,7 +32,7 @@
     int * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -48,7 +48,7 @@
     int * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_63b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_63b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_63b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_63b.c	2025-05-05 11:26:01.841325310 +0800
@@ -24,7 +24,7 @@
 void CWE401_Memory_Leak__int_malloc_63b_badSink(int * * dataPtr)
 {
     int * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -36,7 +36,7 @@
 void CWE401_Memory_Leak__int_malloc_63b_goodG2BSink(int * * dataPtr)
 {
     int * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 {
     int * data = *dataPtr;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_64b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_64b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_64b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_64b.c	2025-05-05 11:26:01.981328364 +0800
@@ -27,7 +27,7 @@
     int * * dataPtr = (int * *)dataVoidPtr;
     /* dereference dataPtr into data */
     int * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
     int * * dataPtr = (int * *)dataVoidPtr;
     /* dereference dataPtr into data */
     int * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
     /* dereference dataPtr into data */
     int * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_65b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_65b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_65b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_65b.c	2025-05-05 11:26:01.867325877 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int_malloc_65b_badSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int_malloc_65b_goodG2BSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int_malloc_65b_goodB2GSink(int * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_66b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_66b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_66b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_66b.c	2025-05-05 11:26:01.846325419 +0800
@@ -25,7 +25,7 @@
 {
     /* copy data out of dataArray */
     int * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -37,7 +37,7 @@
 void CWE401_Memory_Leak__int_malloc_66b_goodG2BSink(int * dataArray[])
 {
     int * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 {
     int * data = dataArray[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_67b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_67b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_67b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_67b.c	2025-05-05 11:26:01.841325310 +0800
@@ -29,7 +29,7 @@
 void CWE401_Memory_Leak__int_malloc_67b_badSink(CWE401_Memory_Leak__int_malloc_67_structType myStruct)
 {
     int * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void CWE401_Memory_Leak__int_malloc_67b_goodG2BSink(CWE401_Memory_Leak__int_malloc_67_structType myStruct)
 {
     int * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     int * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_68b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_68b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_68b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_68b.c	2025-05-05 11:26:01.886326292 +0800
@@ -28,7 +28,7 @@
 void CWE401_Memory_Leak__int_malloc_68b_badSink()
 {
     int * data = CWE401_Memory_Leak__int_malloc_68_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -40,7 +40,7 @@
 void CWE401_Memory_Leak__int_malloc_68b_goodG2BSink()
 {
     int * data = CWE401_Memory_Leak__int_malloc_68_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
 {
     int * data = CWE401_Memory_Leak__int_malloc_68_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_72b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_72b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_72b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_72b.cpp	2025-05-05 11:26:01.977328277 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataVector */
     int * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(vector<int *> dataVector)
 {
     int * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     int * data = dataVector[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_73b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_73b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_73b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_73b.cpp	2025-05-05 11:26:01.881326183 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataList */
     int * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(list<int *> dataList)
 {
     int * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     int * data = dataList.back();
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_74b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_74b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_74b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_74b.cpp	2025-05-05 11:26:01.875326052 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataMap */
     int * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(map<int, int *> dataMap)
 {
     int * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     int * data = dataMap[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_81_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_81_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_81_bad.cpp	2025-05-05 11:26:01.879326139 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__int_malloc_81_bad::action(int * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_81_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_81_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_81_goodB2G.cpp	2025-05-05 11:26:01.880326161 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__int_malloc_81_goodB2G::action(int * data) const
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_81_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_81_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_81_goodG2B.cpp	2025-05-05 11:26:01.895326488 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__int_malloc_81_goodG2B::action(int * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_82_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_82_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_82_bad.cpp	2025-05-05 11:26:01.865325834 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__int_malloc_82_bad::action(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_82_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_82_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_82_goodB2G.cpp	2025-05-05 11:26:01.980328343 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__int_malloc_82_goodB2G::action(int * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_82_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_82_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_82_goodG2B.cpp	2025-05-05 11:26:01.853325572 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__int_malloc_82_goodG2B::action(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_83_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_83_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_83_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_83_bad.cpp	2025-05-05 11:26:01.872325986 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__int_malloc_83_bad::~CWE401_Memory_Leak__int_malloc_83_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_83_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_83_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_83_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_83_goodB2G.cpp	2025-05-05 11:26:01.842325332 +0800
@@ -35,7 +35,7 @@
 CWE401_Memory_Leak__int_malloc_83_goodB2G::~CWE401_Memory_Leak__int_malloc_83_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_83_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_83_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_83_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_83_goodG2B.cpp	2025-05-05 11:26:01.900326597 +0800
@@ -33,7 +33,7 @@
 
 CWE401_Memory_Leak__int_malloc_83_goodG2B::~CWE401_Memory_Leak__int_malloc_83_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_84_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_84_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_84_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_84_bad.cpp	2025-05-05 11:26:01.982328386 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__int_malloc_84_bad::~CWE401_Memory_Leak__int_malloc_84_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_84_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_84_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_84_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_84_goodB2G.cpp	2025-05-05 11:26:01.852325550 +0800
@@ -35,7 +35,7 @@
 CWE401_Memory_Leak__int_malloc_84_goodB2G::~CWE401_Memory_Leak__int_malloc_84_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_84_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_84_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_84_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_84_goodG2B.cpp	2025-05-05 11:26:01.856325638 +0800
@@ -33,7 +33,7 @@
 
 CWE401_Memory_Leak__int_malloc_84_goodG2B::~CWE401_Memory_Leak__int_malloc_84_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_01.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_01.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_01.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_01.c	2025-05-05 11:26:01.899326576 +0800
@@ -31,7 +31,7 @@
     /* Initialize and make use of data */
     data[0] = 5;
     printIntLine(data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
     /* Initialize and make use of data */
     data[0] = 5;
     printIntLine(data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -65,7 +65,7 @@
     data[0] = 5;
     printIntLine(data[0]);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 void CWE401_Memory_Leak__int_realloc_01_good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_02.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_02.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_02.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_02.c	2025-05-05 11:26:01.874326030 +0800
@@ -36,7 +36,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -88,7 +88,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_03.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_03.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_03.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_03.c	2025-05-05 11:26:01.900326597 +0800
@@ -36,7 +36,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -88,7 +88,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_04.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_04.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_04.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_04.c	2025-05-05 11:26:01.860325725 +0800
@@ -42,7 +42,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -94,7 +94,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -138,7 +138,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_05.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_05.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_05.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_05.c	2025-05-05 11:26:01.898326554 +0800
@@ -42,7 +42,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -94,7 +94,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -138,7 +138,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_06.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_06.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_06.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_06.c	2025-05-05 11:26:01.871325965 +0800
@@ -41,7 +41,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -93,7 +93,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -117,7 +117,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_07.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_07.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_07.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_07.c	2025-05-05 11:26:01.882326205 +0800
@@ -41,7 +41,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -93,7 +93,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -117,7 +117,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_08.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_08.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_08.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_08.c	2025-05-05 11:26:01.971328146 +0800
@@ -49,7 +49,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -101,7 +101,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -125,7 +125,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -145,7 +145,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_09.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_09.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_09.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_09.c	2025-05-05 11:26:01.980328343 +0800
@@ -36,7 +36,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -88,7 +88,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_10.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_10.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_10.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_10.c	2025-05-05 11:26:01.854325594 +0800
@@ -36,7 +36,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_11.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_11.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_11.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_11.c	2025-05-05 11:26:01.840325288 +0800
@@ -36,7 +36,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_12.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_12.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_12.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_12.c	2025-05-05 11:26:01.887326314 +0800
@@ -44,13 +44,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -86,12 +86,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -120,12 +120,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_13.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_13.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_13.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_13.c	2025-05-05 11:26:01.843325354 +0800
@@ -36,7 +36,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -88,7 +88,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_14.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_14.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_14.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_14.c	2025-05-05 11:26:01.846325419 +0800
@@ -36,7 +36,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_15.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_15.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_15.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_15.c	2025-05-05 11:26:01.869325921 +0800
@@ -43,7 +43,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -85,7 +85,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
         break;
     }
 }
@@ -114,7 +114,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -145,7 +145,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -177,7 +177,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_16.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_16.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_16.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_16.c	2025-05-05 11:26:01.973328190 +0800
@@ -37,7 +37,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -65,7 +65,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
         break;
     }
 }
@@ -86,7 +86,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_17.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_17.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_17.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_17.c	2025-05-05 11:26:01.860325725 +0800
@@ -37,7 +37,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -64,7 +64,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -84,7 +84,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_18.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_18.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_18.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_18.c	2025-05-05 11:26:01.864325812 +0800
@@ -35,7 +35,7 @@
     printIntLine(data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -76,7 +76,7 @@
     printIntLine(data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_21.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_21.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_21.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_21.c	2025-05-05 11:26:01.842325332 +0800
@@ -28,7 +28,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -91,7 +91,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -114,7 +114,7 @@
 {
     if(goodG2BStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_22b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_22b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_22b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_22b.c	2025-05-05 11:26:01.862325768 +0800
@@ -28,7 +28,7 @@
 {
     if(CWE401_Memory_Leak__int_realloc_22_badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -53,7 +53,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -63,7 +63,7 @@
     if(CWE401_Memory_Leak__int_realloc_22_goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
@@ -72,7 +72,7 @@
 {
     if(CWE401_Memory_Leak__int_realloc_22_goodG2BGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_31.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_31.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_31.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_31.c	2025-05-05 11:26:01.859325703 +0800
@@ -34,7 +34,7 @@
     {
         int * dataCopy = data;
         int * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -56,7 +56,7 @@
     {
         int * dataCopy = data;
         int * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -76,7 +76,7 @@
         int * dataCopy = data;
         int * data = dataCopy;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_32.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_32.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_32.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_32.c	2025-05-05 11:26:01.892326423 +0800
@@ -39,7 +39,7 @@
     }
     {
         int * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     }
     {
         int * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -91,7 +91,7 @@
     {
         int * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_33.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_33.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_33.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_33.cpp	2025-05-05 11:26:01.882326205 +0800
@@ -37,7 +37,7 @@
     printIntLine(data[0]);
     {
         int * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -59,7 +59,7 @@
     printIntLine(data[0]);
     {
         int * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -79,7 +79,7 @@
     {
         int * data = dataRef;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_34.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_34.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_34.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_34.c	2025-05-05 11:26:01.848325463 +0800
@@ -41,7 +41,7 @@
     myUnion.unionFirst = data;
     {
         int * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -64,7 +64,7 @@
     myUnion.unionFirst = data;
     {
         int * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_int(data, no_free_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -85,7 +85,7 @@
     {
         int * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_41.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_41.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_41.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_41.c	2025-05-05 11:26:01.972328168 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 static void goodG2BSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -67,7 +67,7 @@
 static void goodB2GSink(int * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_42.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_42.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_42.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_42.c	2025-05-05 11:26:01.850325507 +0800
@@ -37,7 +37,7 @@
     int * data;
     data = NULL;
     data = badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     int * data;
     data = NULL;
     data = goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -83,7 +83,7 @@
     data = NULL;
     data = goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 void CWE401_Memory_Leak__int_realloc_42_good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_43.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_43.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_43.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_43.cpp	2025-05-05 11:26:01.881326183 +0800
@@ -39,7 +39,7 @@
     int * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -62,7 +62,7 @@
     int * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -83,7 +83,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_44.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_44.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_44.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_44.c	2025-05-05 11:26:01.971328146 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -71,7 +71,7 @@
 static void goodB2GSink(int * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_45.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_45.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_45.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_45.c	2025-05-05 11:26:01.896326510 +0800
@@ -28,7 +28,7 @@
 static void badSink()
 {
     int * data = CWE401_Memory_Leak__int_realloc_45_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 static void goodG2BSink()
 {
     int * data = CWE401_Memory_Leak__int_realloc_45_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -76,7 +76,7 @@
 {
     int * data = CWE401_Memory_Leak__int_realloc_45_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_51b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_51b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_51b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_51b.c	2025-05-05 11:26:01.880326161 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int_realloc_51b_badSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int_realloc_51b_goodG2BSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int_realloc_51b_goodB2GSink(int * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_52c.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_52c.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_52c.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_52c.c	2025-05-05 11:26:01.974328212 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int_realloc_52c_badSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int_realloc_52c_goodG2BSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int_realloc_52c_goodB2GSink(int * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_53d.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_53d.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_53d.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_53d.c	2025-05-05 11:26:01.896326510 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int_realloc_53d_badSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int_realloc_53d_goodG2BSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int_realloc_53d_goodB2GSink(int * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_54e.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_54e.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_54e.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_54e.c	2025-05-05 11:26:01.899326576 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int_realloc_54e_badSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int_realloc_54e_goodG2BSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int_realloc_54e_goodB2GSink(int * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_61a.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_61a.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_61a.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_61a.c	2025-05-05 11:26:01.970328124 +0800
@@ -29,7 +29,7 @@
     int * data;
     data = NULL;
     data = CWE401_Memory_Leak__int_realloc_61b_badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
     int * data;
     data = NULL;
     data = CWE401_Memory_Leak__int_realloc_61b_goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -58,7 +58,7 @@
     data = NULL;
     data = CWE401_Memory_Leak__int_realloc_61b_goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 void CWE401_Memory_Leak__int_realloc_61_good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_62a.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_62a.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_62a.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_62a.cpp	2025-05-05 11:26:01.873326008 +0800
@@ -32,7 +32,7 @@
     int * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -48,7 +48,7 @@
     int * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_63b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_63b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_63b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_63b.c	2025-05-05 11:26:01.885326270 +0800
@@ -24,7 +24,7 @@
 void CWE401_Memory_Leak__int_realloc_63b_badSink(int * * dataPtr)
 {
     int * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -36,7 +36,7 @@
 void CWE401_Memory_Leak__int_realloc_63b_goodG2BSink(int * * dataPtr)
 {
     int * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 {
     int * data = *dataPtr;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_64b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_64b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_64b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_64b.c	2025-05-05 11:26:01.976328255 +0800
@@ -27,7 +27,7 @@
     int * * dataPtr = (int * *)dataVoidPtr;
     /* dereference dataPtr into data */
     int * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
     int * * dataPtr = (int * *)dataVoidPtr;
     /* dereference dataPtr into data */
     int * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
     /* dereference dataPtr into data */
     int * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_65b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_65b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_65b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_65b.c	2025-05-05 11:26:01.970328124 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__int_realloc_65b_badSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__int_realloc_65b_goodG2BSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__int_realloc_65b_goodB2GSink(int * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_66b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_66b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_66b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_66b.c	2025-05-05 11:26:01.839325267 +0800
@@ -25,7 +25,7 @@
 {
     /* copy data out of dataArray */
     int * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -37,7 +37,7 @@
 void CWE401_Memory_Leak__int_realloc_66b_goodG2BSink(int * dataArray[])
 {
     int * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 {
     int * data = dataArray[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_67b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_67b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_67b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_67b.c	2025-05-05 11:26:01.836325201 +0800
@@ -29,7 +29,7 @@
 void CWE401_Memory_Leak__int_realloc_67b_badSink(CWE401_Memory_Leak__int_realloc_67_structType myStruct)
 {
     int * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void CWE401_Memory_Leak__int_realloc_67b_goodG2BSink(CWE401_Memory_Leak__int_realloc_67_structType myStruct)
 {
     int * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     int * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_68b.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_68b.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_68b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_68b.c	2025-05-05 11:26:01.976328255 +0800
@@ -28,7 +28,7 @@
 void CWE401_Memory_Leak__int_realloc_68b_badSink()
 {
     int * data = CWE401_Memory_Leak__int_realloc_68_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -40,7 +40,7 @@
 void CWE401_Memory_Leak__int_realloc_68b_goodG2BSink()
 {
     int * data = CWE401_Memory_Leak__int_realloc_68_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
 {
     int * data = CWE401_Memory_Leak__int_realloc_68_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_72b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_72b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_72b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_72b.cpp	2025-05-05 11:26:01.894326467 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataVector */
     int * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(vector<int *> dataVector)
 {
     int * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     int * data = dataVector[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_73b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_73b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_73b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_73b.cpp	2025-05-05 11:26:01.976328255 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataList */
     int * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(list<int *> dataList)
 {
     int * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     int * data = dataList.back();
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_74b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_74b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_74b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_74b.cpp	2025-05-05 11:26:01.841325310 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataMap */
     int * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(map<int, int *> dataMap)
 {
     int * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     int * data = dataMap[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_81_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_81_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_81_bad.cpp	2025-05-05 11:26:01.981328364 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__int_realloc_81_bad::action(int * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_81_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_81_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_81_goodB2G.cpp	2025-05-05 11:26:01.977328277 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__int_realloc_81_goodB2G::action(int * data) const
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_81_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_81_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_81_goodG2B.cpp	2025-05-05 11:26:01.900326597 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__int_realloc_81_goodG2B::action(int * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_82_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_82_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_82_bad.cpp	2025-05-05 11:26:01.977328277 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__int_realloc_82_bad::action(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_82_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_82_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_82_goodB2G.cpp	2025-05-05 11:26:01.969328103 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__int_realloc_82_goodB2G::action(int * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_82_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_82_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_82_goodG2B.cpp	2025-05-05 11:26:01.888326336 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__int_realloc_82_goodG2B::action(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_83_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_83_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_83_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_83_bad.cpp	2025-05-05 11:26:01.875326052 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__int_realloc_83_bad::~CWE401_Memory_Leak__int_realloc_83_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_83_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_83_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_83_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_83_goodB2G.cpp	2025-05-05 11:26:01.866325856 +0800
@@ -35,7 +35,7 @@
 CWE401_Memory_Leak__int_realloc_83_goodB2G::~CWE401_Memory_Leak__int_realloc_83_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_83_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_83_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_83_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_83_goodG2B.cpp	2025-05-05 11:26:01.881326183 +0800
@@ -33,7 +33,7 @@
 
 CWE401_Memory_Leak__int_realloc_83_goodG2B::~CWE401_Memory_Leak__int_realloc_83_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_84_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_84_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_84_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_84_bad.cpp	2025-05-05 11:26:01.974328212 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__int_realloc_84_bad::~CWE401_Memory_Leak__int_realloc_84_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_84_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_84_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_84_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_84_goodB2G.cpp	2025-05-05 11:26:01.844325376 +0800
@@ -35,7 +35,7 @@
 CWE401_Memory_Leak__int_realloc_84_goodB2G::~CWE401_Memory_Leak__int_realloc_84_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_int(data, has_free_int);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_84_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_84_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_84_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_84_goodG2B.cpp	2025-05-05 11:26:01.885326270 +0800
@@ -33,7 +33,7 @@
 
 CWE401_Memory_Leak__int_realloc_84_goodG2B::~CWE401_Memory_Leak__int_realloc_84_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_int(data, no_free_int);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_01.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_01.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_01.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_01.c	2025-05-05 11:26:01.859325703 +0800
@@ -36,7 +36,7 @@
             /* Reinitialize and make use of data */
             strcpy(data, "New String");
             printLine(data);
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
 }
@@ -64,7 +64,7 @@
             strcpy(data, "New String");
             printLine(data);
         }
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_02.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_02.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_02.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_02.c	2025-05-05 11:26:01.976328255 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 strcpy(data, "New String");
                 printLine(data);
-                free(data);
+                callback_char(data, has_free_char);
             }
         }
     }
@@ -75,7 +75,7 @@
                 strcpy(data, "New String");
                 printLine(data);
             }
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
 }
@@ -102,7 +102,7 @@
                 strcpy(data, "New String");
                 printLine(data);
             }
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_03.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_03.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_03.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_03.c	2025-05-05 11:26:01.980328343 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 strcpy(data, "New String");
                 printLine(data);
-                free(data);
+                callback_char(data, has_free_char);
             }
         }
     }
@@ -75,7 +75,7 @@
                 strcpy(data, "New String");
                 printLine(data);
             }
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
 }
@@ -102,7 +102,7 @@
                 strcpy(data, "New String");
                 printLine(data);
             }
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_04.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_04.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_04.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_04.c	2025-05-05 11:26:01.866325856 +0800
@@ -44,7 +44,7 @@
                 /* Reinitialize and make use of data */
                 strcpy(data, "New String");
                 printLine(data);
-                free(data);
+                callback_char(data, has_free_char);
             }
         }
     }
@@ -81,7 +81,7 @@
                 strcpy(data, "New String");
                 printLine(data);
             }
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
 }
@@ -108,7 +108,7 @@
                 strcpy(data, "New String");
                 printLine(data);
             }
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_05.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_05.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_05.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_05.c	2025-05-05 11:26:01.977328277 +0800
@@ -44,7 +44,7 @@
                 /* Reinitialize and make use of data */
                 strcpy(data, "New String");
                 printLine(data);
-                free(data);
+                callback_char(data, has_free_char);
             }
         }
     }
@@ -81,7 +81,7 @@
                 strcpy(data, "New String");
                 printLine(data);
             }
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
 }
@@ -108,7 +108,7 @@
                 strcpy(data, "New String");
                 printLine(data);
             }
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_06.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_06.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_06.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_06.c	2025-05-05 11:26:01.860325725 +0800
@@ -43,7 +43,7 @@
                 /* Reinitialize and make use of data */
                 strcpy(data, "New String");
                 printLine(data);
-                free(data);
+                callback_char(data, has_free_char);
             }
         }
     }
@@ -80,7 +80,7 @@
                 strcpy(data, "New String");
                 printLine(data);
             }
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
 }
@@ -107,7 +107,7 @@
                 strcpy(data, "New String");
                 printLine(data);
             }
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_07.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_07.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_07.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_07.c	2025-05-05 11:26:01.876326074 +0800
@@ -43,7 +43,7 @@
                 /* Reinitialize and make use of data */
                 strcpy(data, "New String");
                 printLine(data);
-                free(data);
+                callback_char(data, has_free_char);
             }
         }
     }
@@ -80,7 +80,7 @@
                 strcpy(data, "New String");
                 printLine(data);
             }
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
 }
@@ -107,7 +107,7 @@
                 strcpy(data, "New String");
                 printLine(data);
             }
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_08.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_08.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_08.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_08.c	2025-05-05 11:26:01.974328212 +0800
@@ -51,7 +51,7 @@
                 /* Reinitialize and make use of data */
                 strcpy(data, "New String");
                 printLine(data);
-                free(data);
+                callback_char(data, has_free_char);
             }
         }
     }
@@ -88,7 +88,7 @@
                 strcpy(data, "New String");
                 printLine(data);
             }
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
 }
@@ -115,7 +115,7 @@
                 strcpy(data, "New String");
                 printLine(data);
             }
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_09.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_09.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_09.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_09.c	2025-05-05 11:26:01.881326183 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 strcpy(data, "New String");
                 printLine(data);
-                free(data);
+                callback_char(data, has_free_char);
             }
         }
     }
@@ -75,7 +75,7 @@
                 strcpy(data, "New String");
                 printLine(data);
             }
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
 }
@@ -102,7 +102,7 @@
                 strcpy(data, "New String");
                 printLine(data);
             }
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_10.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_10.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_10.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_10.c	2025-05-05 11:26:01.875326052 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 strcpy(data, "New String");
                 printLine(data);
-                free(data);
+                callback_char(data, has_free_char);
             }
         }
     }
@@ -75,7 +75,7 @@
                 strcpy(data, "New String");
                 printLine(data);
             }
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
 }
@@ -102,7 +102,7 @@
                 strcpy(data, "New String");
                 printLine(data);
             }
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_11.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_11.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_11.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_11.c	2025-05-05 11:26:01.981328364 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 strcpy(data, "New String");
                 printLine(data);
-                free(data);
+                callback_char(data, has_free_char);
             }
         }
     }
@@ -75,7 +75,7 @@
                 strcpy(data, "New String");
                 printLine(data);
             }
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
 }
@@ -102,7 +102,7 @@
                 strcpy(data, "New String");
                 printLine(data);
             }
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_12.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_12.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_12.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_12.c	2025-05-05 11:26:01.975328234 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 strcpy(data, "New String");
                 printLine(data);
-                free(data);
+                callback_char(data, has_free_char);
             }
         }
     }
@@ -61,7 +61,7 @@
                 strcpy(data, "New String");
                 printLine(data);
             }
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
 }
@@ -92,7 +92,7 @@
                 strcpy(data, "New String");
                 printLine(data);
             }
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
     else
@@ -114,7 +114,7 @@
                 strcpy(data, "New String");
                 printLine(data);
             }
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_13.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_13.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_13.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_13.c	2025-05-05 11:26:01.892326423 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 strcpy(data, "New String");
                 printLine(data);
-                free(data);
+                callback_char(data, has_free_char);
             }
         }
     }
@@ -75,7 +75,7 @@
                 strcpy(data, "New String");
                 printLine(data);
             }
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
 }
@@ -102,7 +102,7 @@
                 strcpy(data, "New String");
                 printLine(data);
             }
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_14.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_14.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_14.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_14.c	2025-05-05 11:26:01.979328321 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 strcpy(data, "New String");
                 printLine(data);
-                free(data);
+                callback_char(data, has_free_char);
             }
         }
     }
@@ -75,7 +75,7 @@
                 strcpy(data, "New String");
                 printLine(data);
             }
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
 }
@@ -102,7 +102,7 @@
                 strcpy(data, "New String");
                 printLine(data);
             }
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_15.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_15.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_15.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_15.c	2025-05-05 11:26:01.865325834 +0800
@@ -39,7 +39,7 @@
             /* Reinitialize and make use of data */
             strcpy(data, "New String");
             printLine(data);
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
     break;
@@ -81,7 +81,7 @@
             strcpy(data, "New String");
             printLine(data);
         }
-        free(data);
+        callback_char(data, has_free_char);
     }
     break;
     }
@@ -110,7 +110,7 @@
             strcpy(data, "New String");
             printLine(data);
         }
-        free(data);
+        callback_char(data, has_free_char);
     }
     break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_16.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_16.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_16.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_16.c	2025-05-05 11:26:01.876326074 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 strcpy(data, "New String");
                 printLine(data);
-                free(data);
+                callback_char(data, has_free_char);
             }
         }
         break;
@@ -71,7 +71,7 @@
                 strcpy(data, "New String");
                 printLine(data);
             }
-            free(data);
+            callback_char(data, has_free_char);
         }
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_17.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_17.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_17.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_17.c	2025-05-05 11:26:01.973328190 +0800
@@ -39,7 +39,7 @@
                 /* Reinitialize and make use of data */
                 strcpy(data, "New String");
                 printLine(data);
-                free(data);
+                callback_char(data, has_free_char);
             }
         }
     }
@@ -72,7 +72,7 @@
                 strcpy(data, "New String");
                 printLine(data);
             }
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_18.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_18.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_18.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_18.c	2025-05-05 11:26:01.858325681 +0800
@@ -38,7 +38,7 @@
             /* Reinitialize and make use of data */
             strcpy(data, "New String");
             printLine(data);
-            free(data);
+            callback_char(data, has_free_char);
         }
     }
 }
@@ -69,7 +69,7 @@
             strcpy(data, "New String");
             printLine(data);
         }
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_01.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_01.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_01.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_01.c	2025-05-05 11:26:01.979328321 +0800
@@ -36,7 +36,7 @@
             /* Reinitialize and make use of data */
             data[0] = 10;
             printIntLine(data[0]);
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
 }
@@ -64,7 +64,7 @@
             data[0] = 10;
             printIntLine(data[0]);
         }
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_02.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_02.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_02.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_02.c	2025-05-05 11:26:01.896326510 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10;
                 printIntLine(data[0]);
-                free(data);
+                callback_int(data, has_free_int);
             }
         }
     }
@@ -75,7 +75,7 @@
                 data[0] = 10;
                 printIntLine(data[0]);
             }
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
 }
@@ -102,7 +102,7 @@
                 data[0] = 10;
                 printIntLine(data[0]);
             }
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_03.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_03.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_03.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_03.c	2025-05-05 11:26:01.846325419 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10;
                 printIntLine(data[0]);
-                free(data);
+                callback_int(data, has_free_int);
             }
         }
     }
@@ -75,7 +75,7 @@
                 data[0] = 10;
                 printIntLine(data[0]);
             }
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
 }
@@ -102,7 +102,7 @@
                 data[0] = 10;
                 printIntLine(data[0]);
             }
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_04.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_04.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_04.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_04.c	2025-05-05 11:26:01.891326401 +0800
@@ -44,7 +44,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10;
                 printIntLine(data[0]);
-                free(data);
+                callback_int(data, has_free_int);
             }
         }
     }
@@ -81,7 +81,7 @@
                 data[0] = 10;
                 printIntLine(data[0]);
             }
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
 }
@@ -108,7 +108,7 @@
                 data[0] = 10;
                 printIntLine(data[0]);
             }
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_05.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_05.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_05.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_05.c	2025-05-05 11:26:01.863325790 +0800
@@ -44,7 +44,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10;
                 printIntLine(data[0]);
-                free(data);
+                callback_int(data, has_free_int);
             }
         }
     }
@@ -81,7 +81,7 @@
                 data[0] = 10;
                 printIntLine(data[0]);
             }
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
 }
@@ -108,7 +108,7 @@
                 data[0] = 10;
                 printIntLine(data[0]);
             }
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_06.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_06.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_06.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_06.c	2025-05-05 11:26:01.976328255 +0800
@@ -43,7 +43,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10;
                 printIntLine(data[0]);
-                free(data);
+                callback_int(data, has_free_int);
             }
         }
     }
@@ -80,7 +80,7 @@
                 data[0] = 10;
                 printIntLine(data[0]);
             }
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
 }
@@ -107,7 +107,7 @@
                 data[0] = 10;
                 printIntLine(data[0]);
             }
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_07.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_07.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_07.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_07.c	2025-05-05 11:26:01.887326314 +0800
@@ -43,7 +43,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10;
                 printIntLine(data[0]);
-                free(data);
+                callback_int(data, has_free_int);
             }
         }
     }
@@ -80,7 +80,7 @@
                 data[0] = 10;
                 printIntLine(data[0]);
             }
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
 }
@@ -107,7 +107,7 @@
                 data[0] = 10;
                 printIntLine(data[0]);
             }
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_08.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_08.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_08.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_08.c	2025-05-05 11:26:01.854325594 +0800
@@ -51,7 +51,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10;
                 printIntLine(data[0]);
-                free(data);
+                callback_int(data, has_free_int);
             }
         }
     }
@@ -88,7 +88,7 @@
                 data[0] = 10;
                 printIntLine(data[0]);
             }
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
 }
@@ -115,7 +115,7 @@
                 data[0] = 10;
                 printIntLine(data[0]);
             }
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_09.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_09.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_09.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_09.c	2025-05-05 11:26:01.872325986 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10;
                 printIntLine(data[0]);
-                free(data);
+                callback_int(data, has_free_int);
             }
         }
     }
@@ -75,7 +75,7 @@
                 data[0] = 10;
                 printIntLine(data[0]);
             }
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
 }
@@ -102,7 +102,7 @@
                 data[0] = 10;
                 printIntLine(data[0]);
             }
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_10.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_10.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_10.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_10.c	2025-05-05 11:26:01.898326554 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10;
                 printIntLine(data[0]);
-                free(data);
+                callback_int(data, has_free_int);
             }
         }
     }
@@ -75,7 +75,7 @@
                 data[0] = 10;
                 printIntLine(data[0]);
             }
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
 }
@@ -102,7 +102,7 @@
                 data[0] = 10;
                 printIntLine(data[0]);
             }
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_11.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_11.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_11.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_11.c	2025-05-05 11:26:01.855325616 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10;
                 printIntLine(data[0]);
-                free(data);
+                callback_int(data, has_free_int);
             }
         }
     }
@@ -75,7 +75,7 @@
                 data[0] = 10;
                 printIntLine(data[0]);
             }
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
 }
@@ -102,7 +102,7 @@
                 data[0] = 10;
                 printIntLine(data[0]);
             }
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_12.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_12.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_12.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_12.c	2025-05-05 11:26:01.971328146 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10;
                 printIntLine(data[0]);
-                free(data);
+                callback_int(data, has_free_int);
             }
         }
     }
@@ -61,7 +61,7 @@
                 data[0] = 10;
                 printIntLine(data[0]);
             }
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
 }
@@ -92,7 +92,7 @@
                 data[0] = 10;
                 printIntLine(data[0]);
             }
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
     else
@@ -114,7 +114,7 @@
                 data[0] = 10;
                 printIntLine(data[0]);
             }
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_13.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_13.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_13.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_13.c	2025-05-05 11:26:01.870325943 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10;
                 printIntLine(data[0]);
-                free(data);
+                callback_int(data, has_free_int);
             }
         }
     }
@@ -75,7 +75,7 @@
                 data[0] = 10;
                 printIntLine(data[0]);
             }
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
 }
@@ -102,7 +102,7 @@
                 data[0] = 10;
                 printIntLine(data[0]);
             }
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_14.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_14.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_14.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_14.c	2025-05-05 11:26:01.851325528 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10;
                 printIntLine(data[0]);
-                free(data);
+                callback_int(data, has_free_int);
             }
         }
     }
@@ -75,7 +75,7 @@
                 data[0] = 10;
                 printIntLine(data[0]);
             }
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
 }
@@ -102,7 +102,7 @@
                 data[0] = 10;
                 printIntLine(data[0]);
             }
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_15.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_15.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_15.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_15.c	2025-05-05 11:26:01.981328364 +0800
@@ -39,7 +39,7 @@
             /* Reinitialize and make use of data */
             data[0] = 10;
             printIntLine(data[0]);
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
     break;
@@ -81,7 +81,7 @@
             data[0] = 10;
             printIntLine(data[0]);
         }
-        free(data);
+        callback_int(data, has_free_int);
     }
     break;
     }
@@ -110,7 +110,7 @@
             data[0] = 10;
             printIntLine(data[0]);
         }
-        free(data);
+        callback_int(data, has_free_int);
     }
     break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_16.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_16.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_16.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_16.c	2025-05-05 11:26:01.878326117 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10;
                 printIntLine(data[0]);
-                free(data);
+                callback_int(data, has_free_int);
             }
         }
         break;
@@ -71,7 +71,7 @@
                 data[0] = 10;
                 printIntLine(data[0]);
             }
-            free(data);
+            callback_int(data, has_free_int);
         }
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_17.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_17.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_17.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_17.c	2025-05-05 11:26:01.896326510 +0800
@@ -39,7 +39,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10;
                 printIntLine(data[0]);
-                free(data);
+                callback_int(data, has_free_int);
             }
         }
     }
@@ -72,7 +72,7 @@
                 data[0] = 10;
                 printIntLine(data[0]);
             }
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_18.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_18.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_18.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int_18.c	2025-05-05 11:26:01.856325638 +0800
@@ -38,7 +38,7 @@
             /* Reinitialize and make use of data */
             data[0] = 10;
             printIntLine(data[0]);
-            free(data);
+            callback_int(data, has_free_int);
         }
     }
 }
@@ -69,7 +69,7 @@
             data[0] = 10;
             printIntLine(data[0]);
         }
-        free(data);
+        callback_int(data, has_free_int);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_01.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_01.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_01.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_01.c	2025-05-05 11:26:01.978328299 +0800
@@ -36,7 +36,7 @@
             /* Reinitialize and make use of data */
             data[0] = 10LL;
             printLongLongLine(data[0]);
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
 }
@@ -64,7 +64,7 @@
             data[0] = 10LL;
             printLongLongLine(data[0]);
         }
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_02.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_02.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_02.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_02.c	2025-05-05 11:26:01.968328081 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
-                free(data);
+                callback_int64(data, has_free_int64);
             }
         }
     }
@@ -75,7 +75,7 @@
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
             }
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
 }
@@ -102,7 +102,7 @@
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
             }
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_03.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_03.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_03.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_03.c	2025-05-05 11:26:01.879326139 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
-                free(data);
+                callback_int64(data, has_free_int64);
             }
         }
     }
@@ -75,7 +75,7 @@
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
             }
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
 }
@@ -102,7 +102,7 @@
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
             }
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_04.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_04.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_04.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_04.c	2025-05-05 11:26:01.866325856 +0800
@@ -44,7 +44,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
-                free(data);
+                callback_int64(data, has_free_int64);
             }
         }
     }
@@ -81,7 +81,7 @@
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
             }
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
 }
@@ -108,7 +108,7 @@
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
             }
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_05.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_05.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_05.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_05.c	2025-05-05 11:26:01.845325398 +0800
@@ -44,7 +44,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
-                free(data);
+                callback_int64(data, has_free_int64);
             }
         }
     }
@@ -81,7 +81,7 @@
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
             }
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
 }
@@ -108,7 +108,7 @@
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
             }
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_06.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_06.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_06.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_06.c	2025-05-05 11:26:01.849325485 +0800
@@ -43,7 +43,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
-                free(data);
+                callback_int64(data, has_free_int64);
             }
         }
     }
@@ -80,7 +80,7 @@
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
             }
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
 }
@@ -107,7 +107,7 @@
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
             }
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_07.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_07.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_07.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_07.c	2025-05-05 11:26:01.866325856 +0800
@@ -43,7 +43,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
-                free(data);
+                callback_int64(data, has_free_int64);
             }
         }
     }
@@ -80,7 +80,7 @@
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
             }
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
 }
@@ -107,7 +107,7 @@
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
             }
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_08.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_08.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_08.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_08.c	2025-05-05 11:26:01.844325376 +0800
@@ -51,7 +51,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
-                free(data);
+                callback_int64(data, has_free_int64);
             }
         }
     }
@@ -88,7 +88,7 @@
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
             }
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
 }
@@ -115,7 +115,7 @@
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
             }
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_09.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_09.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_09.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_09.c	2025-05-05 11:26:01.847325441 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
-                free(data);
+                callback_int64(data, has_free_int64);
             }
         }
     }
@@ -75,7 +75,7 @@
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
             }
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
 }
@@ -102,7 +102,7 @@
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
             }
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_10.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_10.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_10.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_10.c	2025-05-05 11:26:01.887326314 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
-                free(data);
+                callback_int64(data, has_free_int64);
             }
         }
     }
@@ -75,7 +75,7 @@
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
             }
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
 }
@@ -102,7 +102,7 @@
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
             }
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_11.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_11.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_11.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_11.c	2025-05-05 11:26:01.878326117 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
-                free(data);
+                callback_int64(data, has_free_int64);
             }
         }
     }
@@ -75,7 +75,7 @@
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
             }
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
 }
@@ -102,7 +102,7 @@
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
             }
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_12.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_12.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_12.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_12.c	2025-05-05 11:26:01.836325201 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
-                free(data);
+                callback_int64(data, has_free_int64);
             }
         }
     }
@@ -61,7 +61,7 @@
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
             }
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
 }
@@ -92,7 +92,7 @@
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
             }
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
     else
@@ -114,7 +114,7 @@
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
             }
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_13.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_13.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_13.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_13.c	2025-05-05 11:26:01.982328386 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
-                free(data);
+                callback_int64(data, has_free_int64);
             }
         }
     }
@@ -75,7 +75,7 @@
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
             }
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
 }
@@ -102,7 +102,7 @@
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
             }
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_14.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_14.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_14.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_14.c	2025-05-05 11:26:01.899326576 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
-                free(data);
+                callback_int64(data, has_free_int64);
             }
         }
     }
@@ -75,7 +75,7 @@
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
             }
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
 }
@@ -102,7 +102,7 @@
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
             }
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_15.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_15.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_15.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_15.c	2025-05-05 11:26:01.895326488 +0800
@@ -39,7 +39,7 @@
             /* Reinitialize and make use of data */
             data[0] = 10LL;
             printLongLongLine(data[0]);
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
     break;
@@ -81,7 +81,7 @@
             data[0] = 10LL;
             printLongLongLine(data[0]);
         }
-        free(data);
+        callback_int64(data, has_free_int64);
     }
     break;
     }
@@ -110,7 +110,7 @@
             data[0] = 10LL;
             printLongLongLine(data[0]);
         }
-        free(data);
+        callback_int64(data, has_free_int64);
     }
     break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_16.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_16.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_16.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_16.c	2025-05-05 11:26:01.861325746 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
-                free(data);
+                callback_int64(data, has_free_int64);
             }
         }
         break;
@@ -71,7 +71,7 @@
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
             }
-            free(data);
+            callback_int64(data, has_free_int64);
         }
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_17.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_17.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_17.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_17.c	2025-05-05 11:26:01.971328146 +0800
@@ -39,7 +39,7 @@
                 /* Reinitialize and make use of data */
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
-                free(data);
+                callback_int64(data, has_free_int64);
             }
         }
     }
@@ -72,7 +72,7 @@
                 data[0] = 10LL;
                 printLongLongLine(data[0]);
             }
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_18.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_18.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_18.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_18.c	2025-05-05 11:26:01.983328408 +0800
@@ -38,7 +38,7 @@
             /* Reinitialize and make use of data */
             data[0] = 10LL;
             printLongLongLine(data[0]);
-            free(data);
+            callback_int64(data, has_free_int64);
         }
     }
 }
@@ -69,7 +69,7 @@
             data[0] = 10LL;
             printLongLongLine(data[0]);
         }
-        free(data);
+        callback_int64(data, has_free_int64);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_01.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_01.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_01.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_01.c	2025-05-05 11:26:01.855325616 +0800
@@ -38,7 +38,7 @@
             data[0].intOne = 1;
             data[0].intTwo = 1;
             printStructLine((twoIntsStruct *)&data[0]);
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -68,7 +68,7 @@
             data[0].intTwo = 1;
             printStructLine((twoIntsStruct *)&data[0]);
         }
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_02.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_02.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_02.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_02.c	2025-05-05 11:26:01.879326139 +0800
@@ -40,7 +40,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
     }
@@ -79,7 +79,7 @@
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -108,7 +108,7 @@
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_03.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_03.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_03.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_03.c	2025-05-05 11:26:01.873326008 +0800
@@ -40,7 +40,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
     }
@@ -79,7 +79,7 @@
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -108,7 +108,7 @@
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_04.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_04.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_04.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_04.c	2025-05-05 11:26:01.860325725 +0800
@@ -46,7 +46,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
     }
@@ -85,7 +85,7 @@
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -114,7 +114,7 @@
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_05.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_05.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_05.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_05.c	2025-05-05 11:26:01.864325812 +0800
@@ -46,7 +46,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
     }
@@ -85,7 +85,7 @@
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -114,7 +114,7 @@
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_06.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_06.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_06.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_06.c	2025-05-05 11:26:01.857325659 +0800
@@ -45,7 +45,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
     }
@@ -84,7 +84,7 @@
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -113,7 +113,7 @@
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_07.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_07.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_07.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_07.c	2025-05-05 11:26:01.872325986 +0800
@@ -45,7 +45,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
     }
@@ -84,7 +84,7 @@
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -113,7 +113,7 @@
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_08.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_08.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_08.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_08.c	2025-05-05 11:26:01.871325965 +0800
@@ -53,7 +53,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
     }
@@ -92,7 +92,7 @@
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -121,7 +121,7 @@
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_09.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_09.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_09.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_09.c	2025-05-05 11:26:01.897326532 +0800
@@ -40,7 +40,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
     }
@@ -79,7 +79,7 @@
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -108,7 +108,7 @@
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_10.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_10.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_10.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_10.c	2025-05-05 11:26:01.870325943 +0800
@@ -40,7 +40,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
     }
@@ -79,7 +79,7 @@
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -108,7 +108,7 @@
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_11.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_11.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_11.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_11.c	2025-05-05 11:26:01.885326270 +0800
@@ -40,7 +40,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
     }
@@ -79,7 +79,7 @@
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -108,7 +108,7 @@
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_12.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_12.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_12.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_12.c	2025-05-05 11:26:01.843325354 +0800
@@ -40,7 +40,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
     }
@@ -65,7 +65,7 @@
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -98,7 +98,7 @@
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
     else
@@ -122,7 +122,7 @@
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_13.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_13.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_13.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_13.c	2025-05-05 11:26:01.890326379 +0800
@@ -40,7 +40,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
     }
@@ -79,7 +79,7 @@
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -108,7 +108,7 @@
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_14.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_14.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_14.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_14.c	2025-05-05 11:26:01.844325376 +0800
@@ -40,7 +40,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
     }
@@ -79,7 +79,7 @@
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -108,7 +108,7 @@
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_15.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_15.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_15.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_15.c	2025-05-05 11:26:01.984328430 +0800
@@ -41,7 +41,7 @@
             data[0].intOne = 1;
             data[0].intTwo = 1;
             printStructLine((twoIntsStruct *)&data[0]);
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
     break;
@@ -85,7 +85,7 @@
             data[0].intTwo = 1;
             printStructLine((twoIntsStruct *)&data[0]);
         }
-        free(data);
+        callback_struct(data, has_free_struct);
     }
     break;
     }
@@ -116,7 +116,7 @@
             data[0].intTwo = 1;
             printStructLine((twoIntsStruct *)&data[0]);
         }
-        free(data);
+        callback_struct(data, has_free_struct);
     }
     break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_16.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_16.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_16.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_16.c	2025-05-05 11:26:01.875326052 +0800
@@ -40,7 +40,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
         break;
@@ -75,7 +75,7 @@
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_17.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_17.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_17.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_17.c	2025-05-05 11:26:01.867325877 +0800
@@ -41,7 +41,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
     }
@@ -76,7 +76,7 @@
                 data[0].intTwo = 1;
                 printStructLine((twoIntsStruct *)&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_18.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_18.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_18.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_struct_twoIntsStruct_18.c	2025-05-05 11:26:01.895326488 +0800
@@ -40,7 +40,7 @@
             data[0].intOne = 1;
             data[0].intTwo = 1;
             printStructLine((twoIntsStruct *)&data[0]);
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -73,7 +73,7 @@
             data[0].intTwo = 1;
             printStructLine((twoIntsStruct *)&data[0]);
         }
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_01.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_01.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_01.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_01.c	2025-05-05 11:26:01.853325572 +0800
@@ -38,7 +38,7 @@
             data[0].intOne = 1;
             data[0].intTwo = 1;
             printStructLine(&data[0]);
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -68,7 +68,7 @@
             data[0].intTwo = 1;
             printStructLine(&data[0]);
         }
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_02.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_02.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_02.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_02.c	2025-05-05 11:26:01.887326314 +0800
@@ -40,7 +40,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
     }
@@ -79,7 +79,7 @@
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -108,7 +108,7 @@
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_03.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_03.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_03.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_03.c	2025-05-05 11:26:01.864325812 +0800
@@ -40,7 +40,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
     }
@@ -79,7 +79,7 @@
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -108,7 +108,7 @@
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_04.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_04.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_04.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_04.c	2025-05-05 11:26:01.853325572 +0800
@@ -46,7 +46,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
     }
@@ -85,7 +85,7 @@
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -114,7 +114,7 @@
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_05.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_05.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_05.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_05.c	2025-05-05 11:26:01.838325245 +0800
@@ -46,7 +46,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
     }
@@ -85,7 +85,7 @@
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -114,7 +114,7 @@
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_06.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_06.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_06.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_06.c	2025-05-05 11:26:01.888326336 +0800
@@ -45,7 +45,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
     }
@@ -84,7 +84,7 @@
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -113,7 +113,7 @@
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_07.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_07.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_07.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_07.c	2025-05-05 11:26:01.864325812 +0800
@@ -45,7 +45,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
     }
@@ -84,7 +84,7 @@
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -113,7 +113,7 @@
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_08.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_08.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_08.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_08.c	2025-05-05 11:26:01.972328168 +0800
@@ -53,7 +53,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
     }
@@ -92,7 +92,7 @@
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -121,7 +121,7 @@
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_09.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_09.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_09.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_09.c	2025-05-05 11:26:01.850325507 +0800
@@ -40,7 +40,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
     }
@@ -79,7 +79,7 @@
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -108,7 +108,7 @@
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_10.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_10.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_10.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_10.c	2025-05-05 11:26:01.837325223 +0800
@@ -40,7 +40,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
     }
@@ -79,7 +79,7 @@
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -108,7 +108,7 @@
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_11.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_11.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_11.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_11.c	2025-05-05 11:26:01.850325507 +0800
@@ -40,7 +40,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
     }
@@ -79,7 +79,7 @@
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -108,7 +108,7 @@
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_12.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_12.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_12.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_12.c	2025-05-05 11:26:01.977328277 +0800
@@ -40,7 +40,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
     }
@@ -65,7 +65,7 @@
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -98,7 +98,7 @@
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
     else
@@ -122,7 +122,7 @@
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_13.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_13.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_13.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_13.c	2025-05-05 11:26:01.897326532 +0800
@@ -40,7 +40,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
     }
@@ -79,7 +79,7 @@
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -108,7 +108,7 @@
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_14.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_14.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_14.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_14.c	2025-05-05 11:26:01.842325332 +0800
@@ -40,7 +40,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
     }
@@ -79,7 +79,7 @@
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -108,7 +108,7 @@
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_15.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_15.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_15.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_15.c	2025-05-05 11:26:01.884326248 +0800
@@ -41,7 +41,7 @@
             data[0].intOne = 1;
             data[0].intTwo = 1;
             printStructLine(&data[0]);
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
     break;
@@ -85,7 +85,7 @@
             data[0].intTwo = 1;
             printStructLine(&data[0]);
         }
-        free(data);
+        callback_struct(data, has_free_struct);
     }
     break;
     }
@@ -116,7 +116,7 @@
             data[0].intTwo = 1;
             printStructLine(&data[0]);
         }
-        free(data);
+        callback_struct(data, has_free_struct);
     }
     break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_16.c	2025-05-05 11:26:01.983328408 +0800
@@ -40,7 +40,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
         break;
@@ -75,7 +75,7 @@
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_17.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_17.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_17.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_17.c	2025-05-05 11:26:01.893326445 +0800
@@ -41,7 +41,7 @@
                 data[0].intOne = 1;
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
-                free(data);
+                callback_struct(data, has_free_struct);
             }
         }
     }
@@ -76,7 +76,7 @@
                 data[0].intTwo = 1;
                 printStructLine(&data[0]);
             }
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_18.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_18.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_18.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_twoIntsStruct_18.c	2025-05-05 11:26:01.873326008 +0800
@@ -40,7 +40,7 @@
             data[0].intOne = 1;
             data[0].intTwo = 1;
             printStructLine(&data[0]);
-            free(data);
+            callback_struct(data, has_free_struct);
         }
     }
 }
@@ -73,7 +73,7 @@
             data[0].intTwo = 1;
             printStructLine(&data[0]);
         }
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_01.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_01.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_01.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_01.c	2025-05-05 11:26:01.842325332 +0800
@@ -36,7 +36,7 @@
             /* Reinitialize and make use of data */
             wcscpy(data, L"New String");
             printWLine(data);
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
 }
@@ -64,7 +64,7 @@
             wcscpy(data, L"New String");
             printWLine(data);
         }
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_02.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_02.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_02.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_02.c	2025-05-05 11:26:01.863325790 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 wcscpy(data, L"New String");
                 printWLine(data);
-                free(data);
+                callback_wchar(data, has_free_wchar);
             }
         }
     }
@@ -75,7 +75,7 @@
                 wcscpy(data, L"New String");
                 printWLine(data);
             }
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
 }
@@ -102,7 +102,7 @@
                 wcscpy(data, L"New String");
                 printWLine(data);
             }
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_03.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_03.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_03.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_03.c	2025-05-05 11:26:01.869325921 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 wcscpy(data, L"New String");
                 printWLine(data);
-                free(data);
+                callback_wchar(data, has_free_wchar);
             }
         }
     }
@@ -75,7 +75,7 @@
                 wcscpy(data, L"New String");
                 printWLine(data);
             }
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
 }
@@ -102,7 +102,7 @@
                 wcscpy(data, L"New String");
                 printWLine(data);
             }
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_04.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_04.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_04.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_04.c	2025-05-05 11:26:01.890326379 +0800
@@ -44,7 +44,7 @@
                 /* Reinitialize and make use of data */
                 wcscpy(data, L"New String");
                 printWLine(data);
-                free(data);
+                callback_wchar(data, has_free_wchar);
             }
         }
     }
@@ -81,7 +81,7 @@
                 wcscpy(data, L"New String");
                 printWLine(data);
             }
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
 }
@@ -108,7 +108,7 @@
                 wcscpy(data, L"New String");
                 printWLine(data);
             }
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_05.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_05.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_05.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_05.c	2025-05-05 11:26:01.971328146 +0800
@@ -44,7 +44,7 @@
                 /* Reinitialize and make use of data */
                 wcscpy(data, L"New String");
                 printWLine(data);
-                free(data);
+                callback_wchar(data, has_free_wchar);
             }
         }
     }
@@ -81,7 +81,7 @@
                 wcscpy(data, L"New String");
                 printWLine(data);
             }
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
 }
@@ -108,7 +108,7 @@
                 wcscpy(data, L"New String");
                 printWLine(data);
             }
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_06.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_06.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_06.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_06.c	2025-05-05 11:26:01.888326336 +0800
@@ -43,7 +43,7 @@
                 /* Reinitialize and make use of data */
                 wcscpy(data, L"New String");
                 printWLine(data);
-                free(data);
+                callback_wchar(data, has_free_wchar);
             }
         }
     }
@@ -80,7 +80,7 @@
                 wcscpy(data, L"New String");
                 printWLine(data);
             }
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
 }
@@ -107,7 +107,7 @@
                 wcscpy(data, L"New String");
                 printWLine(data);
             }
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_07.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_07.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_07.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_07.c	2025-05-05 11:26:01.972328168 +0800
@@ -43,7 +43,7 @@
                 /* Reinitialize and make use of data */
                 wcscpy(data, L"New String");
                 printWLine(data);
-                free(data);
+                callback_wchar(data, has_free_wchar);
             }
         }
     }
@@ -80,7 +80,7 @@
                 wcscpy(data, L"New String");
                 printWLine(data);
             }
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
 }
@@ -107,7 +107,7 @@
                 wcscpy(data, L"New String");
                 printWLine(data);
             }
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_08.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_08.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_08.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_08.c	2025-05-05 11:26:01.884326248 +0800
@@ -51,7 +51,7 @@
                 /* Reinitialize and make use of data */
                 wcscpy(data, L"New String");
                 printWLine(data);
-                free(data);
+                callback_wchar(data, has_free_wchar);
             }
         }
     }
@@ -88,7 +88,7 @@
                 wcscpy(data, L"New String");
                 printWLine(data);
             }
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
 }
@@ -115,7 +115,7 @@
                 wcscpy(data, L"New String");
                 printWLine(data);
             }
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_09.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_09.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_09.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_09.c	2025-05-05 11:26:01.843325354 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 wcscpy(data, L"New String");
                 printWLine(data);
-                free(data);
+                callback_wchar(data, has_free_wchar);
             }
         }
     }
@@ -75,7 +75,7 @@
                 wcscpy(data, L"New String");
                 printWLine(data);
             }
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
 }
@@ -102,7 +102,7 @@
                 wcscpy(data, L"New String");
                 printWLine(data);
             }
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_10.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_10.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_10.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_10.c	2025-05-05 11:26:01.978328299 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 wcscpy(data, L"New String");
                 printWLine(data);
-                free(data);
+                callback_wchar(data, has_free_wchar);
             }
         }
     }
@@ -75,7 +75,7 @@
                 wcscpy(data, L"New String");
                 printWLine(data);
             }
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
 }
@@ -102,7 +102,7 @@
                 wcscpy(data, L"New String");
                 printWLine(data);
             }
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_11.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_11.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_11.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_11.c	2025-05-05 11:26:01.888326336 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 wcscpy(data, L"New String");
                 printWLine(data);
-                free(data);
+                callback_wchar(data, has_free_wchar);
             }
         }
     }
@@ -75,7 +75,7 @@
                 wcscpy(data, L"New String");
                 printWLine(data);
             }
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
 }
@@ -102,7 +102,7 @@
                 wcscpy(data, L"New String");
                 printWLine(data);
             }
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_12.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_12.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_12.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_12.c	2025-05-05 11:26:01.864325812 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 wcscpy(data, L"New String");
                 printWLine(data);
-                free(data);
+                callback_wchar(data, has_free_wchar);
             }
         }
     }
@@ -61,7 +61,7 @@
                 wcscpy(data, L"New String");
                 printWLine(data);
             }
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
 }
@@ -92,7 +92,7 @@
                 wcscpy(data, L"New String");
                 printWLine(data);
             }
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
     else
@@ -114,7 +114,7 @@
                 wcscpy(data, L"New String");
                 printWLine(data);
             }
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_13.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_13.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_13.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_13.c	2025-05-05 11:26:01.981328364 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 wcscpy(data, L"New String");
                 printWLine(data);
-                free(data);
+                callback_wchar(data, has_free_wchar);
             }
         }
     }
@@ -75,7 +75,7 @@
                 wcscpy(data, L"New String");
                 printWLine(data);
             }
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
 }
@@ -102,7 +102,7 @@
                 wcscpy(data, L"New String");
                 printWLine(data);
             }
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_14.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_14.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_14.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_14.c	2025-05-05 11:26:01.875326052 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 wcscpy(data, L"New String");
                 printWLine(data);
-                free(data);
+                callback_wchar(data, has_free_wchar);
             }
         }
     }
@@ -75,7 +75,7 @@
                 wcscpy(data, L"New String");
                 printWLine(data);
             }
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
 }
@@ -102,7 +102,7 @@
                 wcscpy(data, L"New String");
                 printWLine(data);
             }
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_15.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_15.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_15.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_15.c	2025-05-05 11:26:01.968328081 +0800
@@ -39,7 +39,7 @@
             /* Reinitialize and make use of data */
             wcscpy(data, L"New String");
             printWLine(data);
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
     break;
@@ -81,7 +81,7 @@
             wcscpy(data, L"New String");
             printWLine(data);
         }
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
     break;
     }
@@ -110,7 +110,7 @@
             wcscpy(data, L"New String");
             printWLine(data);
         }
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
     break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_16.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_16.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_16.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_16.c	2025-05-05 11:26:01.874326030 +0800
@@ -38,7 +38,7 @@
                 /* Reinitialize and make use of data */
                 wcscpy(data, L"New String");
                 printWLine(data);
-                free(data);
+                callback_wchar(data, has_free_wchar);
             }
         }
         break;
@@ -71,7 +71,7 @@
                 wcscpy(data, L"New String");
                 printWLine(data);
             }
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_17.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_17.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_17.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_17.c	2025-05-05 11:26:01.860325725 +0800
@@ -39,7 +39,7 @@
                 /* Reinitialize and make use of data */
                 wcscpy(data, L"New String");
                 printWLine(data);
-                free(data);
+                callback_wchar(data, has_free_wchar);
             }
         }
     }
@@ -72,7 +72,7 @@
                 wcscpy(data, L"New String");
                 printWLine(data);
             }
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_18.c refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_18.c
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_18.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_wchar_t_18.c	2025-05-05 11:26:01.845325398 +0800
@@ -38,7 +38,7 @@
             /* Reinitialize and make use of data */
             wcscpy(data, L"New String");
             printWLine(data);
-            free(data);
+            callback_wchar(data, has_free_wchar);
         }
     }
 }
@@ -69,7 +69,7 @@
             wcscpy(data, L"New String");
             printWLine(data);
         }
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_01.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_01.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_01.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_01.cpp	2025-05-05 11:26:01.840325288 +0800
@@ -35,7 +35,7 @@
     /* Initialize and make use of data */
     strcpy(data, "A String");
     printLine(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
     /* Initialize and make use of data */
     strcpy(data, "A String");
     printLine(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -69,7 +69,7 @@
     strcpy(data, "A String");
     printLine(data);
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_char(data, has_free_array_char);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_02.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_02.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_02.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_02.cpp	2025-05-05 11:26:01.894326467 +0800
@@ -40,7 +40,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -90,7 +90,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_03.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_03.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_03.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_03.cpp	2025-05-05 11:26:01.880326161 +0800
@@ -40,7 +40,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -90,7 +90,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_04.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_04.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_04.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_04.cpp	2025-05-05 11:26:01.880326161 +0800
@@ -46,7 +46,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -76,7 +76,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -96,7 +96,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -121,7 +121,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -142,7 +142,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_05.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_05.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_05.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_05.cpp	2025-05-05 11:26:01.872325986 +0800
@@ -46,7 +46,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -76,7 +76,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -96,7 +96,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -121,7 +121,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -142,7 +142,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_06.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_06.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_06.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_06.cpp	2025-05-05 11:26:01.843325354 +0800
@@ -45,7 +45,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -95,7 +95,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -120,7 +120,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_07.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_07.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_07.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_07.cpp	2025-05-05 11:26:01.877326096 +0800
@@ -45,7 +45,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -95,7 +95,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -120,7 +120,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_08.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_08.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_08.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_08.cpp	2025-05-05 11:26:01.898326554 +0800
@@ -53,7 +53,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -83,7 +83,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -103,7 +103,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -128,7 +128,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -149,7 +149,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_09.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_09.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_09.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_09.cpp	2025-05-05 11:26:01.846325419 +0800
@@ -40,7 +40,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -90,7 +90,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_10.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_10.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_10.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_10.cpp	2025-05-05 11:26:01.838325245 +0800
@@ -40,7 +40,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -90,7 +90,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_11.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_11.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_11.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_11.cpp	2025-05-05 11:26:01.870325943 +0800
@@ -39,7 +39,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -89,7 +89,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -114,7 +114,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -135,7 +135,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_12.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_12.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_12.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_12.cpp	2025-05-05 11:26:01.978328299 +0800
@@ -48,13 +48,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -88,12 +88,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -124,12 +124,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_13.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_13.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_13.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_13.cpp	2025-05-05 11:26:01.869325921 +0800
@@ -39,7 +39,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -89,7 +89,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -114,7 +114,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -135,7 +135,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_14.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_14.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_14.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_14.cpp	2025-05-05 11:26:01.856325638 +0800
@@ -39,7 +39,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -89,7 +89,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -114,7 +114,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -135,7 +135,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_15.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_15.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_15.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_15.cpp	2025-05-05 11:26:01.888326336 +0800
@@ -46,7 +46,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -87,7 +87,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
         break;
     }
 }
@@ -115,7 +115,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -147,7 +147,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -180,7 +180,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_16.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_16.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_16.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_16.cpp	2025-05-05 11:26:01.840325288 +0800
@@ -40,7 +40,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -67,7 +67,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
         break;
     }
 }
@@ -89,7 +89,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_17.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_17.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_17.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_17.cpp	2025-05-05 11:26:01.978328299 +0800
@@ -40,7 +40,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -87,7 +87,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_18.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_18.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_18.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_18.cpp	2025-05-05 11:26:01.882326205 +0800
@@ -38,7 +38,7 @@
     printLine(data);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_char(data, has_free_array_char);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -79,7 +79,7 @@
     printLine(data);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_21.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_21.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_21.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_21.cpp	2025-05-05 11:26:01.898326554 +0800
@@ -33,7 +33,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -94,7 +94,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -116,7 +116,7 @@
 {
     if(goodG2bStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_22b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_22b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_22b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_22b.cpp	2025-05-05 11:26:01.859325703 +0800
@@ -34,7 +34,7 @@
 {
     if(badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -60,7 +60,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -70,7 +70,7 @@
     if(goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
@@ -79,7 +79,7 @@
 {
     if(goodG2B1Global)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_31.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_31.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_31.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_31.cpp	2025-05-05 11:26:01.882326205 +0800
@@ -38,7 +38,7 @@
     {
         char * dataCopy = data;
         char * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -61,7 +61,7 @@
     {
         char * dataCopy = data;
         char * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
         char * dataCopy = data;
         char * data = dataCopy;
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_32.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_32.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_32.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_32.cpp	2025-05-05 11:26:01.973328190 +0800
@@ -43,7 +43,7 @@
     }
     {
         char * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     }
     {
         char * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -95,7 +95,7 @@
     {
         char * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_33.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_33.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_33.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_33.cpp	2025-05-05 11:26:01.889326357 +0800
@@ -38,7 +38,7 @@
     printLine(data);
     {
         char * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -61,7 +61,7 @@
     printLine(data);
     {
         char * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
     {
         char * data = dataRef;
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_34.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_34.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_34.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_34.cpp	2025-05-05 11:26:01.847325441 +0800
@@ -45,7 +45,7 @@
     myUnion.unionFirst = data;
     {
         char * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     myUnion.unionFirst = data;
     {
         char * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_char(data, no_free_array_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -89,7 +89,7 @@
     {
         char * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_char(data, has_free_array_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_41.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_41.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_41.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_41.cpp	2025-05-05 11:26:01.974328212 +0800
@@ -28,7 +28,7 @@
 
 static void badSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -72,7 +72,7 @@
 static void goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_char(data, has_free_array_char);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_44.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_44.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_44.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_44.cpp	2025-05-05 11:26:01.970328124 +0800
@@ -28,7 +28,7 @@
 
 static void badSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -76,7 +76,7 @@
 static void goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_char(data, has_free_array_char);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_45.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_45.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_45.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_45.cpp	2025-05-05 11:26:01.856325638 +0800
@@ -33,7 +33,7 @@
 static void badSink()
 {
     char * data = badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -58,7 +58,7 @@
 static void goodG2BSink()
 {
     char * data = goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -81,7 +81,7 @@
 {
     char * data = goodB2GData;
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_char(data, has_free_array_char);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_51b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_51b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_51b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_51b.cpp	2025-05-05 11:26:01.889326357 +0800
@@ -28,7 +28,7 @@
 
 void badSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_char(data, has_free_array_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_52c.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_52c.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_52c.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_52c.cpp	2025-05-05 11:26:01.881326183 +0800
@@ -28,7 +28,7 @@
 
 void badSink_c(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_c(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_c(char * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_char(data, has_free_array_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_53d.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_53d.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_53d.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_53d.cpp	2025-05-05 11:26:01.849325485 +0800
@@ -28,7 +28,7 @@
 
 void badSink_d(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_d(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_d(char * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_char(data, has_free_array_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_54e.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_54e.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_54e.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_54e.cpp	2025-05-05 11:26:01.969328103 +0800
@@ -28,7 +28,7 @@
 
 void badSink_e(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_e(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_e(char * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_char(data, has_free_array_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_63b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_63b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_63b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_63b.cpp	2025-05-05 11:26:01.895326488 +0800
@@ -29,7 +29,7 @@
 void badSink(char * * dataPtr)
 {
     char * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void goodG2BSink(char * * dataPtr)
 {
     char * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     char * data = *dataPtr;
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_char(data, has_free_array_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_64b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_64b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_64b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_64b.cpp	2025-05-05 11:26:01.861325746 +0800
@@ -32,7 +32,7 @@
     char * * dataPtr = (char * *)dataVoidPtr;
     /* dereference dataPtr into data */
     char * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
     char * * dataPtr = (char * *)dataVoidPtr;
     /* dereference dataPtr into data */
     char * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
     /* dereference dataPtr into data */
     char * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_char(data, has_free_array_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_65b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_65b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_65b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_65b.cpp	2025-05-05 11:26:01.867325877 +0800
@@ -28,7 +28,7 @@
 
 void badSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_char(data, has_free_array_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_66b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_66b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_66b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_66b.cpp	2025-05-05 11:26:01.881326183 +0800
@@ -30,7 +30,7 @@
 {
     /* copy data out of dataArray */
     char * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void goodG2BSink(char * dataArray[])
 {
     char * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
 {
     char * data = dataArray[2];
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_char(data, has_free_array_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_67b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_67b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_67b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_67b.cpp	2025-05-05 11:26:01.852325550 +0800
@@ -34,7 +34,7 @@
 void badSink(structType myStruct)
 {
     char * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 void goodG2BSink(structType myStruct)
 {
     char * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -55,7 +55,7 @@
 {
     char * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_char(data, has_free_array_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_68b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_68b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_68b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_68b.cpp	2025-05-05 11:26:01.868325899 +0800
@@ -33,7 +33,7 @@
 void badSink()
 {
     char * data = badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink()
 {
     char * data = goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     char * data = goodB2GData;
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_char(data, has_free_array_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_72b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_72b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_72b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_72b.cpp	2025-05-05 11:26:01.969328103 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataVector */
     char * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(vector<char *> dataVector)
 {
     char * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     char * data = dataVector[2];
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_char(data, has_free_array_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_73b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_73b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_73b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_73b.cpp	2025-05-05 11:26:01.891326401 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataList */
     char * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(list<char *> dataList)
 {
     char * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     char * data = dataList.back();
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_char(data, has_free_array_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_74b.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_74b.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_74b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_74b.cpp	2025-05-05 11:26:01.853325572 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataMap */
     char * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(map<int, char *> dataMap)
 {
     char * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     char * data = dataMap[2];
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_char(data, has_free_array_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_81_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_81_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_81_bad.cpp	2025-05-05 11:26:01.983328408 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_array_char_81_bad::action(char * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_81_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_81_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_81_goodB2G.cpp	2025-05-05 11:26:01.836325201 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__new_array_char_81_goodB2G::action(char * data) const
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_char(data, has_free_array_char);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_81_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_81_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_81_goodG2B.cpp	2025-05-05 11:26:01.849325485 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_array_char_81_goodG2B::action(char * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_82_bad.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_82_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_82_bad.cpp	2025-05-05 11:26:01.983328408 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_array_char_82_bad::action(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_82_goodB2G.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_82_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_82_goodB2G.cpp	2025-05-05 11:26:01.875326052 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__new_array_char_82_goodB2G::action(char * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_char(data, has_free_array_char);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_82_goodG2B.cpp refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_82_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__new_array_char_82_goodG2B.cpp	2025-05-05 11:26:01.871325965 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_array_char_82_goodG2B::action(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_char(data, no_free_array_char);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_01.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_01.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_01.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_01.cpp	2025-05-05 11:26:02.077330459 +0800
@@ -35,7 +35,7 @@
     /* Initialize and make use of data */
     data[0] = 5;
     printIntLine(data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
     /* Initialize and make use of data */
     data[0] = 5;
     printIntLine(data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -69,7 +69,7 @@
     data[0] = 5;
     printIntLine(data[0]);
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int(data, has_free_array_int);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_02.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_02.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_02.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_02.cpp	2025-05-05 11:26:02.081330546 +0800
@@ -40,7 +40,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -90,7 +90,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_03.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_03.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_03.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_03.cpp	2025-05-05 11:26:01.993328626 +0800
@@ -40,7 +40,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -90,7 +90,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_04.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_04.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_04.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_04.cpp	2025-05-05 11:26:02.099330938 +0800
@@ -46,7 +46,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -76,7 +76,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -96,7 +96,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -121,7 +121,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -142,7 +142,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_05.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_05.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_05.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_05.cpp	2025-05-05 11:26:02.084330611 +0800
@@ -46,7 +46,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -76,7 +76,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -96,7 +96,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -121,7 +121,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -142,7 +142,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_06.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_06.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_06.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_06.cpp	2025-05-05 11:26:02.081330546 +0800
@@ -45,7 +45,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -95,7 +95,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -120,7 +120,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_07.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_07.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_07.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_07.cpp	2025-05-05 11:26:02.110331178 +0800
@@ -45,7 +45,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -95,7 +95,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -120,7 +120,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_08.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_08.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_08.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_08.cpp	2025-05-05 11:26:02.106331091 +0800
@@ -53,7 +53,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -83,7 +83,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -103,7 +103,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -128,7 +128,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -149,7 +149,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_09.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_09.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_09.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_09.cpp	2025-05-05 11:26:02.094330829 +0800
@@ -40,7 +40,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -90,7 +90,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_10.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_10.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_10.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_10.cpp	2025-05-05 11:26:02.020329215 +0800
@@ -40,7 +40,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -90,7 +90,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_11.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_11.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_11.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_11.cpp	2025-05-05 11:26:01.993328626 +0800
@@ -39,7 +39,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -89,7 +89,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -114,7 +114,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -135,7 +135,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_12.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_12.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_12.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_12.cpp	2025-05-05 11:26:01.987328495 +0800
@@ -48,13 +48,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -88,12 +88,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -124,12 +124,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_13.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_13.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_13.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_13.cpp	2025-05-05 11:26:01.993328626 +0800
@@ -39,7 +39,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -89,7 +89,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -114,7 +114,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -135,7 +135,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_14.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_14.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_14.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_14.cpp	2025-05-05 11:26:02.097330895 +0800
@@ -39,7 +39,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -89,7 +89,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -114,7 +114,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -135,7 +135,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_15.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_15.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_15.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_15.cpp	2025-05-05 11:26:02.026329346 +0800
@@ -46,7 +46,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -87,7 +87,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
         break;
     }
 }
@@ -115,7 +115,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -147,7 +147,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -180,7 +180,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_16.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_16.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_16.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_16.cpp	2025-05-05 11:26:02.111331200 +0800
@@ -40,7 +40,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -67,7 +67,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
         break;
     }
 }
@@ -89,7 +89,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_17.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_17.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_17.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_17.cpp	2025-05-05 11:26:02.102331004 +0800
@@ -40,7 +40,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -87,7 +87,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_18.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_18.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_18.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_18.cpp	2025-05-05 11:26:02.017329150 +0800
@@ -38,7 +38,7 @@
     printIntLine(data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int(data, has_free_array_int);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -79,7 +79,7 @@
     printIntLine(data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_21.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_21.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_21.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_21.cpp	2025-05-05 11:26:02.106331091 +0800
@@ -33,7 +33,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -94,7 +94,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -116,7 +116,7 @@
 {
     if(goodG2bStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_22b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_22b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_22b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_22b.cpp	2025-05-05 11:26:02.091330764 +0800
@@ -34,7 +34,7 @@
 {
     if(badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -60,7 +60,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -70,7 +70,7 @@
     if(goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
@@ -79,7 +79,7 @@
 {
     if(goodG2B1Global)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_31.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_31.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_31.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_31.cpp	2025-05-05 11:26:02.099330938 +0800
@@ -38,7 +38,7 @@
     {
         int * dataCopy = data;
         int * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -61,7 +61,7 @@
     {
         int * dataCopy = data;
         int * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
         int * dataCopy = data;
         int * data = dataCopy;
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_32.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_32.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_32.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_32.cpp	2025-05-05 11:26:01.991328583 +0800
@@ -43,7 +43,7 @@
     }
     {
         int * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     }
     {
         int * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -95,7 +95,7 @@
     {
         int * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_33.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_33.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_33.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_33.cpp	2025-05-05 11:26:02.098330917 +0800
@@ -38,7 +38,7 @@
     printIntLine(data[0]);
     {
         int * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -61,7 +61,7 @@
     printIntLine(data[0]);
     {
         int * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
     {
         int * data = dataRef;
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_34.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_34.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_34.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_34.cpp	2025-05-05 11:26:02.006328910 +0800
@@ -45,7 +45,7 @@
     myUnion.unionFirst = data;
     {
         int * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     myUnion.unionFirst = data;
     {
         int * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int(data, no_free_array_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -89,7 +89,7 @@
     {
         int * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int(data, has_free_array_int);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_41.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_41.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_41.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_41.cpp	2025-05-05 11:26:02.008328954 +0800
@@ -28,7 +28,7 @@
 
 static void badSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -72,7 +72,7 @@
 static void goodB2GSink(int * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int(data, has_free_array_int);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_44.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_44.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_44.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_44.cpp	2025-05-05 11:26:02.103331026 +0800
@@ -28,7 +28,7 @@
 
 static void badSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -76,7 +76,7 @@
 static void goodB2GSink(int * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int(data, has_free_array_int);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_45.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_45.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_45.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_45.cpp	2025-05-05 11:26:02.010328997 +0800
@@ -33,7 +33,7 @@
 static void badSink()
 {
     int * data = badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -58,7 +58,7 @@
 static void goodG2BSink()
 {
     int * data = goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -81,7 +81,7 @@
 {
     int * data = goodB2GData;
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int(data, has_free_array_int);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_51b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_51b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_51b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_51b.cpp	2025-05-05 11:26:02.024329302 +0800
@@ -28,7 +28,7 @@
 
 void badSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink(int * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int(data, has_free_array_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_52c.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_52c.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_52c.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_52c.cpp	2025-05-05 11:26:02.107331113 +0800
@@ -28,7 +28,7 @@
 
 void badSink_c(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_c(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_c(int * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int(data, has_free_array_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_53d.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_53d.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_53d.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_53d.cpp	2025-05-05 11:26:01.988328517 +0800
@@ -28,7 +28,7 @@
 
 void badSink_d(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_d(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_d(int * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int(data, has_free_array_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_54e.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_54e.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_54e.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_54e.cpp	2025-05-05 11:26:02.111331200 +0800
@@ -28,7 +28,7 @@
 
 void badSink_e(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_e(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_e(int * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int(data, has_free_array_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_63b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_63b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_63b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_63b.cpp	2025-05-05 11:26:02.016329128 +0800
@@ -29,7 +29,7 @@
 void badSink(int * * dataPtr)
 {
     int * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void goodG2BSink(int * * dataPtr)
 {
     int * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     int * data = *dataPtr;
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int(data, has_free_array_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_64b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_64b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_64b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_64b.cpp	2025-05-05 11:26:02.030329433 +0800
@@ -32,7 +32,7 @@
     int * * dataPtr = (int * *)dataVoidPtr;
     /* dereference dataPtr into data */
     int * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
     int * * dataPtr = (int * *)dataVoidPtr;
     /* dereference dataPtr into data */
     int * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
     /* dereference dataPtr into data */
     int * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int(data, has_free_array_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_01.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_01.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_01.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_01.cpp	2025-05-05 11:26:02.080330524 +0800
@@ -35,7 +35,7 @@
     /* Initialize and make use of data */
     data[0] = 5LL;
     printLongLongLine(data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
     /* Initialize and make use of data */
     data[0] = 5LL;
     printLongLongLine(data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -69,7 +69,7 @@
     data[0] = 5LL;
     printLongLongLine(data[0]);
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int64(data, has_free_array_int64);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_02.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_02.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_02.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_02.cpp	2025-05-05 11:26:02.028329390 +0800
@@ -40,7 +40,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -90,7 +90,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_03.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_03.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_03.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_03.cpp	2025-05-05 11:26:01.994328648 +0800
@@ -40,7 +40,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -90,7 +90,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_04.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_04.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_04.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_04.cpp	2025-05-05 11:26:01.988328517 +0800
@@ -46,7 +46,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -76,7 +76,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -96,7 +96,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -121,7 +121,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -142,7 +142,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_05.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_05.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_05.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_05.cpp	2025-05-05 11:26:02.024329302 +0800
@@ -46,7 +46,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -76,7 +76,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -96,7 +96,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -121,7 +121,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -142,7 +142,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_06.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_06.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_06.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_06.cpp	2025-05-05 11:26:02.112331222 +0800
@@ -45,7 +45,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -95,7 +95,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -120,7 +120,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_07.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_07.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_07.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_07.cpp	2025-05-05 11:26:02.022329259 +0800
@@ -45,7 +45,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -95,7 +95,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -120,7 +120,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_08.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_08.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_08.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_08.cpp	2025-05-05 11:26:01.990328561 +0800
@@ -53,7 +53,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -83,7 +83,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -103,7 +103,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -128,7 +128,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -149,7 +149,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_09.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_09.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_09.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_09.cpp	2025-05-05 11:26:01.992328604 +0800
@@ -40,7 +40,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -90,7 +90,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_10.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_10.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_10.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_10.cpp	2025-05-05 11:26:01.990328561 +0800
@@ -40,7 +40,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -90,7 +90,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_11.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_11.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_11.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_11.cpp	2025-05-05 11:26:02.110331178 +0800
@@ -39,7 +39,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -89,7 +89,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -114,7 +114,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -135,7 +135,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_12.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_12.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_12.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_12.cpp	2025-05-05 11:26:02.003328844 +0800
@@ -48,13 +48,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -88,12 +88,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -124,12 +124,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_13.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_13.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_13.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_13.cpp	2025-05-05 11:26:01.986328474 +0800
@@ -39,7 +39,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -89,7 +89,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -114,7 +114,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -135,7 +135,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_14.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_14.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_14.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_14.cpp	2025-05-05 11:26:02.105331069 +0800
@@ -39,7 +39,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -89,7 +89,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -114,7 +114,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -135,7 +135,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_15.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_15.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_15.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_15.cpp	2025-05-05 11:26:02.089330720 +0800
@@ -46,7 +46,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -87,7 +87,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
         break;
     }
 }
@@ -115,7 +115,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -147,7 +147,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -180,7 +180,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_16.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_16.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_16.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_16.cpp	2025-05-05 11:26:02.110331178 +0800
@@ -40,7 +40,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -67,7 +67,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
         break;
     }
 }
@@ -89,7 +89,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_17.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_17.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_17.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_17.cpp	2025-05-05 11:26:02.013329062 +0800
@@ -40,7 +40,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -87,7 +87,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_18.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_18.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_18.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_18.cpp	2025-05-05 11:26:02.106331091 +0800
@@ -38,7 +38,7 @@
     printLongLongLine(data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int64(data, has_free_array_int64);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -79,7 +79,7 @@
     printLongLongLine(data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_21.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_21.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_21.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_21.cpp	2025-05-05 11:26:02.024329302 +0800
@@ -33,7 +33,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -94,7 +94,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -116,7 +116,7 @@
 {
     if(goodG2bStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_22b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_22b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_22b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_22b.cpp	2025-05-05 11:26:01.996328692 +0800
@@ -34,7 +34,7 @@
 {
     if(badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -60,7 +60,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -70,7 +70,7 @@
     if(goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
@@ -79,7 +79,7 @@
 {
     if(goodG2B1Global)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_31.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_31.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_31.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_31.cpp	2025-05-05 11:26:02.076330437 +0800
@@ -38,7 +38,7 @@
     {
         int64_t * dataCopy = data;
         int64_t * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -61,7 +61,7 @@
     {
         int64_t * dataCopy = data;
         int64_t * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
         int64_t * dataCopy = data;
         int64_t * data = dataCopy;
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_32.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_32.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_32.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_32.cpp	2025-05-05 11:26:02.096330873 +0800
@@ -43,7 +43,7 @@
     }
     {
         int64_t * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     }
     {
         int64_t * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -95,7 +95,7 @@
     {
         int64_t * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_33.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_33.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_33.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_33.cpp	2025-05-05 11:26:01.996328692 +0800
@@ -38,7 +38,7 @@
     printLongLongLine(data[0]);
     {
         int64_t * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -61,7 +61,7 @@
     printLongLongLine(data[0]);
     {
         int64_t * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
     {
         int64_t * data = dataRef;
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_34.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_34.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_34.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_34.cpp	2025-05-05 11:26:02.103331026 +0800
@@ -45,7 +45,7 @@
     myUnion.unionFirst = data;
     {
         int64_t * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     myUnion.unionFirst = data;
     {
         int64_t * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_int64(data, no_free_array_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -89,7 +89,7 @@
     {
         int64_t * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_int64(data, has_free_array_int64);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_41.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_41.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_41.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_41.cpp	2025-05-05 11:26:02.100330960 +0800
@@ -28,7 +28,7 @@
 
 static void badSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -72,7 +72,7 @@
 static void goodB2GSink(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int64(data, has_free_array_int64);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_44.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_44.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_44.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_44.cpp	2025-05-05 11:26:02.086330655 +0800
@@ -28,7 +28,7 @@
 
 static void badSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -76,7 +76,7 @@
 static void goodB2GSink(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int64(data, has_free_array_int64);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_45.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_45.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_45.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_45.cpp	2025-05-05 11:26:02.022329259 +0800
@@ -33,7 +33,7 @@
 static void badSink()
 {
     int64_t * data = badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -58,7 +58,7 @@
 static void goodG2BSink()
 {
     int64_t * data = goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -81,7 +81,7 @@
 {
     int64_t * data = goodB2GData;
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int64(data, has_free_array_int64);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_51b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_51b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_51b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_51b.cpp	2025-05-05 11:26:02.089330720 +0800
@@ -28,7 +28,7 @@
 
 void badSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int64(data, has_free_array_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_52c.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_52c.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_52c.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_52c.cpp	2025-05-05 11:26:02.092330786 +0800
@@ -28,7 +28,7 @@
 
 void badSink_c(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_c(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_c(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int64(data, has_free_array_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_53d.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_53d.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_53d.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_53d.cpp	2025-05-05 11:26:02.083330589 +0800
@@ -28,7 +28,7 @@
 
 void badSink_d(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_d(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_d(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int64(data, has_free_array_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_54e.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_54e.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_54e.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_54e.cpp	2025-05-05 11:26:02.002328823 +0800
@@ -28,7 +28,7 @@
 
 void badSink_e(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_e(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_e(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int64(data, has_free_array_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_63b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_63b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_63b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_63b.cpp	2025-05-05 11:26:02.004328866 +0800
@@ -29,7 +29,7 @@
 void badSink(int64_t * * dataPtr)
 {
     int64_t * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void goodG2BSink(int64_t * * dataPtr)
 {
     int64_t * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     int64_t * data = *dataPtr;
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int64(data, has_free_array_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_64b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_64b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_64b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_64b.cpp	2025-05-05 11:26:01.986328474 +0800
@@ -32,7 +32,7 @@
     int64_t * * dataPtr = (int64_t * *)dataVoidPtr;
     /* dereference dataPtr into data */
     int64_t * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
     int64_t * * dataPtr = (int64_t * *)dataVoidPtr;
     /* dereference dataPtr into data */
     int64_t * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
     /* dereference dataPtr into data */
     int64_t * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int64(data, has_free_array_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_65b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_65b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_65b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_65b.cpp	2025-05-05 11:26:02.077330459 +0800
@@ -28,7 +28,7 @@
 
 void badSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int64(data, has_free_array_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_66b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_66b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_66b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_66b.cpp	2025-05-05 11:26:01.997328714 +0800
@@ -30,7 +30,7 @@
 {
     /* copy data out of dataArray */
     int64_t * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void goodG2BSink(int64_t * dataArray[])
 {
     int64_t * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
 {
     int64_t * data = dataArray[2];
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int64(data, has_free_array_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_67b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_67b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_67b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_67b.cpp	2025-05-05 11:26:02.091330764 +0800
@@ -34,7 +34,7 @@
 void badSink(structType myStruct)
 {
     int64_t * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 void goodG2BSink(structType myStruct)
 {
     int64_t * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -55,7 +55,7 @@
 {
     int64_t * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int64(data, has_free_array_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_68b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_68b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_68b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_68b.cpp	2025-05-05 11:26:02.005328888 +0800
@@ -33,7 +33,7 @@
 void badSink()
 {
     int64_t * data = badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink()
 {
     int64_t * data = goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     int64_t * data = goodB2GData;
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int64(data, has_free_array_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_72b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_72b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_72b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_72b.cpp	2025-05-05 11:26:02.097330895 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataVector */
     int64_t * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(vector<int64_t *> dataVector)
 {
     int64_t * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     int64_t * data = dataVector[2];
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int64(data, has_free_array_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_73b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_73b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_73b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_73b.cpp	2025-05-05 11:26:01.986328474 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataList */
     int64_t * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(list<int64_t *> dataList)
 {
     int64_t * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     int64_t * data = dataList.back();
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int64(data, has_free_array_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_74b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_74b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_74b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_74b.cpp	2025-05-05 11:26:02.108331134 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataMap */
     int64_t * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(map<int, int64_t *> dataMap)
 {
     int64_t * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     int64_t * data = dataMap[2];
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int64(data, has_free_array_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_81_bad.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_81_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_81_bad.cpp	2025-05-05 11:26:02.103331026 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_array_int64_t_81_bad::action(int64_t * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_81_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_81_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_81_goodB2G.cpp	2025-05-05 11:26:02.014329084 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__new_array_int64_t_81_goodB2G::action(int64_t * data) const
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int64(data, has_free_array_int64);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_81_goodG2B.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_81_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_81_goodG2B.cpp	2025-05-05 11:26:02.078330480 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_array_int64_t_81_goodG2B::action(int64_t * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_82_bad.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_82_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_82_bad.cpp	2025-05-05 11:26:02.010328997 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_array_int64_t_82_bad::action(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_82_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_82_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_82_goodB2G.cpp	2025-05-05 11:26:02.003328844 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__new_array_int64_t_82_goodB2G::action(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int64(data, has_free_array_int64);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_82_goodG2B.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_82_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int64_t_82_goodG2B.cpp	2025-05-05 11:26:02.086330655 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_array_int64_t_82_goodG2B::action(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int64(data, no_free_array_int64);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_65b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_65b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_65b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_65b.cpp	2025-05-05 11:26:01.999328757 +0800
@@ -28,7 +28,7 @@
 
 void badSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink(int * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int(data, has_free_array_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_66b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_66b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_66b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_66b.cpp	2025-05-05 11:26:02.096330873 +0800
@@ -30,7 +30,7 @@
 {
     /* copy data out of dataArray */
     int * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void goodG2BSink(int * dataArray[])
 {
     int * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
 {
     int * data = dataArray[2];
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int(data, has_free_array_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_67b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_67b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_67b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_67b.cpp	2025-05-05 11:26:01.987328495 +0800
@@ -34,7 +34,7 @@
 void badSink(structType myStruct)
 {
     int * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 void goodG2BSink(structType myStruct)
 {
     int * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -55,7 +55,7 @@
 {
     int * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int(data, has_free_array_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_68b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_68b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_68b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_68b.cpp	2025-05-05 11:26:01.996328692 +0800
@@ -33,7 +33,7 @@
 void badSink()
 {
     int * data = badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink()
 {
     int * data = goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     int * data = goodB2GData;
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int(data, has_free_array_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_72b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_72b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_72b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_72b.cpp	2025-05-05 11:26:01.994328648 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataVector */
     int * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(vector<int *> dataVector)
 {
     int * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     int * data = dataVector[2];
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int(data, has_free_array_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_73b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_73b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_73b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_73b.cpp	2025-05-05 11:26:02.012329041 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataList */
     int * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(list<int *> dataList)
 {
     int * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     int * data = dataList.back();
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int(data, has_free_array_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_74b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_74b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_74b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_74b.cpp	2025-05-05 11:26:02.109331157 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataMap */
     int * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(map<int, int *> dataMap)
 {
     int * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     int * data = dataMap[2];
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int(data, has_free_array_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_81_bad.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_81_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_81_bad.cpp	2025-05-05 11:26:01.996328692 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_array_int_81_bad::action(int * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_81_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_81_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_81_goodB2G.cpp	2025-05-05 11:26:02.006328910 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__new_array_int_81_goodB2G::action(int * data) const
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int(data, has_free_array_int);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_81_goodG2B.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_81_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_81_goodG2B.cpp	2025-05-05 11:26:02.009328975 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_array_int_81_goodG2B::action(int * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_82_bad.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_82_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_82_bad.cpp	2025-05-05 11:26:02.017329150 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_array_int_82_bad::action(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_82_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_82_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_82_goodB2G.cpp	2025-05-05 11:26:02.025329324 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__new_array_int_82_goodB2G::action(int * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_int(data, has_free_array_int);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_82_goodG2B.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_82_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_int_82_goodG2B.cpp	2025-05-05 11:26:02.086330655 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_array_int_82_goodG2B::action(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_int(data, no_free_array_int);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_01.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_01.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_01.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_01.cpp	2025-05-05 11:26:02.022329259 +0800
@@ -36,7 +36,7 @@
     data[0].intOne = 0;
     data[0].intTwo = 0;
     printStructLine((twoIntsStruct *)&data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -56,7 +56,7 @@
     data[0].intOne = 0;
     data[0].intTwo = 0;
     printStructLine((twoIntsStruct *)&data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -72,7 +72,7 @@
     data[0].intTwo = 0;
     printStructLine((twoIntsStruct *)&data[0]);
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_02.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_02.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_02.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_02.cpp	2025-05-05 11:26:02.018329172 +0800
@@ -41,7 +41,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -93,7 +93,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -119,7 +119,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_03.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_03.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_03.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_03.cpp	2025-05-05 11:26:02.005328888 +0800
@@ -41,7 +41,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -93,7 +93,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -119,7 +119,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_04.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_04.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_04.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_04.cpp	2025-05-05 11:26:02.082330568 +0800
@@ -47,7 +47,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -78,7 +78,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -99,7 +99,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -125,7 +125,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -147,7 +147,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_05.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_05.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_05.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_05.cpp	2025-05-05 11:26:02.029329412 +0800
@@ -47,7 +47,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -78,7 +78,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -99,7 +99,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -125,7 +125,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -147,7 +147,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_06.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_06.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_06.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_06.cpp	2025-05-05 11:26:02.086330655 +0800
@@ -46,7 +46,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -77,7 +77,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -98,7 +98,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -124,7 +124,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -146,7 +146,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_07.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_07.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_07.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_07.cpp	2025-05-05 11:26:02.008328954 +0800
@@ -46,7 +46,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -77,7 +77,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -98,7 +98,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -124,7 +124,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -146,7 +146,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_08.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_08.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_08.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_08.cpp	2025-05-05 11:26:01.985328452 +0800
@@ -54,7 +54,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -85,7 +85,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -106,7 +106,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -132,7 +132,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -154,7 +154,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_09.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_09.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_09.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_09.cpp	2025-05-05 11:26:02.090330742 +0800
@@ -41,7 +41,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -93,7 +93,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -119,7 +119,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_10.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_10.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_10.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_10.cpp	2025-05-05 11:26:02.014329084 +0800
@@ -41,7 +41,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -93,7 +93,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -119,7 +119,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_11.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_11.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_11.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_11.cpp	2025-05-05 11:26:02.109331157 +0800
@@ -40,7 +40,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -92,7 +92,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -140,7 +140,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_12.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_12.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_12.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_12.cpp	2025-05-05 11:26:02.096330873 +0800
@@ -50,13 +50,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -92,12 +92,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -130,12 +130,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_13.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_13.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_13.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_13.cpp	2025-05-05 11:26:02.080330524 +0800
@@ -40,7 +40,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -92,7 +92,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -140,7 +140,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_14.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_14.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_14.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_14.cpp	2025-05-05 11:26:02.101330982 +0800
@@ -40,7 +40,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -92,7 +92,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -140,7 +140,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_15.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_15.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_15.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_15.cpp	2025-05-05 11:26:02.100330960 +0800
@@ -47,7 +47,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -89,7 +89,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
         break;
     }
 }
@@ -118,7 +118,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -151,7 +151,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -185,7 +185,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_16.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_16.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_16.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_16.cpp	2025-05-05 11:26:02.079330502 +0800
@@ -41,7 +41,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -69,7 +69,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
         break;
     }
 }
@@ -92,7 +92,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_17.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_17.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_17.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_17.cpp	2025-05-05 11:26:02.099330938 +0800
@@ -41,7 +41,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -68,7 +68,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -90,7 +90,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_18.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_18.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_18.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_18.cpp	2025-05-05 11:26:02.081330546 +0800
@@ -39,7 +39,7 @@
     printStructLine((twoIntsStruct *)&data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -63,7 +63,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -82,7 +82,7 @@
     printStructLine((twoIntsStruct *)&data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_21.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_21.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_21.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_21.cpp	2025-05-05 11:26:02.091330764 +0800
@@ -33,7 +33,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -96,7 +96,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -119,7 +119,7 @@
 {
     if(goodG2bStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_22b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_22b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_22b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_22b.cpp	2025-05-05 11:26:01.992328604 +0800
@@ -34,7 +34,7 @@
 {
     if(badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -60,7 +60,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -70,7 +70,7 @@
     if(goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -79,7 +79,7 @@
 {
     if(goodG2B1Global)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_31.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_31.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_31.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_31.cpp	2025-05-05 11:26:02.028329390 +0800
@@ -39,7 +39,7 @@
     {
         struct _twoIntsStruct * dataCopy = data;
         struct _twoIntsStruct * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -63,7 +63,7 @@
     {
         struct _twoIntsStruct * dataCopy = data;
         struct _twoIntsStruct * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -83,7 +83,7 @@
         struct _twoIntsStruct * dataCopy = data;
         struct _twoIntsStruct * data = dataCopy;
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_32.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_32.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_32.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_32.cpp	2025-05-05 11:26:02.094330829 +0800
@@ -44,7 +44,7 @@
     }
     {
         struct _twoIntsStruct * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     }
     {
         struct _twoIntsStruct * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -98,7 +98,7 @@
     {
         struct _twoIntsStruct * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_33.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_33.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_33.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_33.cpp	2025-05-05 11:26:01.992328604 +0800
@@ -39,7 +39,7 @@
     printStructLine((twoIntsStruct *)&data[0]);
     {
         struct _twoIntsStruct * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -63,7 +63,7 @@
     printStructLine((twoIntsStruct *)&data[0]);
     {
         struct _twoIntsStruct * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -83,7 +83,7 @@
     {
         struct _twoIntsStruct * data = dataRef;
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_34.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_34.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_34.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_34.cpp	2025-05-05 11:26:02.085330633 +0800
@@ -46,7 +46,7 @@
     myUnion.unionFirst = data;
     {
         struct _twoIntsStruct * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     myUnion.unionFirst = data;
     {
         struct _twoIntsStruct * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -92,7 +92,7 @@
     {
         struct _twoIntsStruct * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_41.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_41.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_41.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_41.cpp	2025-05-05 11:26:02.076330437 +0800
@@ -28,7 +28,7 @@
 
 static void badSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -74,7 +74,7 @@
 static void goodB2GSink(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_44.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_44.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_44.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_44.cpp	2025-05-05 11:26:02.085330633 +0800
@@ -28,7 +28,7 @@
 
 static void badSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -55,7 +55,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -78,7 +78,7 @@
 static void goodB2GSink(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_45.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_45.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_45.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_45.cpp	2025-05-05 11:26:02.103331026 +0800
@@ -33,7 +33,7 @@
 static void badSink()
 {
     struct _twoIntsStruct * data = badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
 static void goodG2BSink()
 {
     struct _twoIntsStruct * data = goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -83,7 +83,7 @@
 {
     struct _twoIntsStruct * data = goodB2GData;
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_51b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_51b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_51b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_51b.cpp	2025-05-05 11:26:02.022329259 +0800
@@ -28,7 +28,7 @@
 
 void badSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_52c.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_52c.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_52c.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_52c.cpp	2025-05-05 11:26:01.986328474 +0800
@@ -28,7 +28,7 @@
 
 void badSink_c(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_c(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_c(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_53d.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_53d.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_53d.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_53d.cpp	2025-05-05 11:26:02.097330895 +0800
@@ -28,7 +28,7 @@
 
 void badSink_d(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_d(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_d(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_54e.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_54e.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_54e.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_54e.cpp	2025-05-05 11:26:02.023329281 +0800
@@ -28,7 +28,7 @@
 
 void badSink_e(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_e(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_e(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_63b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_63b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_63b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_63b.cpp	2025-05-05 11:26:01.987328495 +0800
@@ -29,7 +29,7 @@
 void badSink(struct _twoIntsStruct * * dataPtr)
 {
     struct _twoIntsStruct * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void goodG2BSink(struct _twoIntsStruct * * dataPtr)
 {
     struct _twoIntsStruct * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     struct _twoIntsStruct * data = *dataPtr;
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_64b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_64b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_64b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_64b.cpp	2025-05-05 11:26:02.026329346 +0800
@@ -32,7 +32,7 @@
     struct _twoIntsStruct * * dataPtr = (struct _twoIntsStruct * *)dataVoidPtr;
     /* dereference dataPtr into data */
     struct _twoIntsStruct * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
     struct _twoIntsStruct * * dataPtr = (struct _twoIntsStruct * *)dataVoidPtr;
     /* dereference dataPtr into data */
     struct _twoIntsStruct * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
     /* dereference dataPtr into data */
     struct _twoIntsStruct * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_65b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_65b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_65b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_65b.cpp	2025-05-05 11:26:02.007328931 +0800
@@ -28,7 +28,7 @@
 
 void badSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_66b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_66b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_66b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_66b.cpp	2025-05-05 11:26:01.986328474 +0800
@@ -30,7 +30,7 @@
 {
     /* copy data out of dataArray */
     struct _twoIntsStruct * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void goodG2BSink(struct _twoIntsStruct * dataArray[])
 {
     struct _twoIntsStruct * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
 {
     struct _twoIntsStruct * data = dataArray[2];
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_67b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_67b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_67b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_67b.cpp	2025-05-05 11:26:02.097330895 +0800
@@ -34,7 +34,7 @@
 void badSink(structType myStruct)
 {
     struct _twoIntsStruct * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 void goodG2BSink(structType myStruct)
 {
     struct _twoIntsStruct * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -55,7 +55,7 @@
 {
     struct _twoIntsStruct * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_68b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_68b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_68b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_68b.cpp	2025-05-05 11:26:02.098330917 +0800
@@ -33,7 +33,7 @@
 void badSink()
 {
     struct _twoIntsStruct * data = badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink()
 {
     struct _twoIntsStruct * data = goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     struct _twoIntsStruct * data = goodB2GData;
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_72b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_72b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_72b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_72b.cpp	2025-05-05 11:26:02.105331069 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataVector */
     struct _twoIntsStruct * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(vector<struct _twoIntsStruct *> dataVector)
 {
     struct _twoIntsStruct * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     struct _twoIntsStruct * data = dataVector[2];
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_73b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_73b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_73b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_73b.cpp	2025-05-05 11:26:02.009328975 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataList */
     struct _twoIntsStruct * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(list<struct _twoIntsStruct *> dataList)
 {
     struct _twoIntsStruct * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     struct _twoIntsStruct * data = dataList.back();
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_74b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_74b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_74b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_74b.cpp	2025-05-05 11:26:02.090330742 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataMap */
     struct _twoIntsStruct * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(map<int, struct _twoIntsStruct *> dataMap)
 {
     struct _twoIntsStruct * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     struct _twoIntsStruct * data = dataMap[2];
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_81_bad.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_81_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_81_bad.cpp	2025-05-05 11:26:02.098330917 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_array_struct_twoIntsStruct_81_bad::action(struct _twoIntsStruct * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_81_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_81_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_81_goodB2G.cpp	2025-05-05 11:26:02.002328823 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__new_array_struct_twoIntsStruct_81_goodB2G::action(struct _twoIntsStruct * data) const
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_81_goodG2B.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_81_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_81_goodG2B.cpp	2025-05-05 11:26:02.095330851 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_array_struct_twoIntsStruct_81_goodG2B::action(struct _twoIntsStruct * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_82_bad.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_82_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_82_bad.cpp	2025-05-05 11:26:02.006328910 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_array_struct_twoIntsStruct_82_bad::action(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_82_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_82_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_82_goodB2G.cpp	2025-05-05 11:26:02.095330851 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__new_array_struct_twoIntsStruct_82_goodB2G::action(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_82_goodG2B.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_82_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_struct_twoIntsStruct_82_goodG2B.cpp	2025-05-05 11:26:01.989328539 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_array_struct_twoIntsStruct_82_goodG2B::action(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_01.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_01.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_01.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_01.cpp	2025-05-05 11:26:02.018329172 +0800
@@ -37,7 +37,7 @@
     data[0].intTwo = 0;
     printIntLine(data[0].intOne);
     printIntLine(data[0].intTwo);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -58,7 +58,7 @@
     data[0].intTwo = 0;
     printIntLine(data[0].intOne);
     printIntLine(data[0].intTwo);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -75,7 +75,7 @@
     printIntLine(data[0].intOne);
     printIntLine(data[0].intTwo);
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_class(data, has_free_array_class);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_02.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_02.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_02.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_02.cpp	2025-05-05 11:26:02.090330742 +0800
@@ -42,7 +42,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -74,7 +74,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -96,7 +96,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -123,7 +123,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -146,7 +146,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_03.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_03.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_03.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_03.cpp	2025-05-05 11:26:02.076330437 +0800
@@ -42,7 +42,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -74,7 +74,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -96,7 +96,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -123,7 +123,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -146,7 +146,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_04.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_04.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_04.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_04.cpp	2025-05-05 11:26:02.108331134 +0800
@@ -48,7 +48,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -102,7 +102,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -129,7 +129,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -152,7 +152,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_05.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_05.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_05.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_05.cpp	2025-05-05 11:26:02.020329215 +0800
@@ -48,7 +48,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -102,7 +102,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -129,7 +129,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -152,7 +152,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_06.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_06.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_06.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_06.cpp	2025-05-05 11:26:02.028329390 +0800
@@ -47,7 +47,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -79,7 +79,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -101,7 +101,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -128,7 +128,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -151,7 +151,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_07.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_07.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_07.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_07.cpp	2025-05-05 11:26:02.080330524 +0800
@@ -47,7 +47,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -79,7 +79,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -101,7 +101,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -128,7 +128,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -151,7 +151,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_08.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_08.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_08.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_08.cpp	2025-05-05 11:26:02.027329368 +0800
@@ -55,7 +55,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -87,7 +87,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -109,7 +109,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -136,7 +136,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -159,7 +159,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_09.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_09.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_09.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_09.cpp	2025-05-05 11:26:02.026329346 +0800
@@ -42,7 +42,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -74,7 +74,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -96,7 +96,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -123,7 +123,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -146,7 +146,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_10.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_10.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_10.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_10.cpp	2025-05-05 11:26:02.093330807 +0800
@@ -42,7 +42,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -74,7 +74,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -96,7 +96,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -123,7 +123,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -146,7 +146,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_11.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_11.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_11.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_11.cpp	2025-05-05 11:26:02.028329390 +0800
@@ -41,7 +41,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -95,7 +95,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -122,7 +122,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -145,7 +145,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_12.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_12.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_12.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_12.cpp	2025-05-05 11:26:02.098330917 +0800
@@ -52,13 +52,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -96,12 +96,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -136,12 +136,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_13.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_13.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_13.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_13.cpp	2025-05-05 11:26:02.110331178 +0800
@@ -41,7 +41,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -95,7 +95,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -122,7 +122,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -145,7 +145,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_14.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_14.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_14.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_14.cpp	2025-05-05 11:26:02.108331134 +0800
@@ -41,7 +41,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -95,7 +95,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -122,7 +122,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -145,7 +145,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_15.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_15.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_15.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_15.cpp	2025-05-05 11:26:01.997328714 +0800
@@ -48,7 +48,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -91,7 +91,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
         break;
     }
 }
@@ -121,7 +121,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -155,7 +155,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -190,7 +190,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_16.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_16.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_16.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_16.cpp	2025-05-05 11:26:02.080330524 +0800
@@ -42,7 +42,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -71,7 +71,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
         break;
     }
 }
@@ -95,7 +95,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_17.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_17.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_17.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_17.cpp	2025-05-05 11:26:02.084330611 +0800
@@ -42,7 +42,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -93,7 +93,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_18.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_18.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_18.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_18.cpp	2025-05-05 11:26:01.999328757 +0800
@@ -40,7 +40,7 @@
     printIntLine(data[0].intTwo);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -65,7 +65,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_class(data, has_free_array_class);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -85,7 +85,7 @@
     printIntLine(data[0].intTwo);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_21.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_21.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_21.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_21.cpp	2025-05-05 11:26:01.984328430 +0800
@@ -33,7 +33,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -98,7 +98,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -122,7 +122,7 @@
 {
     if(goodG2bStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_22b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_22b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_22b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_22b.cpp	2025-05-05 11:26:02.085330633 +0800
@@ -34,7 +34,7 @@
 {
     if(badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -60,7 +60,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -70,7 +70,7 @@
     if(goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
@@ -79,7 +79,7 @@
 {
     if(goodG2B1Global)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_31.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_31.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_31.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_31.cpp	2025-05-05 11:26:02.023329281 +0800
@@ -40,7 +40,7 @@
     {
         TwoIntsClass * dataCopy = data;
         TwoIntsClass * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -65,7 +65,7 @@
     {
         TwoIntsClass * dataCopy = data;
         TwoIntsClass * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -86,7 +86,7 @@
         TwoIntsClass * dataCopy = data;
         TwoIntsClass * data = dataCopy;
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_32.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_32.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_32.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_32.cpp	2025-05-05 11:26:02.085330633 +0800
@@ -45,7 +45,7 @@
     }
     {
         TwoIntsClass * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     }
     {
         TwoIntsClass * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -101,7 +101,7 @@
     {
         TwoIntsClass * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_33.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_33.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_33.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_33.cpp	2025-05-05 11:26:02.028329390 +0800
@@ -40,7 +40,7 @@
     printIntLine(data[0].intTwo);
     {
         TwoIntsClass * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -65,7 +65,7 @@
     printIntLine(data[0].intTwo);
     {
         TwoIntsClass * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -86,7 +86,7 @@
     {
         TwoIntsClass * data = dataRef;
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_34.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_34.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_34.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_34.cpp	2025-05-05 11:26:02.030329433 +0800
@@ -47,7 +47,7 @@
     myUnion.unionFirst = data;
     {
         TwoIntsClass * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     myUnion.unionFirst = data;
     {
         TwoIntsClass * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_class(data, no_free_array_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -95,7 +95,7 @@
     {
         TwoIntsClass * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_class(data, has_free_array_class);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_41.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_41.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_41.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_41.cpp	2025-05-05 11:26:02.024329302 +0800
@@ -28,7 +28,7 @@
 
 static void badSink(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -53,7 +53,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -76,7 +76,7 @@
 static void goodB2GSink(TwoIntsClass * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_class(data, has_free_array_class);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_44.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_44.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_44.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_44.cpp	2025-05-05 11:26:02.085330633 +0800
@@ -28,7 +28,7 @@
 
 static void badSink(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -56,7 +56,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -80,7 +80,7 @@
 static void goodB2GSink(TwoIntsClass * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_class(data, has_free_array_class);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_45.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_45.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_45.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_45.cpp	2025-05-05 11:26:02.101330982 +0800
@@ -33,7 +33,7 @@
 static void badSink()
 {
     TwoIntsClass * data = badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -60,7 +60,7 @@
 static void goodG2BSink()
 {
     TwoIntsClass * data = goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -85,7 +85,7 @@
 {
     TwoIntsClass * data = goodB2GData;
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_class(data, has_free_array_class);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_51b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_51b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_51b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_51b.cpp	2025-05-05 11:26:02.110331178 +0800
@@ -28,7 +28,7 @@
 
 void badSink(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink(TwoIntsClass * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_class(data, has_free_array_class);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_52c.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_52c.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_52c.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_52c.cpp	2025-05-05 11:26:02.010328997 +0800
@@ -28,7 +28,7 @@
 
 void badSink_c(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_c(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_c(TwoIntsClass * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_class(data, has_free_array_class);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_53d.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_53d.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_53d.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_53d.cpp	2025-05-05 11:26:01.990328561 +0800
@@ -28,7 +28,7 @@
 
 void badSink_d(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_d(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_d(TwoIntsClass * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_class(data, has_free_array_class);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_54e.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_54e.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_54e.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_54e.cpp	2025-05-05 11:26:01.987328495 +0800
@@ -28,7 +28,7 @@
 
 void badSink_e(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_e(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_e(TwoIntsClass * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_class(data, has_free_array_class);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_63b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_63b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_63b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_63b.cpp	2025-05-05 11:26:01.985328452 +0800
@@ -29,7 +29,7 @@
 void badSink(TwoIntsClass * * dataPtr)
 {
     TwoIntsClass * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void goodG2BSink(TwoIntsClass * * dataPtr)
 {
     TwoIntsClass * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     TwoIntsClass * data = *dataPtr;
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_class(data, has_free_array_class);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_64b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_64b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_64b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_64b.cpp	2025-05-05 11:26:02.022329259 +0800
@@ -32,7 +32,7 @@
     TwoIntsClass * * dataPtr = (TwoIntsClass * *)dataVoidPtr;
     /* dereference dataPtr into data */
     TwoIntsClass * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
     TwoIntsClass * * dataPtr = (TwoIntsClass * *)dataVoidPtr;
     /* dereference dataPtr into data */
     TwoIntsClass * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
     /* dereference dataPtr into data */
     TwoIntsClass * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_class(data, has_free_array_class);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_65b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_65b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_65b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_65b.cpp	2025-05-05 11:26:02.000328779 +0800
@@ -28,7 +28,7 @@
 
 void badSink(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink(TwoIntsClass * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_class(data, has_free_array_class);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_66b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_66b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_66b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_66b.cpp	2025-05-05 11:26:01.988328517 +0800
@@ -30,7 +30,7 @@
 {
     /* copy data out of dataArray */
     TwoIntsClass * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void goodG2BSink(TwoIntsClass * dataArray[])
 {
     TwoIntsClass * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
 {
     TwoIntsClass * data = dataArray[2];
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_class(data, has_free_array_class);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_67b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_67b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_67b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_67b.cpp	2025-05-05 11:26:01.990328561 +0800
@@ -34,7 +34,7 @@
 void badSink(structType myStruct)
 {
     TwoIntsClass * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 void goodG2BSink(structType myStruct)
 {
     TwoIntsClass * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -55,7 +55,7 @@
 {
     TwoIntsClass * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_class(data, has_free_array_class);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_68b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_68b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_68b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_68b.cpp	2025-05-05 11:26:02.082330568 +0800
@@ -33,7 +33,7 @@
 void badSink()
 {
     TwoIntsClass * data = badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink()
 {
     TwoIntsClass * data = goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     TwoIntsClass * data = goodB2GData;
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_class(data, has_free_array_class);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_72b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_72b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_72b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_72b.cpp	2025-05-05 11:26:02.082330568 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataVector */
     TwoIntsClass * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(vector<TwoIntsClass *> dataVector)
 {
     TwoIntsClass * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     TwoIntsClass * data = dataVector[2];
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_class(data, has_free_array_class);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_73b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_73b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_73b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_73b.cpp	2025-05-05 11:26:02.092330786 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataList */
     TwoIntsClass * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(list<TwoIntsClass *> dataList)
 {
     TwoIntsClass * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     TwoIntsClass * data = dataList.back();
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_class(data, has_free_array_class);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_74b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_74b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_74b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_74b.cpp	2025-05-05 11:26:02.091330764 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataMap */
     TwoIntsClass * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(map<int, TwoIntsClass *> dataMap)
 {
     TwoIntsClass * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     TwoIntsClass * data = dataMap[2];
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_class(data, has_free_array_class);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_81_bad.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_81_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_81_bad.cpp	2025-05-05 11:26:02.083330589 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_array_TwoIntsClass_81_bad::action(TwoIntsClass * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_81_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_81_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_81_goodB2G.cpp	2025-05-05 11:26:02.004328866 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__new_array_TwoIntsClass_81_goodB2G::action(TwoIntsClass * data) const
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_class(data, has_free_array_class);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_81_goodG2B.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_81_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_81_goodG2B.cpp	2025-05-05 11:26:02.015329106 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_array_TwoIntsClass_81_goodG2B::action(TwoIntsClass * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_82_bad.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_82_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_82_bad.cpp	2025-05-05 11:26:02.094330829 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_array_TwoIntsClass_82_bad::action(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_82_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_82_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_82_goodB2G.cpp	2025-05-05 11:26:02.076330437 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__new_array_TwoIntsClass_82_goodB2G::action(TwoIntsClass * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_class(data, has_free_array_class);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_82_goodG2B.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_82_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_TwoIntsClass_82_goodG2B.cpp	2025-05-05 11:26:02.007328931 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_array_TwoIntsClass_82_goodG2B::action(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_class(data, no_free_array_class);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_01.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_01.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_01.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_01.cpp	2025-05-05 11:26:02.018329172 +0800
@@ -36,7 +36,7 @@
     data[0].intOne = 0;
     data[0].intTwo = 0;
     printStructLine(&data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -56,7 +56,7 @@
     data[0].intOne = 0;
     data[0].intTwo = 0;
     printStructLine(&data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -72,7 +72,7 @@
     data[0].intTwo = 0;
     printStructLine(&data[0]);
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_02.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_02.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_02.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_02.cpp	2025-05-05 11:26:02.026329346 +0800
@@ -41,7 +41,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -93,7 +93,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -119,7 +119,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_03.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_03.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_03.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_03.cpp	2025-05-05 11:26:02.105331069 +0800
@@ -41,7 +41,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -93,7 +93,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -119,7 +119,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_04.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_04.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_04.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_04.cpp	2025-05-05 11:26:01.990328561 +0800
@@ -47,7 +47,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -78,7 +78,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -99,7 +99,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -125,7 +125,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -147,7 +147,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_05.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_05.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_05.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_05.cpp	2025-05-05 11:26:02.088330698 +0800
@@ -47,7 +47,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -78,7 +78,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -99,7 +99,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -125,7 +125,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -147,7 +147,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_06.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_06.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_06.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_06.cpp	2025-05-05 11:26:02.002328823 +0800
@@ -46,7 +46,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -77,7 +77,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -98,7 +98,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -124,7 +124,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -146,7 +146,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_07.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_07.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_07.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_07.cpp	2025-05-05 11:26:02.079330502 +0800
@@ -46,7 +46,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -77,7 +77,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -98,7 +98,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -124,7 +124,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -146,7 +146,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_08.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_08.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_08.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_08.cpp	2025-05-05 11:26:01.994328648 +0800
@@ -54,7 +54,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -85,7 +85,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -106,7 +106,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -132,7 +132,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -154,7 +154,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_09.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_09.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_09.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_09.cpp	2025-05-05 11:26:02.000328779 +0800
@@ -41,7 +41,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -93,7 +93,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -119,7 +119,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_10.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_10.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_10.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_10.cpp	2025-05-05 11:26:02.076330437 +0800
@@ -41,7 +41,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -93,7 +93,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -119,7 +119,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_11.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_11.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_11.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_11.cpp	2025-05-05 11:26:02.101330982 +0800
@@ -40,7 +40,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -92,7 +92,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -140,7 +140,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_12.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_12.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_12.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_12.cpp	2025-05-05 11:26:02.026329346 +0800
@@ -50,13 +50,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -92,12 +92,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -130,12 +130,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_13.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_13.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_13.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_13.cpp	2025-05-05 11:26:02.021329237 +0800
@@ -40,7 +40,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -92,7 +92,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -140,7 +140,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_14.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_14.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_14.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_14.cpp	2025-05-05 11:26:02.077330459 +0800
@@ -40,7 +40,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -92,7 +92,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -140,7 +140,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_15.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_15.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_15.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_15.cpp	2025-05-05 11:26:02.027329368 +0800
@@ -47,7 +47,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -89,7 +89,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
         break;
     }
 }
@@ -118,7 +118,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -151,7 +151,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -185,7 +185,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_16.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_16.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_16.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_16.cpp	2025-05-05 11:26:01.991328583 +0800
@@ -41,7 +41,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -69,7 +69,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
         break;
     }
 }
@@ -92,7 +92,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_17.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_17.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_17.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_17.cpp	2025-05-05 11:26:02.015329106 +0800
@@ -41,7 +41,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -68,7 +68,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -90,7 +90,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_18.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_18.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_18.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_18.cpp	2025-05-05 11:26:01.995328670 +0800
@@ -39,7 +39,7 @@
     printStructLine(&data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -63,7 +63,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -82,7 +82,7 @@
     printStructLine(&data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_21.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_21.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_21.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_21.cpp	2025-05-05 11:26:02.030329433 +0800
@@ -33,7 +33,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -96,7 +96,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -119,7 +119,7 @@
 {
     if(goodG2bStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_22b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_22b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_22b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_22b.cpp	2025-05-05 11:26:02.100330960 +0800
@@ -34,7 +34,7 @@
 {
     if(badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -60,7 +60,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -70,7 +70,7 @@
     if(goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
@@ -79,7 +79,7 @@
 {
     if(goodG2B1Global)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_31.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_31.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_31.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_31.cpp	2025-05-05 11:26:02.098330917 +0800
@@ -39,7 +39,7 @@
     {
         twoIntsStruct * dataCopy = data;
         twoIntsStruct * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -63,7 +63,7 @@
     {
         twoIntsStruct * dataCopy = data;
         twoIntsStruct * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -83,7 +83,7 @@
         twoIntsStruct * dataCopy = data;
         twoIntsStruct * data = dataCopy;
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_32.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_32.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_32.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_32.cpp	2025-05-05 11:26:02.092330786 +0800
@@ -44,7 +44,7 @@
     }
     {
         twoIntsStruct * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     }
     {
         twoIntsStruct * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -98,7 +98,7 @@
     {
         twoIntsStruct * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_33.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_33.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_33.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_33.cpp	2025-05-05 11:26:01.987328495 +0800
@@ -39,7 +39,7 @@
     printStructLine(&data[0]);
     {
         twoIntsStruct * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -63,7 +63,7 @@
     printStructLine(&data[0]);
     {
         twoIntsStruct * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -83,7 +83,7 @@
     {
         twoIntsStruct * data = dataRef;
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_34.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_34.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_34.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_34.cpp	2025-05-05 11:26:02.083330589 +0800
@@ -46,7 +46,7 @@
     myUnion.unionFirst = data;
     {
         twoIntsStruct * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     myUnion.unionFirst = data;
     {
         twoIntsStruct * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_struct(data, no_free_array_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -92,7 +92,7 @@
     {
         twoIntsStruct * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_struct(data, has_free_array_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_41.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_41.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_41.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_41.cpp	2025-05-05 11:26:01.988328517 +0800
@@ -28,7 +28,7 @@
 
 static void badSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -74,7 +74,7 @@
 static void goodB2GSink(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_44.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_44.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_44.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_44.cpp	2025-05-05 11:26:02.002328823 +0800
@@ -28,7 +28,7 @@
 
 static void badSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -55,7 +55,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -78,7 +78,7 @@
 static void goodB2GSink(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_45.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_45.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_45.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_45.cpp	2025-05-05 11:26:02.076330437 +0800
@@ -33,7 +33,7 @@
 static void badSink()
 {
     twoIntsStruct * data = badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
 static void goodG2BSink()
 {
     twoIntsStruct * data = goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -83,7 +83,7 @@
 {
     twoIntsStruct * data = goodB2GData;
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_51b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_51b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_51b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_51b.cpp	2025-05-05 11:26:02.089330720 +0800
@@ -28,7 +28,7 @@
 
 void badSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_52c.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_52c.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_52c.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_52c.cpp	2025-05-05 11:26:02.100330960 +0800
@@ -28,7 +28,7 @@
 
 void badSink_c(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_c(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_c(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_53d.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_53d.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_53d.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_53d.cpp	2025-05-05 11:26:02.010328997 +0800
@@ -28,7 +28,7 @@
 
 void badSink_d(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_d(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_d(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_54e.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_54e.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_54e.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_54e.cpp	2025-05-05 11:26:02.097330895 +0800
@@ -28,7 +28,7 @@
 
 void badSink_e(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_e(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_e(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_63b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_63b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_63b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_63b.cpp	2025-05-05 11:26:02.085330633 +0800
@@ -29,7 +29,7 @@
 void badSink(twoIntsStruct * * dataPtr)
 {
     twoIntsStruct * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void goodG2BSink(twoIntsStruct * * dataPtr)
 {
     twoIntsStruct * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     twoIntsStruct * data = *dataPtr;
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_64b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_64b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_64b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_64b.cpp	2025-05-05 11:26:02.087330676 +0800
@@ -32,7 +32,7 @@
     twoIntsStruct * * dataPtr = (twoIntsStruct * *)dataVoidPtr;
     /* dereference dataPtr into data */
     twoIntsStruct * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
     twoIntsStruct * * dataPtr = (twoIntsStruct * *)dataVoidPtr;
     /* dereference dataPtr into data */
     twoIntsStruct * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
     /* dereference dataPtr into data */
     twoIntsStruct * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_65b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_65b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_65b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_65b.cpp	2025-05-05 11:26:02.024329302 +0800
@@ -28,7 +28,7 @@
 
 void badSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_66b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_66b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_66b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_66b.cpp	2025-05-05 11:26:02.007328931 +0800
@@ -30,7 +30,7 @@
 {
     /* copy data out of dataArray */
     twoIntsStruct * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void goodG2BSink(twoIntsStruct * dataArray[])
 {
     twoIntsStruct * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
 {
     twoIntsStruct * data = dataArray[2];
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_67b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_67b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_67b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_67b.cpp	2025-05-05 11:26:01.991328583 +0800
@@ -34,7 +34,7 @@
 void badSink(structType myStruct)
 {
     twoIntsStruct * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 void goodG2BSink(structType myStruct)
 {
     twoIntsStruct * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -55,7 +55,7 @@
 {
     twoIntsStruct * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_68b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_68b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_68b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_68b.cpp	2025-05-05 11:26:02.017329150 +0800
@@ -33,7 +33,7 @@
 void badSink()
 {
     twoIntsStruct * data = badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink()
 {
     twoIntsStruct * data = goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     twoIntsStruct * data = goodB2GData;
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_72b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_72b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_72b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_72b.cpp	2025-05-05 11:26:01.990328561 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataVector */
     twoIntsStruct * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(vector<twoIntsStruct *> dataVector)
 {
     twoIntsStruct * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     twoIntsStruct * data = dataVector[2];
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_73b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_73b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_73b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_73b.cpp	2025-05-05 11:26:02.076330437 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataList */
     twoIntsStruct * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(list<twoIntsStruct *> dataList)
 {
     twoIntsStruct * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     twoIntsStruct * data = dataList.back();
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_74b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_74b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_74b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_74b.cpp	2025-05-05 11:26:02.092330786 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataMap */
     twoIntsStruct * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(map<int, twoIntsStruct *> dataMap)
 {
     twoIntsStruct * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     twoIntsStruct * data = dataMap[2];
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_81_bad.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_81_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_81_bad.cpp	2025-05-05 11:26:02.007328931 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_array_twointsStruct_81_bad::action(twoIntsStruct * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_81_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_81_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_81_goodB2G.cpp	2025-05-05 11:26:01.990328561 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__new_array_twointsStruct_81_goodB2G::action(twoIntsStruct * data) const
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_81_goodG2B.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_81_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_81_goodG2B.cpp	2025-05-05 11:26:02.015329106 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_array_twointsStruct_81_goodG2B::action(twoIntsStruct * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_82_bad.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_82_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_82_bad.cpp	2025-05-05 11:26:02.110331178 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_array_twointsStruct_82_bad::action(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_82_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_82_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_82_goodB2G.cpp	2025-05-05 11:26:02.001328801 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__new_array_twointsStruct_82_goodB2G::action(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_struct(data, has_free_array_struct);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_82_goodG2B.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_82_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_twointsStruct_82_goodG2B.cpp	2025-05-05 11:26:02.088330698 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_array_twointsStruct_82_goodG2B::action(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_struct(data, no_free_array_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_01.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_01.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_01.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_01.cpp	2025-05-05 11:26:02.082330568 +0800
@@ -35,7 +35,7 @@
     /* Initialize and make use of data */
     wcscpy(data, L"A String");
     printWLine(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
     /* Initialize and make use of data */
     wcscpy(data, L"A String");
     printWLine(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -69,7 +69,7 @@
     wcscpy(data, L"A String");
     printWLine(data);
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_wchar(data, has_free_array_wchar);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_02.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_02.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_02.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_02.cpp	2025-05-05 11:26:02.019329193 +0800
@@ -40,7 +40,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -90,7 +90,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_03.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_03.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_03.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_03.cpp	2025-05-05 11:26:02.106331091 +0800
@@ -40,7 +40,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -90,7 +90,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_04.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_04.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_04.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_04.cpp	2025-05-05 11:26:02.077330459 +0800
@@ -46,7 +46,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -76,7 +76,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -96,7 +96,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -121,7 +121,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -142,7 +142,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_05.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_05.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_05.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_05.cpp	2025-05-05 11:26:01.996328692 +0800
@@ -46,7 +46,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -76,7 +76,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -96,7 +96,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -121,7 +121,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -142,7 +142,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_06.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_06.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_06.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_06.cpp	2025-05-05 11:26:02.090330742 +0800
@@ -45,7 +45,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -95,7 +95,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -120,7 +120,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_07.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_07.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_07.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_07.cpp	2025-05-05 11:26:02.006328910 +0800
@@ -45,7 +45,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -95,7 +95,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -120,7 +120,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_08.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_08.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_08.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_08.cpp	2025-05-05 11:26:02.080330524 +0800
@@ -53,7 +53,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -83,7 +83,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -103,7 +103,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -128,7 +128,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -149,7 +149,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_09.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_09.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_09.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_09.cpp	2025-05-05 11:26:02.110331178 +0800
@@ -40,7 +40,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -90,7 +90,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_10.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_10.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_10.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_10.cpp	2025-05-05 11:26:02.077330459 +0800
@@ -40,7 +40,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -90,7 +90,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_11.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_11.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_11.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_11.cpp	2025-05-05 11:26:02.085330633 +0800
@@ -39,7 +39,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -89,7 +89,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -114,7 +114,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -135,7 +135,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_12.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_12.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_12.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_12.cpp	2025-05-05 11:26:02.014329084 +0800
@@ -48,13 +48,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -88,12 +88,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -124,12 +124,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_13.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_13.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_13.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_13.cpp	2025-05-05 11:26:02.096330873 +0800
@@ -39,7 +39,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -89,7 +89,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -114,7 +114,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -135,7 +135,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_14.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_14.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_14.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_14.cpp	2025-05-05 11:26:02.024329302 +0800
@@ -39,7 +39,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -89,7 +89,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -114,7 +114,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -135,7 +135,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_15.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_15.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_15.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_15.cpp	2025-05-05 11:26:02.080330524 +0800
@@ -46,7 +46,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -87,7 +87,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
         break;
     }
 }
@@ -115,7 +115,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -147,7 +147,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -180,7 +180,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_16.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_16.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_16.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_16.cpp	2025-05-05 11:26:02.079330502 +0800
@@ -40,7 +40,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -67,7 +67,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
         break;
     }
 }
@@ -89,7 +89,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_17.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_17.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_17.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_17.cpp	2025-05-05 11:26:02.098330917 +0800
@@ -40,7 +40,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -87,7 +87,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_18.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_18.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_18.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_18.cpp	2025-05-05 11:26:02.102331004 +0800
@@ -38,7 +38,7 @@
     printWLine(data);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_wchar(data, has_free_array_wchar);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -79,7 +79,7 @@
     printWLine(data);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_21.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_21.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_21.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_21.cpp	2025-05-05 11:26:01.991328583 +0800
@@ -33,7 +33,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -94,7 +94,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -116,7 +116,7 @@
 {
     if(goodG2bStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_22b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_22b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_22b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_22b.cpp	2025-05-05 11:26:02.003328844 +0800
@@ -34,7 +34,7 @@
 {
     if(badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -60,7 +60,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -70,7 +70,7 @@
     if(goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
@@ -79,7 +79,7 @@
 {
     if(goodG2B1Global)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_31.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_31.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_31.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_31.cpp	2025-05-05 11:26:02.088330698 +0800
@@ -38,7 +38,7 @@
     {
         wchar_t * dataCopy = data;
         wchar_t * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -61,7 +61,7 @@
     {
         wchar_t * dataCopy = data;
         wchar_t * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
         wchar_t * dataCopy = data;
         wchar_t * data = dataCopy;
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_32.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_32.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_32.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_32.cpp	2025-05-05 11:26:02.001328801 +0800
@@ -43,7 +43,7 @@
     }
     {
         wchar_t * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     }
     {
         wchar_t * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -95,7 +95,7 @@
     {
         wchar_t * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_33.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_33.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_33.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_33.cpp	2025-05-05 11:26:02.104331047 +0800
@@ -38,7 +38,7 @@
     printWLine(data);
     {
         wchar_t * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -61,7 +61,7 @@
     printWLine(data);
     {
         wchar_t * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
     {
         wchar_t * data = dataRef;
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_34.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_34.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_34.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_34.cpp	2025-05-05 11:26:02.098330917 +0800
@@ -45,7 +45,7 @@
     myUnion.unionFirst = data;
     {
         wchar_t * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     myUnion.unionFirst = data;
     {
         wchar_t * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_array_wchar(data, no_free_array_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -89,7 +89,7 @@
     {
         wchar_t * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        delete[] data;
+        callback_array_wchar(data, has_free_array_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_41.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_41.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_41.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_41.cpp	2025-05-05 11:26:02.022329259 +0800
@@ -28,7 +28,7 @@
 
 static void badSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -72,7 +72,7 @@
 static void goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_wchar(data, has_free_array_wchar);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_44.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_44.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_44.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_44.cpp	2025-05-05 11:26:02.020329215 +0800
@@ -28,7 +28,7 @@
 
 static void badSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -76,7 +76,7 @@
 static void goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_wchar(data, has_free_array_wchar);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_45.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_45.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_45.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_45.cpp	2025-05-05 11:26:02.008328954 +0800
@@ -33,7 +33,7 @@
 static void badSink()
 {
     wchar_t * data = badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -58,7 +58,7 @@
 static void goodG2BSink()
 {
     wchar_t * data = goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -81,7 +81,7 @@
 {
     wchar_t * data = goodB2GData;
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_wchar(data, has_free_array_wchar);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_51b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_51b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_51b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_51b.cpp	2025-05-05 11:26:02.077330459 +0800
@@ -28,7 +28,7 @@
 
 void badSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_wchar(data, has_free_array_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_52c.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_52c.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_52c.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_52c.cpp	2025-05-05 11:26:02.017329150 +0800
@@ -28,7 +28,7 @@
 
 void badSink_c(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_c(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_c(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_wchar(data, has_free_array_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_53d.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_53d.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_53d.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_53d.cpp	2025-05-05 11:26:02.088330698 +0800
@@ -28,7 +28,7 @@
 
 void badSink_d(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_d(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_d(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_wchar(data, has_free_array_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_54e.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_54e.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_54e.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_54e.cpp	2025-05-05 11:26:02.107331113 +0800
@@ -28,7 +28,7 @@
 
 void badSink_e(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_e(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_e(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_wchar(data, has_free_array_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_63b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_63b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_63b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_63b.cpp	2025-05-05 11:26:02.090330742 +0800
@@ -29,7 +29,7 @@
 void badSink(wchar_t * * dataPtr)
 {
     wchar_t * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void goodG2BSink(wchar_t * * dataPtr)
 {
     wchar_t * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     wchar_t * data = *dataPtr;
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_wchar(data, has_free_array_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_64b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_64b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_64b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_64b.cpp	2025-05-05 11:26:02.022329259 +0800
@@ -32,7 +32,7 @@
     wchar_t * * dataPtr = (wchar_t * *)dataVoidPtr;
     /* dereference dataPtr into data */
     wchar_t * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
     wchar_t * * dataPtr = (wchar_t * *)dataVoidPtr;
     /* dereference dataPtr into data */
     wchar_t * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
     /* dereference dataPtr into data */
     wchar_t * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_wchar(data, has_free_array_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_65b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_65b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_65b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_65b.cpp	2025-05-05 11:26:02.084330611 +0800
@@ -28,7 +28,7 @@
 
 void badSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_wchar(data, has_free_array_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_66b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_66b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_66b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_66b.cpp	2025-05-05 11:26:02.106331091 +0800
@@ -30,7 +30,7 @@
 {
     /* copy data out of dataArray */
     wchar_t * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void goodG2BSink(wchar_t * dataArray[])
 {
     wchar_t * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
 {
     wchar_t * data = dataArray[2];
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_wchar(data, has_free_array_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_67b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_67b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_67b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_67b.cpp	2025-05-05 11:26:02.016329128 +0800
@@ -34,7 +34,7 @@
 void badSink(structType myStruct)
 {
     wchar_t * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 void goodG2BSink(structType myStruct)
 {
     wchar_t * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -55,7 +55,7 @@
 {
     wchar_t * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_wchar(data, has_free_array_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_68b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_68b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_68b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_68b.cpp	2025-05-05 11:26:02.011329019 +0800
@@ -33,7 +33,7 @@
 void badSink()
 {
     wchar_t * data = badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink()
 {
     wchar_t * data = goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     wchar_t * data = goodB2GData;
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_wchar(data, has_free_array_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_72b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_72b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_72b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_72b.cpp	2025-05-05 11:26:02.010328997 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataVector */
     wchar_t * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(vector<wchar_t *> dataVector)
 {
     wchar_t * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     wchar_t * data = dataVector[2];
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_wchar(data, has_free_array_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_73b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_73b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_73b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_73b.cpp	2025-05-05 11:26:02.008328954 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataList */
     wchar_t * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(list<wchar_t *> dataList)
 {
     wchar_t * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     wchar_t * data = dataList.back();
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_wchar(data, has_free_array_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_74b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_74b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_74b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_74b.cpp	2025-05-05 11:26:02.107331113 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataMap */
     wchar_t * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(map<int, wchar_t *> dataMap)
 {
     wchar_t * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     wchar_t * data = dataMap[2];
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_wchar(data, has_free_array_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_81_bad.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_81_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_81_bad.cpp	2025-05-05 11:26:02.022329259 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_array_wchar_t_81_bad::action(wchar_t * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_81_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_81_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_81_goodB2G.cpp	2025-05-05 11:26:02.086330655 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__new_array_wchar_t_81_goodB2G::action(wchar_t * data) const
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_wchar(data, has_free_array_wchar);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_81_goodG2B.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_81_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_81_goodG2B.cpp	2025-05-05 11:26:02.018329172 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_array_wchar_t_81_goodG2B::action(wchar_t * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_82_bad.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_82_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_82_bad.cpp	2025-05-05 11:26:02.078330480 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_array_wchar_t_82_bad::action(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_82_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_82_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_82_goodB2G.cpp	2025-05-05 11:26:02.020329215 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__new_array_wchar_t_82_goodB2G::action(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    delete[] data;
+    callback_array_wchar(data, has_free_array_wchar);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_82_goodG2B.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_82_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_array_wchar_t_82_goodG2B.cpp	2025-05-05 11:26:02.020329215 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_array_wchar_t_82_goodG2B::action(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_array_wchar(data, no_free_array_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_01.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_01.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_01.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_01.cpp	2025-05-05 11:26:02.021329237 +0800
@@ -35,7 +35,7 @@
     /* Initialize and make use of data */
     *data = 'A';
     printHexCharLine(*data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
     /* Initialize and make use of data */
     *data = 'A';
     printHexCharLine(*data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -69,7 +69,7 @@
     *data = 'A';
     printHexCharLine(*data);
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_char(data, has_free_new_char);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_02.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_02.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_02.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_02.cpp	2025-05-05 11:26:01.988328517 +0800
@@ -40,7 +40,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -90,7 +90,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_03.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_03.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_03.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_03.cpp	2025-05-05 11:26:02.087330676 +0800
@@ -40,7 +40,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -90,7 +90,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_04.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_04.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_04.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_04.cpp	2025-05-05 11:26:02.094330829 +0800
@@ -46,7 +46,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -76,7 +76,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -96,7 +96,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -121,7 +121,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -142,7 +142,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_05.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_05.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_05.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_05.cpp	2025-05-05 11:26:02.010328997 +0800
@@ -46,7 +46,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -76,7 +76,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -96,7 +96,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -121,7 +121,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -142,7 +142,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_06.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_06.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_06.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_06.cpp	2025-05-05 11:26:01.997328714 +0800
@@ -45,7 +45,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -95,7 +95,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -120,7 +120,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_07.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_07.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_07.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_07.cpp	2025-05-05 11:26:02.088330698 +0800
@@ -45,7 +45,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -95,7 +95,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -120,7 +120,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_08.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_08.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_08.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_08.cpp	2025-05-05 11:26:02.001328801 +0800
@@ -53,7 +53,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -83,7 +83,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -103,7 +103,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -128,7 +128,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -149,7 +149,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_09.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_09.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_09.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_09.cpp	2025-05-05 11:26:02.095330851 +0800
@@ -40,7 +40,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -90,7 +90,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_10.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_10.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_10.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_10.cpp	2025-05-05 11:26:01.993328626 +0800
@@ -40,7 +40,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -90,7 +90,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_11.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_11.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_11.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_11.cpp	2025-05-05 11:26:02.010328997 +0800
@@ -39,7 +39,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -89,7 +89,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -114,7 +114,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -135,7 +135,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_12.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_12.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_12.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_12.cpp	2025-05-05 11:26:02.013329062 +0800
@@ -48,13 +48,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -88,12 +88,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -124,12 +124,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_13.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_13.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_13.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_13.cpp	2025-05-05 11:26:02.090330742 +0800
@@ -39,7 +39,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -89,7 +89,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -114,7 +114,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -135,7 +135,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_14.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_14.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_14.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_14.cpp	2025-05-05 11:26:02.097330895 +0800
@@ -39,7 +39,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -89,7 +89,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -114,7 +114,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -135,7 +135,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_15.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_15.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_15.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_15.cpp	2025-05-05 11:26:02.028329390 +0800
@@ -46,7 +46,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -87,7 +87,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
         break;
     }
 }
@@ -115,7 +115,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -147,7 +147,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -180,7 +180,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_16.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_16.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_16.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_16.cpp	2025-05-05 11:26:02.109331157 +0800
@@ -40,7 +40,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -67,7 +67,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
         break;
     }
 }
@@ -89,7 +89,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_17.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_17.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_17.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_17.cpp	2025-05-05 11:26:02.092330786 +0800
@@ -40,7 +40,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -87,7 +87,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_18.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_18.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_18.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_18.cpp	2025-05-05 11:26:02.099330938 +0800
@@ -38,7 +38,7 @@
     printHexCharLine(*data);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_char(data, has_free_new_char);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -79,7 +79,7 @@
     printHexCharLine(*data);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_21.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_21.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_21.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_21.cpp	2025-05-05 11:26:02.089330720 +0800
@@ -33,7 +33,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -94,7 +94,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -116,7 +116,7 @@
 {
     if(goodG2bStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_22b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_22b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_22b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_22b.cpp	2025-05-05 11:26:02.026329346 +0800
@@ -34,7 +34,7 @@
 {
     if(badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -60,7 +60,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -70,7 +70,7 @@
     if(goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
@@ -79,7 +79,7 @@
 {
     if(goodG2B1Global)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_31.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_31.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_31.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_31.cpp	2025-05-05 11:26:01.989328539 +0800
@@ -38,7 +38,7 @@
     {
         char * dataCopy = data;
         char * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -61,7 +61,7 @@
     {
         char * dataCopy = data;
         char * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
         char * dataCopy = data;
         char * data = dataCopy;
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_32.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_32.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_32.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_32.cpp	2025-05-05 11:26:02.016329128 +0800
@@ -43,7 +43,7 @@
     }
     {
         char * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     }
     {
         char * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -95,7 +95,7 @@
     {
         char * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_33.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_33.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_33.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_33.cpp	2025-05-05 11:26:01.997328714 +0800
@@ -38,7 +38,7 @@
     printHexCharLine(*data);
     {
         char * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -61,7 +61,7 @@
     printHexCharLine(*data);
     {
         char * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
     {
         char * data = dataRef;
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_34.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_34.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_34.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_34.cpp	2025-05-05 11:26:02.103331026 +0800
@@ -45,7 +45,7 @@
     myUnion.unionFirst = data;
     {
         char * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     myUnion.unionFirst = data;
     {
         char * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_char(data, no_free_new_char);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -89,7 +89,7 @@
     {
         char * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_char(data, has_free_new_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_41.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_41.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_41.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_41.cpp	2025-05-05 11:26:01.985328452 +0800
@@ -28,7 +28,7 @@
 
 static void badSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -72,7 +72,7 @@
 static void goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_char(data, has_free_new_char);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_44.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_44.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_44.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_44.cpp	2025-05-05 11:26:02.011329019 +0800
@@ -28,7 +28,7 @@
 
 static void badSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -76,7 +76,7 @@
 static void goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_char(data, has_free_new_char);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_45.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_45.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_45.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_45.cpp	2025-05-05 11:26:02.083330589 +0800
@@ -33,7 +33,7 @@
 static void badSink()
 {
     char * data = badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -58,7 +58,7 @@
 static void goodG2BSink()
 {
     char * data = goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -81,7 +81,7 @@
 {
     char * data = goodB2GData;
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_char(data, has_free_new_char);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_51b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_51b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_51b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_51b.cpp	2025-05-05 11:26:02.101330982 +0800
@@ -28,7 +28,7 @@
 
 void badSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_char(data, has_free_new_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_52c.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_52c.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_52c.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_52c.cpp	2025-05-05 11:26:02.008328954 +0800
@@ -28,7 +28,7 @@
 
 void badSink_c(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_c(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_c(char * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_char(data, has_free_new_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_53d.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_53d.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_53d.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_53d.cpp	2025-05-05 11:26:01.994328648 +0800
@@ -28,7 +28,7 @@
 
 void badSink_d(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_d(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_d(char * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_char(data, has_free_new_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_54e.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_54e.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_54e.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_54e.cpp	2025-05-05 11:26:02.000328779 +0800
@@ -28,7 +28,7 @@
 
 void badSink_e(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_e(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_e(char * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_char(data, has_free_new_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_63b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_63b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_63b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_63b.cpp	2025-05-05 11:26:01.992328604 +0800
@@ -29,7 +29,7 @@
 void badSink(char * * dataPtr)
 {
     char * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void goodG2BSink(char * * dataPtr)
 {
     char * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     char * data = *dataPtr;
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_char(data, has_free_new_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_64b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_64b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_64b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_64b.cpp	2025-05-05 11:26:02.003328844 +0800
@@ -32,7 +32,7 @@
     char * * dataPtr = (char * *)dataVoidPtr;
     /* dereference dataPtr into data */
     char * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
     char * * dataPtr = (char * *)dataVoidPtr;
     /* dereference dataPtr into data */
     char * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
     /* dereference dataPtr into data */
     char * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_char(data, has_free_new_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_65b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_65b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_65b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_65b.cpp	2025-05-05 11:26:02.004328866 +0800
@@ -28,7 +28,7 @@
 
 void badSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_char(data, has_free_new_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_66b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_66b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_66b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_66b.cpp	2025-05-05 11:26:02.082330568 +0800
@@ -30,7 +30,7 @@
 {
     /* copy data out of dataArray */
     char * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void goodG2BSink(char * dataArray[])
 {
     char * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
 {
     char * data = dataArray[2];
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_char(data, has_free_new_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_67b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_67b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_67b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_67b.cpp	2025-05-05 11:26:02.015329106 +0800
@@ -34,7 +34,7 @@
 void badSink(structType myStruct)
 {
     char * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 void goodG2BSink(structType myStruct)
 {
     char * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -55,7 +55,7 @@
 {
     char * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_char(data, has_free_new_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_68b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_68b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_68b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_68b.cpp	2025-05-05 11:26:01.992328604 +0800
@@ -33,7 +33,7 @@
 void badSink()
 {
     char * data = badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink()
 {
     char * data = goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     char * data = goodB2GData;
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_char(data, has_free_new_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_72b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_72b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_72b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_72b.cpp	2025-05-05 11:26:01.999328757 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataVector */
     char * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(vector<char *> dataVector)
 {
     char * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     char * data = dataVector[2];
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_char(data, has_free_new_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_73b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_73b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_73b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_73b.cpp	2025-05-05 11:26:02.104331047 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataList */
     char * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(list<char *> dataList)
 {
     char * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     char * data = dataList.back();
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_char(data, has_free_new_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_74b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_74b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_74b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_74b.cpp	2025-05-05 11:26:02.085330633 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataMap */
     char * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(map<int, char *> dataMap)
 {
     char * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     char * data = dataMap[2];
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_char(data, has_free_new_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_81_bad.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_81_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_81_bad.cpp	2025-05-05 11:26:02.006328910 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_char_81_bad::action(char * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_81_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_81_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_81_goodB2G.cpp	2025-05-05 11:26:02.102331004 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__new_char_81_goodB2G::action(char * data) const
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_char(data, has_free_new_char);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_81_goodG2B.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_81_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_81_goodG2B.cpp	2025-05-05 11:26:02.029329412 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_char_81_goodG2B::action(char * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_82_bad.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_82_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_82_bad.cpp	2025-05-05 11:26:02.016329128 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_char_82_bad::action(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_82_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_82_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_82_goodB2G.cpp	2025-05-05 11:26:02.015329106 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__new_char_82_goodB2G::action(char * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_char(data, has_free_new_char);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_82_goodG2B.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_82_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_82_goodG2B.cpp	2025-05-05 11:26:01.995328670 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_char_82_goodG2B::action(char * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_char(data, no_free_new_char);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_01.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_01.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_01.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_01.cpp	2025-05-05 11:26:02.019329193 +0800
@@ -35,7 +35,7 @@
     /* Initialize and make use of data */
     *data = 5;
     printIntLine(*data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
     /* Initialize and make use of data */
     *data = 5;
     printIntLine(*data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -69,7 +69,7 @@
     *data = 5;
     printIntLine(*data);
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int(data, has_free_new_int);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_02.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_02.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_02.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_02.cpp	2025-05-05 11:26:02.029329412 +0800
@@ -40,7 +40,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -90,7 +90,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_03.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_03.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_03.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_03.cpp	2025-05-05 11:26:02.098330917 +0800
@@ -40,7 +40,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -90,7 +90,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_04.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_04.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_04.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_04.cpp	2025-05-05 11:26:01.999328757 +0800
@@ -46,7 +46,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -76,7 +76,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -96,7 +96,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -121,7 +121,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -142,7 +142,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_05.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_05.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_05.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_05.cpp	2025-05-05 11:26:01.999328757 +0800
@@ -46,7 +46,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -76,7 +76,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -96,7 +96,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -121,7 +121,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -142,7 +142,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_06.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_06.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_06.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_06.cpp	2025-05-05 11:26:02.100330960 +0800
@@ -45,7 +45,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -95,7 +95,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -120,7 +120,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_07.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_07.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_07.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_07.cpp	2025-05-05 11:26:02.030329433 +0800
@@ -45,7 +45,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -95,7 +95,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -120,7 +120,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_08.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_08.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_08.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_08.cpp	2025-05-05 11:26:02.019329193 +0800
@@ -53,7 +53,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -83,7 +83,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -103,7 +103,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -128,7 +128,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -149,7 +149,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_09.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_09.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_09.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_09.cpp	2025-05-05 11:26:02.111331200 +0800
@@ -40,7 +40,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -90,7 +90,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_10.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_10.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_10.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_10.cpp	2025-05-05 11:26:02.080330524 +0800
@@ -40,7 +40,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -90,7 +90,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_11.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_11.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_11.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_11.cpp	2025-05-05 11:26:02.001328801 +0800
@@ -39,7 +39,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -89,7 +89,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -114,7 +114,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -135,7 +135,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_12.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_12.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_12.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_12.cpp	2025-05-05 11:26:02.026329346 +0800
@@ -48,13 +48,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -88,12 +88,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -124,12 +124,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_13.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_13.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_13.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_13.cpp	2025-05-05 11:26:02.106331091 +0800
@@ -39,7 +39,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -89,7 +89,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -114,7 +114,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -135,7 +135,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_14.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_14.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_14.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_14.cpp	2025-05-05 11:26:02.083330589 +0800
@@ -39,7 +39,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -89,7 +89,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -114,7 +114,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -135,7 +135,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_15.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_15.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_15.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_15.cpp	2025-05-05 11:26:02.104331047 +0800
@@ -46,7 +46,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -87,7 +87,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
         break;
     }
 }
@@ -115,7 +115,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -147,7 +147,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -180,7 +180,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_16.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_16.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_16.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_16.cpp	2025-05-05 11:26:02.112331222 +0800
@@ -40,7 +40,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -67,7 +67,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
         break;
     }
 }
@@ -89,7 +89,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_17.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_17.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_17.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_17.cpp	2025-05-05 11:26:02.019329193 +0800
@@ -40,7 +40,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -87,7 +87,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_18.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_18.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_18.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_18.cpp	2025-05-05 11:26:02.108331134 +0800
@@ -38,7 +38,7 @@
     printIntLine(*data);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int(data, has_free_new_int);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -79,7 +79,7 @@
     printIntLine(*data);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_21.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_21.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_21.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_21.cpp	2025-05-05 11:26:02.106331091 +0800
@@ -33,7 +33,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -94,7 +94,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -116,7 +116,7 @@
 {
     if(goodG2bStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_22b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_22b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_22b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_22b.cpp	2025-05-05 11:26:02.082330568 +0800
@@ -34,7 +34,7 @@
 {
     if(badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -60,7 +60,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -70,7 +70,7 @@
     if(goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
@@ -79,7 +79,7 @@
 {
     if(goodG2B1Global)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_31.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_31.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_31.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_31.cpp	2025-05-05 11:26:02.108331134 +0800
@@ -38,7 +38,7 @@
     {
         int * dataCopy = data;
         int * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -61,7 +61,7 @@
     {
         int * dataCopy = data;
         int * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
         int * dataCopy = data;
         int * data = dataCopy;
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_32.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_32.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_32.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_32.cpp	2025-05-05 11:26:02.096330873 +0800
@@ -43,7 +43,7 @@
     }
     {
         int * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     }
     {
         int * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -95,7 +95,7 @@
     {
         int * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_33.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_33.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_33.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_33.cpp	2025-05-05 11:26:01.994328648 +0800
@@ -38,7 +38,7 @@
     printIntLine(*data);
     {
         int * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -61,7 +61,7 @@
     printIntLine(*data);
     {
         int * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
     {
         int * data = dataRef;
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_34.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_34.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_34.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_34.cpp	2025-05-05 11:26:02.093330807 +0800
@@ -45,7 +45,7 @@
     myUnion.unionFirst = data;
     {
         int * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     myUnion.unionFirst = data;
     {
         int * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int(data, no_free_new_int);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -89,7 +89,7 @@
     {
         int * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int(data, has_free_new_int);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_41.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_41.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_41.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_41.cpp	2025-05-05 11:26:02.083330589 +0800
@@ -28,7 +28,7 @@
 
 static void badSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -72,7 +72,7 @@
 static void goodB2GSink(int * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int(data, has_free_new_int);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_44.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_44.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_44.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_44.cpp	2025-05-05 11:26:02.024329302 +0800
@@ -28,7 +28,7 @@
 
 static void badSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -76,7 +76,7 @@
 static void goodB2GSink(int * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int(data, has_free_new_int);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_45.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_45.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_45.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_45.cpp	2025-05-05 11:26:02.014329084 +0800
@@ -33,7 +33,7 @@
 static void badSink()
 {
     int * data = badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -58,7 +58,7 @@
 static void goodG2BSink()
 {
     int * data = goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -81,7 +81,7 @@
 {
     int * data = goodB2GData;
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int(data, has_free_new_int);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_51b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_51b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_51b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_51b.cpp	2025-05-05 11:26:02.009328975 +0800
@@ -28,7 +28,7 @@
 
 void badSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink(int * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int(data, has_free_new_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_52c.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_52c.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_52c.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_52c.cpp	2025-05-05 11:26:02.099330938 +0800
@@ -28,7 +28,7 @@
 
 void badSink_c(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_c(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_c(int * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int(data, has_free_new_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_53d.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_53d.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_53d.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_53d.cpp	2025-05-05 11:26:02.102331004 +0800
@@ -28,7 +28,7 @@
 
 void badSink_d(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_d(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_d(int * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int(data, has_free_new_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_54e.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_54e.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_54e.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_54e.cpp	2025-05-05 11:26:02.090330742 +0800
@@ -28,7 +28,7 @@
 
 void badSink_e(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_e(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_e(int * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int(data, has_free_new_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_63b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_63b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_63b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_63b.cpp	2025-05-05 11:26:02.109331157 +0800
@@ -29,7 +29,7 @@
 void badSink(int * * dataPtr)
 {
     int * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void goodG2BSink(int * * dataPtr)
 {
     int * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     int * data = *dataPtr;
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int(data, has_free_new_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_64b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_64b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_64b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_64b.cpp	2025-05-05 11:26:01.993328626 +0800
@@ -32,7 +32,7 @@
     int * * dataPtr = (int * *)dataVoidPtr;
     /* dereference dataPtr into data */
     int * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
     int * * dataPtr = (int * *)dataVoidPtr;
     /* dereference dataPtr into data */
     int * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
     /* dereference dataPtr into data */
     int * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int(data, has_free_new_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_01.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_01.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_01.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_01.cpp	2025-05-05 11:26:02.109331157 +0800
@@ -35,7 +35,7 @@
     /* Initialize and make use of data */
     *data = 5LL;
     printLongLongLine(*data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
     /* Initialize and make use of data */
     *data = 5LL;
     printLongLongLine(*data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -69,7 +69,7 @@
     *data = 5LL;
     printLongLongLine(*data);
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int64(data, has_free_new_int64);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_02.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_02.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_02.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_02.cpp	2025-05-05 11:26:02.000328779 +0800
@@ -40,7 +40,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -90,7 +90,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_03.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_03.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_03.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_03.cpp	2025-05-05 11:26:02.112331222 +0800
@@ -40,7 +40,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -90,7 +90,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_04.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_04.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_04.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_04.cpp	2025-05-05 11:26:02.108331134 +0800
@@ -46,7 +46,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -76,7 +76,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -96,7 +96,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -121,7 +121,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -142,7 +142,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_05.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_05.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_05.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_05.cpp	2025-05-05 11:26:01.986328474 +0800
@@ -46,7 +46,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -76,7 +76,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -96,7 +96,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -121,7 +121,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -142,7 +142,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_06.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_06.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_06.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_06.cpp	2025-05-05 11:26:02.100330960 +0800
@@ -45,7 +45,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -95,7 +95,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -120,7 +120,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_07.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_07.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_07.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_07.cpp	2025-05-05 11:26:02.081330546 +0800
@@ -45,7 +45,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -95,7 +95,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -120,7 +120,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_08.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_08.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_08.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_08.cpp	2025-05-05 11:26:02.015329106 +0800
@@ -53,7 +53,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -83,7 +83,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -103,7 +103,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -128,7 +128,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -149,7 +149,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_09.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_09.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_09.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_09.cpp	2025-05-05 11:26:02.011329019 +0800
@@ -40,7 +40,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -90,7 +90,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_10.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_10.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_10.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_10.cpp	2025-05-05 11:26:02.099330938 +0800
@@ -40,7 +40,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -90,7 +90,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_11.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_11.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_11.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_11.cpp	2025-05-05 11:26:02.104331047 +0800
@@ -39,7 +39,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -89,7 +89,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -114,7 +114,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -135,7 +135,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_12.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_12.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_12.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_12.cpp	2025-05-05 11:26:02.015329106 +0800
@@ -48,13 +48,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -88,12 +88,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -124,12 +124,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_13.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_13.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_13.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_13.cpp	2025-05-05 11:26:02.089330720 +0800
@@ -39,7 +39,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -89,7 +89,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -114,7 +114,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -135,7 +135,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_14.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_14.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_14.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_14.cpp	2025-05-05 11:26:02.013329062 +0800
@@ -39,7 +39,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -89,7 +89,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -114,7 +114,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -135,7 +135,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_15.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_15.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_15.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_15.cpp	2025-05-05 11:26:02.011329019 +0800
@@ -46,7 +46,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -87,7 +87,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
         break;
     }
 }
@@ -115,7 +115,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -147,7 +147,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -180,7 +180,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_16.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_16.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_16.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_16.cpp	2025-05-05 11:26:02.096330873 +0800
@@ -40,7 +40,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -67,7 +67,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
         break;
     }
 }
@@ -89,7 +89,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_17.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_17.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_17.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_17.cpp	2025-05-05 11:26:02.012329041 +0800
@@ -40,7 +40,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -87,7 +87,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_18.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_18.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_18.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_18.cpp	2025-05-05 11:26:02.007328931 +0800
@@ -38,7 +38,7 @@
     printLongLongLine(*data);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int64(data, has_free_new_int64);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -79,7 +79,7 @@
     printLongLongLine(*data);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_21.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_21.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_21.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_21.cpp	2025-05-05 11:26:02.111331200 +0800
@@ -33,7 +33,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -94,7 +94,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -116,7 +116,7 @@
 {
     if(goodG2bStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_22b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_22b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_22b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_22b.cpp	2025-05-05 11:26:02.112331222 +0800
@@ -34,7 +34,7 @@
 {
     if(badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -60,7 +60,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -70,7 +70,7 @@
     if(goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
@@ -79,7 +79,7 @@
 {
     if(goodG2B1Global)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_31.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_31.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_31.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_31.cpp	2025-05-05 11:26:02.085330633 +0800
@@ -38,7 +38,7 @@
     {
         int64_t * dataCopy = data;
         int64_t * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -61,7 +61,7 @@
     {
         int64_t * dataCopy = data;
         int64_t * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
         int64_t * dataCopy = data;
         int64_t * data = dataCopy;
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_32.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_32.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_32.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_32.cpp	2025-05-05 11:26:01.988328517 +0800
@@ -43,7 +43,7 @@
     }
     {
         int64_t * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     }
     {
         int64_t * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -95,7 +95,7 @@
     {
         int64_t * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_33.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_33.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_33.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_33.cpp	2025-05-05 11:26:02.027329368 +0800
@@ -38,7 +38,7 @@
     printLongLongLine(*data);
     {
         int64_t * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -61,7 +61,7 @@
     printLongLongLine(*data);
     {
         int64_t * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
     {
         int64_t * data = dataRef;
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_34.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_34.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_34.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_34.cpp	2025-05-05 11:26:02.005328888 +0800
@@ -45,7 +45,7 @@
     myUnion.unionFirst = data;
     {
         int64_t * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     myUnion.unionFirst = data;
     {
         int64_t * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_int64(data, no_free_new_int64);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -89,7 +89,7 @@
     {
         int64_t * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_int64(data, has_free_new_int64);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_41.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_41.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_41.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_41.cpp	2025-05-05 11:26:01.997328714 +0800
@@ -28,7 +28,7 @@
 
 static void badSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -72,7 +72,7 @@
 static void goodB2GSink(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int64(data, has_free_new_int64);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_44.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_44.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_44.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_44.cpp	2025-05-05 11:26:01.995328670 +0800
@@ -28,7 +28,7 @@
 
 static void badSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -76,7 +76,7 @@
 static void goodB2GSink(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int64(data, has_free_new_int64);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_45.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_45.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_45.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_45.cpp	2025-05-05 11:26:02.018329172 +0800
@@ -33,7 +33,7 @@
 static void badSink()
 {
     int64_t * data = badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -58,7 +58,7 @@
 static void goodG2BSink()
 {
     int64_t * data = goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -81,7 +81,7 @@
 {
     int64_t * data = goodB2GData;
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int64(data, has_free_new_int64);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_51b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_51b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_51b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_51b.cpp	2025-05-05 11:26:01.997328714 +0800
@@ -28,7 +28,7 @@
 
 void badSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int64(data, has_free_new_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_52c.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_52c.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_52c.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_52c.cpp	2025-05-05 11:26:02.013329062 +0800
@@ -28,7 +28,7 @@
 
 void badSink_c(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_c(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_c(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int64(data, has_free_new_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_53d.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_53d.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_53d.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_53d.cpp	2025-05-05 11:26:02.108331134 +0800
@@ -28,7 +28,7 @@
 
 void badSink_d(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_d(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_d(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int64(data, has_free_new_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_54e.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_54e.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_54e.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_54e.cpp	2025-05-05 11:26:02.091330764 +0800
@@ -28,7 +28,7 @@
 
 void badSink_e(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_e(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_e(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int64(data, has_free_new_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_63b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_63b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_63b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_63b.cpp	2025-05-05 11:26:02.012329041 +0800
@@ -29,7 +29,7 @@
 void badSink(int64_t * * dataPtr)
 {
     int64_t * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void goodG2BSink(int64_t * * dataPtr)
 {
     int64_t * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     int64_t * data = *dataPtr;
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int64(data, has_free_new_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_64b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_64b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_64b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_64b.cpp	2025-05-05 11:26:02.106331091 +0800
@@ -32,7 +32,7 @@
     int64_t * * dataPtr = (int64_t * *)dataVoidPtr;
     /* dereference dataPtr into data */
     int64_t * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
     int64_t * * dataPtr = (int64_t * *)dataVoidPtr;
     /* dereference dataPtr into data */
     int64_t * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
     /* dereference dataPtr into data */
     int64_t * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int64(data, has_free_new_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_65b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_65b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_65b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_65b.cpp	2025-05-05 11:26:02.017329150 +0800
@@ -28,7 +28,7 @@
 
 void badSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int64(data, has_free_new_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_66b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_66b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_66b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_66b.cpp	2025-05-05 11:26:02.079330502 +0800
@@ -30,7 +30,7 @@
 {
     /* copy data out of dataArray */
     int64_t * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void goodG2BSink(int64_t * dataArray[])
 {
     int64_t * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
 {
     int64_t * data = dataArray[2];
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int64(data, has_free_new_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_67b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_67b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_67b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_67b.cpp	2025-05-05 11:26:02.100330960 +0800
@@ -34,7 +34,7 @@
 void badSink(structType myStruct)
 {
     int64_t * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 void goodG2BSink(structType myStruct)
 {
     int64_t * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -55,7 +55,7 @@
 {
     int64_t * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int64(data, has_free_new_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_68b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_68b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_68b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_68b.cpp	2025-05-05 11:26:01.990328561 +0800
@@ -33,7 +33,7 @@
 void badSink()
 {
     int64_t * data = badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink()
 {
     int64_t * data = goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     int64_t * data = goodB2GData;
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int64(data, has_free_new_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_72b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_72b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_72b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_72b.cpp	2025-05-05 11:26:02.025329324 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataVector */
     int64_t * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(vector<int64_t *> dataVector)
 {
     int64_t * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     int64_t * data = dataVector[2];
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int64(data, has_free_new_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_73b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_73b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_73b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_73b.cpp	2025-05-05 11:26:02.021329237 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataList */
     int64_t * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(list<int64_t *> dataList)
 {
     int64_t * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     int64_t * data = dataList.back();
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int64(data, has_free_new_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_74b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_74b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_74b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_74b.cpp	2025-05-05 11:26:02.094330829 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataMap */
     int64_t * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(map<int, int64_t *> dataMap)
 {
     int64_t * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     int64_t * data = dataMap[2];
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int64(data, has_free_new_int64);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_81_bad.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_81_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_81_bad.cpp	2025-05-05 11:26:01.988328517 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_int64_t_81_bad::action(int64_t * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_81_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_81_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_81_goodB2G.cpp	2025-05-05 11:26:02.095330851 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__new_int64_t_81_goodB2G::action(int64_t * data) const
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int64(data, has_free_new_int64);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_81_goodG2B.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_81_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_81_goodG2B.cpp	2025-05-05 11:26:02.025329324 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_int64_t_81_goodG2B::action(int64_t * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_82_bad.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_82_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_82_bad.cpp	2025-05-05 11:26:02.001328801 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_int64_t_82_bad::action(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_82_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_82_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_82_goodB2G.cpp	2025-05-05 11:26:02.105331069 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__new_int64_t_82_goodB2G::action(int64_t * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int64(data, has_free_new_int64);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_82_goodG2B.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_82_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int64_t_82_goodG2B.cpp	2025-05-05 11:26:02.093330807 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_int64_t_82_goodG2B::action(int64_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int64(data, no_free_new_int64);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_65b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_65b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_65b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_65b.cpp	2025-05-05 11:26:02.000328779 +0800
@@ -28,7 +28,7 @@
 
 void badSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink(int * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int(data, has_free_new_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_66b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_66b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_66b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_66b.cpp	2025-05-05 11:26:01.997328714 +0800
@@ -30,7 +30,7 @@
 {
     /* copy data out of dataArray */
     int * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void goodG2BSink(int * dataArray[])
 {
     int * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
 {
     int * data = dataArray[2];
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int(data, has_free_new_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_67b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_67b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_67b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_67b.cpp	2025-05-05 11:26:02.011329019 +0800
@@ -34,7 +34,7 @@
 void badSink(structType myStruct)
 {
     int * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 void goodG2BSink(structType myStruct)
 {
     int * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -55,7 +55,7 @@
 {
     int * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int(data, has_free_new_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_68b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_68b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_68b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_68b.cpp	2025-05-05 11:26:02.002328823 +0800
@@ -33,7 +33,7 @@
 void badSink()
 {
     int * data = badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink()
 {
     int * data = goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     int * data = goodB2GData;
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int(data, has_free_new_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_72b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_72b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_72b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_72b.cpp	2025-05-05 11:26:02.006328910 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataVector */
     int * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(vector<int *> dataVector)
 {
     int * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     int * data = dataVector[2];
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int(data, has_free_new_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_73b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_73b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_73b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_73b.cpp	2025-05-05 11:26:02.078330480 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataList */
     int * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(list<int *> dataList)
 {
     int * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     int * data = dataList.back();
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int(data, has_free_new_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_74b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_74b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_74b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_74b.cpp	2025-05-05 11:26:02.077330459 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataMap */
     int * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(map<int, int *> dataMap)
 {
     int * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     int * data = dataMap[2];
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int(data, has_free_new_int);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_81_bad.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_81_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_81_bad.cpp	2025-05-05 11:26:01.987328495 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_int_81_bad::action(int * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_81_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_81_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_81_goodB2G.cpp	2025-05-05 11:26:02.108331134 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__new_int_81_goodB2G::action(int * data) const
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int(data, has_free_new_int);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_81_goodG2B.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_81_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_81_goodG2B.cpp	2025-05-05 11:26:02.080330524 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_int_81_goodG2B::action(int * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_82_bad.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_82_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_82_bad.cpp	2025-05-05 11:26:02.022329259 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_int_82_bad::action(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_82_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_82_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_82_goodB2G.cpp	2025-05-05 11:26:01.991328583 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__new_int_82_goodB2G::action(int * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_int(data, has_free_new_int);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_82_goodG2B.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_82_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_int_82_goodG2B.cpp	2025-05-05 11:26:02.102331004 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_int_82_goodG2B::action(int * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_int(data, no_free_new_int);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_01.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_01.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_01.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_01.cpp	2025-05-05 11:26:01.993328626 +0800
@@ -36,7 +36,7 @@
     data->intOne = 0;
     data->intTwo = 0;
     printStructLine((twoIntsStruct *)data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -56,7 +56,7 @@
     data->intOne = 0;
     data->intTwo = 0;
     printStructLine((twoIntsStruct *)data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -72,7 +72,7 @@
     data->intTwo = 0;
     printStructLine((twoIntsStruct *)data);
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_02.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_02.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_02.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_02.cpp	2025-05-05 11:26:02.011329019 +0800
@@ -41,7 +41,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -93,7 +93,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -119,7 +119,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_03.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_03.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_03.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_03.cpp	2025-05-05 11:26:02.003328844 +0800
@@ -41,7 +41,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -93,7 +93,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -119,7 +119,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_04.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_04.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_04.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_04.cpp	2025-05-05 11:26:02.092330786 +0800
@@ -47,7 +47,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -78,7 +78,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -99,7 +99,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -125,7 +125,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -147,7 +147,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_05.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_05.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_05.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_05.cpp	2025-05-05 11:26:02.009328975 +0800
@@ -47,7 +47,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -78,7 +78,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -99,7 +99,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -125,7 +125,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -147,7 +147,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_06.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_06.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_06.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_06.cpp	2025-05-05 11:26:02.009328975 +0800
@@ -46,7 +46,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -77,7 +77,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -98,7 +98,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -124,7 +124,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -146,7 +146,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_07.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_07.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_07.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_07.cpp	2025-05-05 11:26:02.106331091 +0800
@@ -46,7 +46,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -77,7 +77,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -98,7 +98,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -124,7 +124,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -146,7 +146,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_08.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_08.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_08.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_08.cpp	2025-05-05 11:26:02.016329128 +0800
@@ -54,7 +54,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -85,7 +85,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -106,7 +106,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -132,7 +132,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -154,7 +154,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_09.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_09.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_09.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_09.cpp	2025-05-05 11:26:02.096330873 +0800
@@ -41,7 +41,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -93,7 +93,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -119,7 +119,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_10.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_10.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_10.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_10.cpp	2025-05-05 11:26:02.029329412 +0800
@@ -41,7 +41,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -93,7 +93,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -119,7 +119,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_11.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_11.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_11.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_11.cpp	2025-05-05 11:26:02.005328888 +0800
@@ -40,7 +40,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -92,7 +92,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -140,7 +140,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_12.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_12.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_12.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_12.cpp	2025-05-05 11:26:02.105331069 +0800
@@ -50,13 +50,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -92,12 +92,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -130,12 +130,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_13.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_13.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_13.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_13.cpp	2025-05-05 11:26:02.093330807 +0800
@@ -40,7 +40,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -92,7 +92,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -140,7 +140,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_14.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_14.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_14.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_14.cpp	2025-05-05 11:26:02.008328954 +0800
@@ -40,7 +40,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -92,7 +92,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -140,7 +140,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_15.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_15.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_15.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_15.cpp	2025-05-05 11:26:02.087330676 +0800
@@ -47,7 +47,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -89,7 +89,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
         break;
     }
 }
@@ -118,7 +118,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -151,7 +151,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -185,7 +185,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_16.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_16.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_16.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_16.cpp	2025-05-05 11:26:02.078330480 +0800
@@ -41,7 +41,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -69,7 +69,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
         break;
     }
 }
@@ -92,7 +92,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_17.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_17.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_17.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_17.cpp	2025-05-05 11:26:02.098330917 +0800
@@ -41,7 +41,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -68,7 +68,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -90,7 +90,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_18.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_18.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_18.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_18.cpp	2025-05-05 11:26:01.999328757 +0800
@@ -39,7 +39,7 @@
     printStructLine((twoIntsStruct *)data);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -63,7 +63,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -82,7 +82,7 @@
     printStructLine((twoIntsStruct *)data);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_21.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_21.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_21.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_21.cpp	2025-05-05 11:26:02.091330764 +0800
@@ -33,7 +33,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -96,7 +96,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -119,7 +119,7 @@
 {
     if(goodG2bStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_22b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_22b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_22b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_22b.cpp	2025-05-05 11:26:02.024329302 +0800
@@ -34,7 +34,7 @@
 {
     if(badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -60,7 +60,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -70,7 +70,7 @@
     if(goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -79,7 +79,7 @@
 {
     if(goodG2B1Global)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_31.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_31.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_31.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_31.cpp	2025-05-05 11:26:02.082330568 +0800
@@ -39,7 +39,7 @@
     {
         struct _twoIntsStruct * dataCopy = data;
         struct _twoIntsStruct * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -63,7 +63,7 @@
     {
         struct _twoIntsStruct * dataCopy = data;
         struct _twoIntsStruct * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -83,7 +83,7 @@
         struct _twoIntsStruct * dataCopy = data;
         struct _twoIntsStruct * data = dataCopy;
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_32.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_32.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_32.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_32.cpp	2025-05-05 11:26:02.106331091 +0800
@@ -44,7 +44,7 @@
     }
     {
         struct _twoIntsStruct * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     }
     {
         struct _twoIntsStruct * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -98,7 +98,7 @@
     {
         struct _twoIntsStruct * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_33.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_33.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_33.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_33.cpp	2025-05-05 11:26:02.101330982 +0800
@@ -39,7 +39,7 @@
     printStructLine((twoIntsStruct *)data);
     {
         struct _twoIntsStruct * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -63,7 +63,7 @@
     printStructLine((twoIntsStruct *)data);
     {
         struct _twoIntsStruct * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -83,7 +83,7 @@
     {
         struct _twoIntsStruct * data = dataRef;
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_34.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_34.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_34.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_34.cpp	2025-05-05 11:26:01.987328495 +0800
@@ -46,7 +46,7 @@
     myUnion.unionFirst = data;
     {
         struct _twoIntsStruct * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     myUnion.unionFirst = data;
     {
         struct _twoIntsStruct * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -92,7 +92,7 @@
     {
         struct _twoIntsStruct * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_41.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_41.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_41.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_41.cpp	2025-05-05 11:26:02.003328844 +0800
@@ -28,7 +28,7 @@
 
 static void badSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -74,7 +74,7 @@
 static void goodB2GSink(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_44.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_44.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_44.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_44.cpp	2025-05-05 11:26:02.095330851 +0800
@@ -28,7 +28,7 @@
 
 static void badSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -55,7 +55,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -78,7 +78,7 @@
 static void goodB2GSink(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_45.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_45.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_45.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_45.cpp	2025-05-05 11:26:02.020329215 +0800
@@ -33,7 +33,7 @@
 static void badSink()
 {
     struct _twoIntsStruct * data = badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
 static void goodG2BSink()
 {
     struct _twoIntsStruct * data = goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -83,7 +83,7 @@
 {
     struct _twoIntsStruct * data = goodB2GData;
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_51b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_51b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_51b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_51b.cpp	2025-05-05 11:26:02.019329193 +0800
@@ -28,7 +28,7 @@
 
 void badSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_52c.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_52c.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_52c.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_52c.cpp	2025-05-05 11:26:02.014329084 +0800
@@ -28,7 +28,7 @@
 
 void badSink_c(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_c(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_c(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_53d.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_53d.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_53d.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_53d.cpp	2025-05-05 11:26:02.001328801 +0800
@@ -28,7 +28,7 @@
 
 void badSink_d(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_d(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_d(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_54e.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_54e.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_54e.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_54e.cpp	2025-05-05 11:26:01.986328474 +0800
@@ -28,7 +28,7 @@
 
 void badSink_e(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_e(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_e(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_63b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_63b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_63b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_63b.cpp	2025-05-05 11:26:02.104331047 +0800
@@ -29,7 +29,7 @@
 void badSink(struct _twoIntsStruct * * dataPtr)
 {
     struct _twoIntsStruct * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void goodG2BSink(struct _twoIntsStruct * * dataPtr)
 {
     struct _twoIntsStruct * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     struct _twoIntsStruct * data = *dataPtr;
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_64b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_64b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_64b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_64b.cpp	2025-05-05 11:26:01.989328539 +0800
@@ -32,7 +32,7 @@
     struct _twoIntsStruct * * dataPtr = (struct _twoIntsStruct * *)dataVoidPtr;
     /* dereference dataPtr into data */
     struct _twoIntsStruct * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
     struct _twoIntsStruct * * dataPtr = (struct _twoIntsStruct * *)dataVoidPtr;
     /* dereference dataPtr into data */
     struct _twoIntsStruct * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
     /* dereference dataPtr into data */
     struct _twoIntsStruct * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_65b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_65b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_65b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_65b.cpp	2025-05-05 11:26:02.025329324 +0800
@@ -28,7 +28,7 @@
 
 void badSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_66b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_66b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_66b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_66b.cpp	2025-05-05 11:26:02.090330742 +0800
@@ -30,7 +30,7 @@
 {
     /* copy data out of dataArray */
     struct _twoIntsStruct * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void goodG2BSink(struct _twoIntsStruct * dataArray[])
 {
     struct _twoIntsStruct * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
 {
     struct _twoIntsStruct * data = dataArray[2];
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_67b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_67b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_67b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_67b.cpp	2025-05-05 11:26:02.025329324 +0800
@@ -34,7 +34,7 @@
 void badSink(structType myStruct)
 {
     struct _twoIntsStruct * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 void goodG2BSink(structType myStruct)
 {
     struct _twoIntsStruct * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -55,7 +55,7 @@
 {
     struct _twoIntsStruct * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_68b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_68b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_68b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_68b.cpp	2025-05-05 11:26:02.110331178 +0800
@@ -33,7 +33,7 @@
 void badSink()
 {
     struct _twoIntsStruct * data = badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink()
 {
     struct _twoIntsStruct * data = goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     struct _twoIntsStruct * data = goodB2GData;
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_72b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_72b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_72b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_72b.cpp	2025-05-05 11:26:02.110331178 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataVector */
     struct _twoIntsStruct * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(vector<struct _twoIntsStruct *> dataVector)
 {
     struct _twoIntsStruct * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     struct _twoIntsStruct * data = dataVector[2];
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_73b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_73b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_73b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_73b.cpp	2025-05-05 11:26:02.081330546 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataList */
     struct _twoIntsStruct * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(list<struct _twoIntsStruct *> dataList)
 {
     struct _twoIntsStruct * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     struct _twoIntsStruct * data = dataList.back();
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_74b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_74b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_74b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_74b.cpp	2025-05-05 11:26:02.097330895 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataMap */
     struct _twoIntsStruct * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(map<int, struct _twoIntsStruct *> dataMap)
 {
     struct _twoIntsStruct * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     struct _twoIntsStruct * data = dataMap[2];
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_81_bad.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_81_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_81_bad.cpp	2025-05-05 11:26:02.005328888 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_struct_twoIntsStruct_81_bad::action(struct _twoIntsStruct * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_81_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_81_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_81_goodB2G.cpp	2025-05-05 11:26:01.997328714 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__new_struct_twoIntsStruct_81_goodB2G::action(struct _twoIntsStruct * data) const
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_81_goodG2B.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_81_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_81_goodG2B.cpp	2025-05-05 11:26:02.105331069 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_struct_twoIntsStruct_81_goodG2B::action(struct _twoIntsStruct * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_82_bad.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_82_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_82_bad.cpp	2025-05-05 11:26:02.077330459 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_struct_twoIntsStruct_82_bad::action(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_82_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_82_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_82_goodB2G.cpp	2025-05-05 11:26:02.099330938 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__new_struct_twoIntsStruct_82_goodB2G::action(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_82_goodG2B.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_82_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_struct_twoIntsStruct_82_goodG2B.cpp	2025-05-05 11:26:01.992328604 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_struct_twoIntsStruct_82_goodG2B::action(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_01.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_01.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_01.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_01.cpp	2025-05-05 11:26:02.006328910 +0800
@@ -37,7 +37,7 @@
     data->intTwo = 0;
     printIntLine(data->intOne);
     printIntLine(data->intTwo);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -58,7 +58,7 @@
     data->intTwo = 0;
     printIntLine(data->intOne);
     printIntLine(data->intTwo);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -75,7 +75,7 @@
     printIntLine(data->intOne);
     printIntLine(data->intTwo);
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_class(data, has_free_new_class);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_02.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_02.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_02.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_02.cpp	2025-05-05 11:26:02.020329215 +0800
@@ -42,7 +42,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -74,7 +74,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -96,7 +96,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -123,7 +123,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -146,7 +146,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_03.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_03.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_03.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_03.cpp	2025-05-05 11:26:02.011329019 +0800
@@ -42,7 +42,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -74,7 +74,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -96,7 +96,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -123,7 +123,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -146,7 +146,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_04.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_04.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_04.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_04.cpp	2025-05-05 11:26:02.084330611 +0800
@@ -48,7 +48,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -102,7 +102,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -129,7 +129,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -152,7 +152,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_05.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_05.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_05.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_05.cpp	2025-05-05 11:26:02.021329237 +0800
@@ -48,7 +48,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -102,7 +102,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -129,7 +129,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -152,7 +152,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_06.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_06.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_06.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_06.cpp	2025-05-05 11:26:02.016329128 +0800
@@ -47,7 +47,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -79,7 +79,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -101,7 +101,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -128,7 +128,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -151,7 +151,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_07.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_07.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_07.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_07.cpp	2025-05-05 11:26:02.021329237 +0800
@@ -47,7 +47,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -79,7 +79,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -101,7 +101,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -128,7 +128,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -151,7 +151,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_08.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_08.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_08.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_08.cpp	2025-05-05 11:26:02.080330524 +0800
@@ -55,7 +55,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -87,7 +87,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -109,7 +109,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -136,7 +136,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -159,7 +159,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_09.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_09.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_09.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_09.cpp	2025-05-05 11:26:02.094330829 +0800
@@ -42,7 +42,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -74,7 +74,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -96,7 +96,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -123,7 +123,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -146,7 +146,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_10.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_10.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_10.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_10.cpp	2025-05-05 11:26:02.095330851 +0800
@@ -42,7 +42,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -74,7 +74,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -96,7 +96,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -123,7 +123,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -146,7 +146,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_11.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_11.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_11.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_11.cpp	2025-05-05 11:26:02.013329062 +0800
@@ -41,7 +41,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -95,7 +95,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -122,7 +122,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -145,7 +145,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_12.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_12.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_12.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_12.cpp	2025-05-05 11:26:01.985328452 +0800
@@ -52,13 +52,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -96,12 +96,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -136,12 +136,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_13.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_13.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_13.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_13.cpp	2025-05-05 11:26:02.102331004 +0800
@@ -41,7 +41,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -95,7 +95,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -122,7 +122,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -145,7 +145,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_14.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_14.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_14.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_14.cpp	2025-05-05 11:26:02.018329172 +0800
@@ -41,7 +41,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -95,7 +95,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -122,7 +122,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -145,7 +145,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_15.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_15.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_15.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_15.cpp	2025-05-05 11:26:01.992328604 +0800
@@ -48,7 +48,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -91,7 +91,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
         break;
     }
 }
@@ -121,7 +121,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -155,7 +155,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -190,7 +190,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_16.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_16.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_16.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_16.cpp	2025-05-05 11:26:02.093330807 +0800
@@ -42,7 +42,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -71,7 +71,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
         break;
     }
 }
@@ -95,7 +95,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_17.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_17.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_17.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_17.cpp	2025-05-05 11:26:02.006328910 +0800
@@ -42,7 +42,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -93,7 +93,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_18.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_18.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_18.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_18.cpp	2025-05-05 11:26:02.004328866 +0800
@@ -40,7 +40,7 @@
     printIntLine(data->intTwo);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -65,7 +65,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_class(data, has_free_new_class);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -85,7 +85,7 @@
     printIntLine(data->intTwo);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_21.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_21.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_21.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_21.cpp	2025-05-05 11:26:02.087330676 +0800
@@ -33,7 +33,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -98,7 +98,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -122,7 +122,7 @@
 {
     if(goodG2bStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_22b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_22b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_22b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_22b.cpp	2025-05-05 11:26:01.999328757 +0800
@@ -34,7 +34,7 @@
 {
     if(badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -60,7 +60,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -70,7 +70,7 @@
     if(goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
@@ -79,7 +79,7 @@
 {
     if(goodG2B1Global)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_31.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_31.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_31.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_31.cpp	2025-05-05 11:26:02.103331026 +0800
@@ -40,7 +40,7 @@
     {
         TwoIntsClass * dataCopy = data;
         TwoIntsClass * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -65,7 +65,7 @@
     {
         TwoIntsClass * dataCopy = data;
         TwoIntsClass * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -86,7 +86,7 @@
         TwoIntsClass * dataCopy = data;
         TwoIntsClass * data = dataCopy;
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_32.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_32.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_32.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_32.cpp	2025-05-05 11:26:02.012329041 +0800
@@ -45,7 +45,7 @@
     }
     {
         TwoIntsClass * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     }
     {
         TwoIntsClass * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -101,7 +101,7 @@
     {
         TwoIntsClass * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_33.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_33.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_33.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_33.cpp	2025-05-05 11:26:02.089330720 +0800
@@ -40,7 +40,7 @@
     printIntLine(data->intTwo);
     {
         TwoIntsClass * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -65,7 +65,7 @@
     printIntLine(data->intTwo);
     {
         TwoIntsClass * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -86,7 +86,7 @@
     {
         TwoIntsClass * data = dataRef;
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_34.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_34.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_34.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_34.cpp	2025-05-05 11:26:02.004328866 +0800
@@ -47,7 +47,7 @@
     myUnion.unionFirst = data;
     {
         TwoIntsClass * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     myUnion.unionFirst = data;
     {
         TwoIntsClass * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_class(data, no_free_new_class);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -95,7 +95,7 @@
     {
         TwoIntsClass * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_class(data, has_free_new_class);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_41.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_41.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_41.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_41.cpp	2025-05-05 11:26:02.011329019 +0800
@@ -28,7 +28,7 @@
 
 static void badSink(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -53,7 +53,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -76,7 +76,7 @@
 static void goodB2GSink(TwoIntsClass * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_class(data, has_free_new_class);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_44.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_44.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_44.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_44.cpp	2025-05-05 11:26:02.086330655 +0800
@@ -28,7 +28,7 @@
 
 static void badSink(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -56,7 +56,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -80,7 +80,7 @@
 static void goodB2GSink(TwoIntsClass * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_class(data, has_free_new_class);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_45.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_45.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_45.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_45.cpp	2025-05-05 11:26:02.111331200 +0800
@@ -33,7 +33,7 @@
 static void badSink()
 {
     TwoIntsClass * data = badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -60,7 +60,7 @@
 static void goodG2BSink()
 {
     TwoIntsClass * data = goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -85,7 +85,7 @@
 {
     TwoIntsClass * data = goodB2GData;
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_class(data, has_free_new_class);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_51b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_51b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_51b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_51b.cpp	2025-05-05 11:26:02.030329433 +0800
@@ -28,7 +28,7 @@
 
 void badSink(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink(TwoIntsClass * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_class(data, has_free_new_class);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_52c.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_52c.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_52c.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_52c.cpp	2025-05-05 11:26:02.106331091 +0800
@@ -28,7 +28,7 @@
 
 void badSink_c(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_c(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_c(TwoIntsClass * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_class(data, has_free_new_class);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_53d.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_53d.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_53d.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_53d.cpp	2025-05-05 11:26:02.104331047 +0800
@@ -28,7 +28,7 @@
 
 void badSink_d(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_d(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_d(TwoIntsClass * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_class(data, has_free_new_class);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_54e.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_54e.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_54e.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_54e.cpp	2025-05-05 11:26:02.026329346 +0800
@@ -28,7 +28,7 @@
 
 void badSink_e(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_e(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_e(TwoIntsClass * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_class(data, has_free_new_class);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_63b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_63b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_63b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_63b.cpp	2025-05-05 11:26:01.993328626 +0800
@@ -29,7 +29,7 @@
 void badSink(TwoIntsClass * * dataPtr)
 {
     TwoIntsClass * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void goodG2BSink(TwoIntsClass * * dataPtr)
 {
     TwoIntsClass * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     TwoIntsClass * data = *dataPtr;
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_class(data, has_free_new_class);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_64b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_64b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_64b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_64b.cpp	2025-05-05 11:26:01.997328714 +0800
@@ -32,7 +32,7 @@
     TwoIntsClass * * dataPtr = (TwoIntsClass * *)dataVoidPtr;
     /* dereference dataPtr into data */
     TwoIntsClass * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
     TwoIntsClass * * dataPtr = (TwoIntsClass * *)dataVoidPtr;
     /* dereference dataPtr into data */
     TwoIntsClass * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
     /* dereference dataPtr into data */
     TwoIntsClass * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_class(data, has_free_new_class);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_65b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_65b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_65b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_65b.cpp	2025-05-05 11:26:02.014329084 +0800
@@ -28,7 +28,7 @@
 
 void badSink(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink(TwoIntsClass * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_class(data, has_free_new_class);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_66b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_66b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_66b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_66b.cpp	2025-05-05 11:26:02.105331069 +0800
@@ -30,7 +30,7 @@
 {
     /* copy data out of dataArray */
     TwoIntsClass * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void goodG2BSink(TwoIntsClass * dataArray[])
 {
     TwoIntsClass * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
 {
     TwoIntsClass * data = dataArray[2];
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_class(data, has_free_new_class);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_67b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_67b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_67b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_67b.cpp	2025-05-05 11:26:02.107331113 +0800
@@ -34,7 +34,7 @@
 void badSink(structType myStruct)
 {
     TwoIntsClass * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 void goodG2BSink(structType myStruct)
 {
     TwoIntsClass * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -55,7 +55,7 @@
 {
     TwoIntsClass * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_class(data, has_free_new_class);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_68b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_68b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_68b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_68b.cpp	2025-05-05 11:26:02.094330829 +0800
@@ -33,7 +33,7 @@
 void badSink()
 {
     TwoIntsClass * data = badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink()
 {
     TwoIntsClass * data = goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     TwoIntsClass * data = goodB2GData;
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_class(data, has_free_new_class);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_72b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_72b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_72b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_72b.cpp	2025-05-05 11:26:02.001328801 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataVector */
     TwoIntsClass * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(vector<TwoIntsClass *> dataVector)
 {
     TwoIntsClass * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     TwoIntsClass * data = dataVector[2];
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_class(data, has_free_new_class);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_73b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_73b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_73b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_73b.cpp	2025-05-05 11:26:02.092330786 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataList */
     TwoIntsClass * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(list<TwoIntsClass *> dataList)
 {
     TwoIntsClass * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     TwoIntsClass * data = dataList.back();
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_class(data, has_free_new_class);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_74b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_74b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_74b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_74b.cpp	2025-05-05 11:26:02.023329281 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataMap */
     TwoIntsClass * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(map<int, TwoIntsClass *> dataMap)
 {
     TwoIntsClass * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     TwoIntsClass * data = dataMap[2];
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_class(data, has_free_new_class);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_81_bad.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_81_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_81_bad.cpp	2025-05-05 11:26:02.105331069 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_TwoIntsClass_81_bad::action(TwoIntsClass * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_81_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_81_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_81_goodB2G.cpp	2025-05-05 11:26:02.084330611 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__new_TwoIntsClass_81_goodB2G::action(TwoIntsClass * data) const
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_class(data, has_free_new_class);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_81_goodG2B.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_81_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_81_goodG2B.cpp	2025-05-05 11:26:02.099330938 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_TwoIntsClass_81_goodG2B::action(TwoIntsClass * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_82_bad.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_82_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_82_bad.cpp	2025-05-05 11:26:02.012329041 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_TwoIntsClass_82_bad::action(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_82_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_82_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_82_goodB2G.cpp	2025-05-05 11:26:01.992328604 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__new_TwoIntsClass_82_goodB2G::action(TwoIntsClass * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_class(data, has_free_new_class);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_82_goodG2B.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_82_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_82_goodG2B.cpp	2025-05-05 11:26:02.025329324 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_TwoIntsClass_82_goodG2B::action(TwoIntsClass * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_class(data, no_free_new_class);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_01.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_01.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_01.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_01.cpp	2025-05-05 11:26:02.028329390 +0800
@@ -36,7 +36,7 @@
     data->intOne = 0;
     data->intTwo = 0;
     printStructLine(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -56,7 +56,7 @@
     data->intOne = 0;
     data->intTwo = 0;
     printStructLine(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -72,7 +72,7 @@
     data->intTwo = 0;
     printStructLine(data);
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_02.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_02.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_02.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_02.cpp	2025-05-05 11:26:02.000328779 +0800
@@ -41,7 +41,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -93,7 +93,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -119,7 +119,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_03.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_03.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_03.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_03.cpp	2025-05-05 11:26:02.091330764 +0800
@@ -41,7 +41,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -93,7 +93,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -119,7 +119,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_04.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_04.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_04.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_04.cpp	2025-05-05 11:26:02.029329412 +0800
@@ -47,7 +47,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -78,7 +78,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -99,7 +99,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -125,7 +125,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -147,7 +147,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_05.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_05.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_05.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_05.cpp	2025-05-05 11:26:02.005328888 +0800
@@ -47,7 +47,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -78,7 +78,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -99,7 +99,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -125,7 +125,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -147,7 +147,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_06.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_06.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_06.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_06.cpp	2025-05-05 11:26:01.998328735 +0800
@@ -46,7 +46,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -77,7 +77,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -98,7 +98,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -124,7 +124,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -146,7 +146,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_07.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_07.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_07.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_07.cpp	2025-05-05 11:26:02.017329150 +0800
@@ -46,7 +46,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -77,7 +77,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -98,7 +98,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -124,7 +124,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -146,7 +146,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_08.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_08.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_08.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_08.cpp	2025-05-05 11:26:02.029329412 +0800
@@ -54,7 +54,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -85,7 +85,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -106,7 +106,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -132,7 +132,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -154,7 +154,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_09.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_09.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_09.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_09.cpp	2025-05-05 11:26:02.091330764 +0800
@@ -41,7 +41,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -93,7 +93,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -119,7 +119,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_10.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_10.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_10.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_10.cpp	2025-05-05 11:26:02.111331200 +0800
@@ -41,7 +41,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -93,7 +93,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -119,7 +119,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_11.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_11.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_11.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_11.cpp	2025-05-05 11:26:02.014329084 +0800
@@ -40,7 +40,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -92,7 +92,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -140,7 +140,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_12.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_12.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_12.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_12.cpp	2025-05-05 11:26:02.097330895 +0800
@@ -50,13 +50,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -92,12 +92,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -130,12 +130,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_13.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_13.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_13.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_13.cpp	2025-05-05 11:26:02.091330764 +0800
@@ -40,7 +40,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -92,7 +92,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -140,7 +140,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_14.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_14.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_14.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_14.cpp	2025-05-05 11:26:02.090330742 +0800
@@ -40,7 +40,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -92,7 +92,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -140,7 +140,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_15.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_15.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_15.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_15.cpp	2025-05-05 11:26:02.096330873 +0800
@@ -47,7 +47,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -89,7 +89,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
         break;
     }
 }
@@ -118,7 +118,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -151,7 +151,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -185,7 +185,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_16.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_16.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_16.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_16.cpp	2025-05-05 11:26:02.086330655 +0800
@@ -41,7 +41,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -69,7 +69,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
         break;
     }
 }
@@ -92,7 +92,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_17.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_17.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_17.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_17.cpp	2025-05-05 11:26:02.026329346 +0800
@@ -41,7 +41,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -68,7 +68,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -90,7 +90,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_18.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_18.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_18.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_18.cpp	2025-05-05 11:26:01.989328539 +0800
@@ -39,7 +39,7 @@
     printStructLine(data);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -63,7 +63,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -82,7 +82,7 @@
     printStructLine(data);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_21.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_21.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_21.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_21.cpp	2025-05-05 11:26:01.986328474 +0800
@@ -33,7 +33,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -96,7 +96,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -119,7 +119,7 @@
 {
     if(goodG2bStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_22b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_22b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_22b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_22b.cpp	2025-05-05 11:26:02.091330764 +0800
@@ -34,7 +34,7 @@
 {
     if(badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -60,7 +60,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -70,7 +70,7 @@
     if(goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
@@ -79,7 +79,7 @@
 {
     if(goodG2B1Global)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_31.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_31.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_31.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_31.cpp	2025-05-05 11:26:01.995328670 +0800
@@ -39,7 +39,7 @@
     {
         twoIntsStruct * dataCopy = data;
         twoIntsStruct * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -63,7 +63,7 @@
     {
         twoIntsStruct * dataCopy = data;
         twoIntsStruct * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -83,7 +83,7 @@
         twoIntsStruct * dataCopy = data;
         twoIntsStruct * data = dataCopy;
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_32.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_32.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_32.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_32.cpp	2025-05-05 11:26:02.087330676 +0800
@@ -44,7 +44,7 @@
     }
     {
         twoIntsStruct * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     }
     {
         twoIntsStruct * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -98,7 +98,7 @@
     {
         twoIntsStruct * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_33.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_33.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_33.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_33.cpp	2025-05-05 11:26:02.015329106 +0800
@@ -39,7 +39,7 @@
     printStructLine(data);
     {
         twoIntsStruct * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -63,7 +63,7 @@
     printStructLine(data);
     {
         twoIntsStruct * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -83,7 +83,7 @@
     {
         twoIntsStruct * data = dataRef;
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_34.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_34.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_34.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_34.cpp	2025-05-05 11:26:02.025329324 +0800
@@ -46,7 +46,7 @@
     myUnion.unionFirst = data;
     {
         twoIntsStruct * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     myUnion.unionFirst = data;
     {
         twoIntsStruct * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_struct(data, no_free_new_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -92,7 +92,7 @@
     {
         twoIntsStruct * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_struct(data, has_free_new_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_41.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_41.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_41.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_41.cpp	2025-05-05 11:26:02.079330502 +0800
@@ -28,7 +28,7 @@
 
 static void badSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -74,7 +74,7 @@
 static void goodB2GSink(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_44.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_44.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_44.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_44.cpp	2025-05-05 11:26:01.995328670 +0800
@@ -28,7 +28,7 @@
 
 static void badSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -55,7 +55,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -78,7 +78,7 @@
 static void goodB2GSink(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_45.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_45.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_45.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_45.cpp	2025-05-05 11:26:02.010328997 +0800
@@ -33,7 +33,7 @@
 static void badSink()
 {
     twoIntsStruct * data = badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
 static void goodG2BSink()
 {
     twoIntsStruct * data = goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -83,7 +83,7 @@
 {
     twoIntsStruct * data = goodB2GData;
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_51b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_51b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_51b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_51b.cpp	2025-05-05 11:26:02.013329062 +0800
@@ -28,7 +28,7 @@
 
 void badSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_52c.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_52c.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_52c.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_52c.cpp	2025-05-05 11:26:02.109331157 +0800
@@ -28,7 +28,7 @@
 
 void badSink_c(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_c(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_c(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_53d.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_53d.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_53d.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_53d.cpp	2025-05-05 11:26:01.988328517 +0800
@@ -28,7 +28,7 @@
 
 void badSink_d(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_d(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_d(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_54e.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_54e.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_54e.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_54e.cpp	2025-05-05 11:26:01.992328604 +0800
@@ -28,7 +28,7 @@
 
 void badSink_e(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_e(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_e(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_63b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_63b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_63b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_63b.cpp	2025-05-05 11:26:02.107331113 +0800
@@ -29,7 +29,7 @@
 void badSink(twoIntsStruct * * dataPtr)
 {
     twoIntsStruct * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void goodG2BSink(twoIntsStruct * * dataPtr)
 {
     twoIntsStruct * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     twoIntsStruct * data = *dataPtr;
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_64b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_64b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_64b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_64b.cpp	2025-05-05 11:26:02.076330437 +0800
@@ -32,7 +32,7 @@
     twoIntsStruct * * dataPtr = (twoIntsStruct * *)dataVoidPtr;
     /* dereference dataPtr into data */
     twoIntsStruct * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
     twoIntsStruct * * dataPtr = (twoIntsStruct * *)dataVoidPtr;
     /* dereference dataPtr into data */
     twoIntsStruct * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
     /* dereference dataPtr into data */
     twoIntsStruct * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_65b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_65b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_65b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_65b.cpp	2025-05-05 11:26:02.011329019 +0800
@@ -28,7 +28,7 @@
 
 void badSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_66b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_66b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_66b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_66b.cpp	2025-05-05 11:26:02.086330655 +0800
@@ -30,7 +30,7 @@
 {
     /* copy data out of dataArray */
     twoIntsStruct * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void goodG2BSink(twoIntsStruct * dataArray[])
 {
     twoIntsStruct * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
 {
     twoIntsStruct * data = dataArray[2];
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_67b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_67b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_67b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_67b.cpp	2025-05-05 11:26:02.104331047 +0800
@@ -34,7 +34,7 @@
 void badSink(structType myStruct)
 {
     twoIntsStruct * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 void goodG2BSink(structType myStruct)
 {
     twoIntsStruct * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -55,7 +55,7 @@
 {
     twoIntsStruct * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_68b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_68b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_68b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_68b.cpp	2025-05-05 11:26:01.987328495 +0800
@@ -33,7 +33,7 @@
 void badSink()
 {
     twoIntsStruct * data = badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink()
 {
     twoIntsStruct * data = goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     twoIntsStruct * data = goodB2GData;
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_72b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_72b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_72b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_72b.cpp	2025-05-05 11:26:02.101330982 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataVector */
     twoIntsStruct * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(vector<twoIntsStruct *> dataVector)
 {
     twoIntsStruct * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     twoIntsStruct * data = dataVector[2];
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_73b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_73b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_73b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_73b.cpp	2025-05-05 11:26:01.989328539 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataList */
     twoIntsStruct * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(list<twoIntsStruct *> dataList)
 {
     twoIntsStruct * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     twoIntsStruct * data = dataList.back();
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_74b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_74b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_74b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_74b.cpp	2025-05-05 11:26:02.080330524 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataMap */
     twoIntsStruct * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(map<int, twoIntsStruct *> dataMap)
 {
     twoIntsStruct * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     twoIntsStruct * data = dataMap[2];
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_81_bad.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_81_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_81_bad.cpp	2025-05-05 11:26:02.004328866 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_twoIntsStruct_81_bad::action(twoIntsStruct * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_81_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_81_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_81_goodB2G.cpp	2025-05-05 11:26:02.084330611 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__new_twoIntsStruct_81_goodB2G::action(twoIntsStruct * data) const
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_81_goodG2B.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_81_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_81_goodG2B.cpp	2025-05-05 11:26:01.993328626 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_twoIntsStruct_81_goodG2B::action(twoIntsStruct * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_82_bad.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_82_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_82_bad.cpp	2025-05-05 11:26:02.014329084 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_twoIntsStruct_82_bad::action(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_82_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_82_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_82_goodB2G.cpp	2025-05-05 11:26:02.082330568 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__new_twoIntsStruct_82_goodB2G::action(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_struct(data, has_free_new_struct);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_82_goodG2B.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_82_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_twoIntsStruct_82_goodG2B.cpp	2025-05-05 11:26:02.011329019 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_twoIntsStruct_82_goodG2B::action(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_struct(data, no_free_new_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_01.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_01.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_01.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_01.cpp	2025-05-05 11:26:02.011329019 +0800
@@ -35,7 +35,7 @@
     /* Initialize and make use of data */
     *data = L'A';
     printHexCharLine((char)*data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
     /* Initialize and make use of data */
     *data = L'A';
     printHexCharLine((char)*data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -69,7 +69,7 @@
     *data = L'A';
     printHexCharLine((char)*data);
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_wchar(data, has_free_new_wchar);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_02.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_02.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_02.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_02.cpp	2025-05-05 11:26:02.085330633 +0800
@@ -40,7 +40,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -90,7 +90,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_03.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_03.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_03.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_03.cpp	2025-05-05 11:26:02.012329041 +0800
@@ -40,7 +40,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -90,7 +90,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_04.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_04.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_04.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_04.cpp	2025-05-05 11:26:02.101330982 +0800
@@ -46,7 +46,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -76,7 +76,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -96,7 +96,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -121,7 +121,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -142,7 +142,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_05.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_05.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_05.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_05.cpp	2025-05-05 11:26:02.015329106 +0800
@@ -46,7 +46,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -76,7 +76,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -96,7 +96,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -121,7 +121,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -142,7 +142,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_06.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_06.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_06.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_06.cpp	2025-05-05 11:26:02.030329433 +0800
@@ -45,7 +45,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -95,7 +95,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -120,7 +120,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_07.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_07.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_07.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_07.cpp	2025-05-05 11:26:02.018329172 +0800
@@ -45,7 +45,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -95,7 +95,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -120,7 +120,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -141,7 +141,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_08.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_08.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_08.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_08.cpp	2025-05-05 11:26:02.088330698 +0800
@@ -53,7 +53,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -83,7 +83,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -103,7 +103,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -128,7 +128,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -149,7 +149,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_09.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_09.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_09.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_09.cpp	2025-05-05 11:26:02.010328997 +0800
@@ -40,7 +40,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -90,7 +90,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_10.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_10.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_10.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_10.cpp	2025-05-05 11:26:02.092330786 +0800
@@ -40,7 +40,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -90,7 +90,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -115,7 +115,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -136,7 +136,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_11.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_11.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_11.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_11.cpp	2025-05-05 11:26:02.006328910 +0800
@@ -39,7 +39,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -89,7 +89,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -114,7 +114,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -135,7 +135,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_12.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_12.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_12.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_12.cpp	2025-05-05 11:26:02.005328888 +0800
@@ -48,13 +48,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -88,12 +88,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -124,12 +124,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_13.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_13.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_13.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_13.cpp	2025-05-05 11:26:02.084330611 +0800
@@ -39,7 +39,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -89,7 +89,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -114,7 +114,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -135,7 +135,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_14.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_14.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_14.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_14.cpp	2025-05-05 11:26:02.012329041 +0800
@@ -39,7 +39,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -89,7 +89,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -114,7 +114,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -135,7 +135,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_15.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_15.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_15.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_15.cpp	2025-05-05 11:26:02.021329237 +0800
@@ -46,7 +46,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -87,7 +87,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
         break;
     }
 }
@@ -115,7 +115,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -147,7 +147,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -180,7 +180,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_16.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_16.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_16.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_16.cpp	2025-05-05 11:26:01.994328648 +0800
@@ -40,7 +40,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -67,7 +67,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
         break;
     }
 }
@@ -89,7 +89,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_17.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_17.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_17.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_17.cpp	2025-05-05 11:26:02.025329324 +0800
@@ -40,7 +40,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -87,7 +87,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_18.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_18.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_18.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_18.cpp	2025-05-05 11:26:01.992328604 +0800
@@ -38,7 +38,7 @@
     printHexCharLine((char)*data);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_wchar(data, has_free_new_wchar);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -79,7 +79,7 @@
     printHexCharLine((char)*data);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_21.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_21.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_21.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_21.cpp	2025-05-05 11:26:02.087330676 +0800
@@ -33,7 +33,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -94,7 +94,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -116,7 +116,7 @@
 {
     if(goodG2bStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_22b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_22b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_22b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_22b.cpp	2025-05-05 11:26:02.108331134 +0800
@@ -34,7 +34,7 @@
 {
     if(badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -60,7 +60,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -70,7 +70,7 @@
     if(goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
@@ -79,7 +79,7 @@
 {
     if(goodG2B1Global)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_31.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_31.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_31.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_31.cpp	2025-05-05 11:26:02.013329062 +0800
@@ -38,7 +38,7 @@
     {
         wchar_t * dataCopy = data;
         wchar_t * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -61,7 +61,7 @@
     {
         wchar_t * dataCopy = data;
         wchar_t * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
         wchar_t * dataCopy = data;
         wchar_t * data = dataCopy;
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_32.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_32.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_32.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_32.cpp	2025-05-05 11:26:02.097330895 +0800
@@ -43,7 +43,7 @@
     }
     {
         wchar_t * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -71,7 +71,7 @@
     }
     {
         wchar_t * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -95,7 +95,7 @@
     {
         wchar_t * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_33.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_33.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_33.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_33.cpp	2025-05-05 11:26:02.092330786 +0800
@@ -38,7 +38,7 @@
     printHexCharLine((char)*data);
     {
         wchar_t * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -61,7 +61,7 @@
     printHexCharLine((char)*data);
     {
         wchar_t * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
     {
         wchar_t * data = dataRef;
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_34.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_34.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_34.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_34.cpp	2025-05-05 11:26:02.111331200 +0800
@@ -45,7 +45,7 @@
     myUnion.unionFirst = data;
     {
         wchar_t * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     myUnion.unionFirst = data;
     {
         wchar_t * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_new_wchar(data, no_free_new_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -89,7 +89,7 @@
     {
         wchar_t * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        delete data;
+        callback_new_wchar(data, has_free_new_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_41.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_41.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_41.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_41.cpp	2025-05-05 11:26:01.989328539 +0800
@@ -28,7 +28,7 @@
 
 static void badSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -72,7 +72,7 @@
 static void goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_wchar(data, has_free_new_wchar);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_44.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_44.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_44.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_44.cpp	2025-05-05 11:26:02.006328910 +0800
@@ -28,7 +28,7 @@
 
 static void badSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -76,7 +76,7 @@
 static void goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_wchar(data, has_free_new_wchar);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_45.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_45.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_45.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_45.cpp	2025-05-05 11:26:01.990328561 +0800
@@ -33,7 +33,7 @@
 static void badSink()
 {
     wchar_t * data = badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -58,7 +58,7 @@
 static void goodG2BSink()
 {
     wchar_t * data = goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -81,7 +81,7 @@
 {
     wchar_t * data = goodB2GData;
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_wchar(data, has_free_new_wchar);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_51b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_51b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_51b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_51b.cpp	2025-05-05 11:26:02.084330611 +0800
@@ -28,7 +28,7 @@
 
 void badSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_wchar(data, has_free_new_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_52c.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_52c.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_52c.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_52c.cpp	2025-05-05 11:26:02.002328823 +0800
@@ -28,7 +28,7 @@
 
 void badSink_c(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_c(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_c(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_wchar(data, has_free_new_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_53d.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_53d.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_53d.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_53d.cpp	2025-05-05 11:26:02.081330546 +0800
@@ -28,7 +28,7 @@
 
 void badSink_d(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_d(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_d(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_wchar(data, has_free_new_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_54e.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_54e.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_54e.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_54e.cpp	2025-05-05 11:26:01.998328735 +0800
@@ -28,7 +28,7 @@
 
 void badSink_e(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink_e(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink_e(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_wchar(data, has_free_new_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_63b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_63b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_63b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_63b.cpp	2025-05-05 11:26:01.985328452 +0800
@@ -29,7 +29,7 @@
 void badSink(wchar_t * * dataPtr)
 {
     wchar_t * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void goodG2BSink(wchar_t * * dataPtr)
 {
     wchar_t * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     wchar_t * data = *dataPtr;
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_wchar(data, has_free_new_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_64b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_64b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_64b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_64b.cpp	2025-05-05 11:26:02.001328801 +0800
@@ -32,7 +32,7 @@
     wchar_t * * dataPtr = (wchar_t * *)dataVoidPtr;
     /* dereference dataPtr into data */
     wchar_t * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
     wchar_t * * dataPtr = (wchar_t * *)dataVoidPtr;
     /* dereference dataPtr into data */
     wchar_t * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
     /* dereference dataPtr into data */
     wchar_t * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_wchar(data, has_free_new_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_65b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_65b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_65b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_65b.cpp	2025-05-05 11:26:02.087330676 +0800
@@ -28,7 +28,7 @@
 
 void badSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -39,7 +39,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void goodG2BSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 void goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_wchar(data, has_free_new_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_66b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_66b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_66b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_66b.cpp	2025-05-05 11:26:02.018329172 +0800
@@ -30,7 +30,7 @@
 {
     /* copy data out of dataArray */
     wchar_t * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void goodG2BSink(wchar_t * dataArray[])
 {
     wchar_t * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
 {
     wchar_t * data = dataArray[2];
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_wchar(data, has_free_new_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_67b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_67b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_67b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_67b.cpp	2025-05-05 11:26:02.087330676 +0800
@@ -34,7 +34,7 @@
 void badSink(structType myStruct)
 {
     wchar_t * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 void goodG2BSink(structType myStruct)
 {
     wchar_t * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -55,7 +55,7 @@
 {
     wchar_t * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_wchar(data, has_free_new_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_68b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_68b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_68b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_68b.cpp	2025-05-05 11:26:02.001328801 +0800
@@ -33,7 +33,7 @@
 void badSink()
 {
     wchar_t * data = badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink()
 {
     wchar_t * data = goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     wchar_t * data = goodB2GData;
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_wchar(data, has_free_new_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_72b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_72b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_72b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_72b.cpp	2025-05-05 11:26:01.993328626 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataVector */
     wchar_t * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(vector<wchar_t *> dataVector)
 {
     wchar_t * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     wchar_t * data = dataVector[2];
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_wchar(data, has_free_new_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_73b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_73b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_73b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_73b.cpp	2025-05-05 11:26:02.083330589 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataList */
     wchar_t * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(list<wchar_t *> dataList)
 {
     wchar_t * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     wchar_t * data = dataList.back();
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_wchar(data, has_free_new_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_74b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_74b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_74b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_74b.cpp	2025-05-05 11:26:02.089330720 +0800
@@ -33,7 +33,7 @@
 {
     /* copy data out of dataMap */
     wchar_t * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 void goodG2BSink(map<int, wchar_t *> dataMap)
 {
     wchar_t * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 {
     wchar_t * data = dataMap[2];
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_wchar(data, has_free_new_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_81_bad.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_81_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_81_bad.cpp	2025-05-05 11:26:01.999328757 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_wchar_t_81_bad::action(wchar_t * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_81_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_81_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_81_goodB2G.cpp	2025-05-05 11:26:02.017329150 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__new_wchar_t_81_goodB2G::action(wchar_t * data) const
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_wchar(data, has_free_new_wchar);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_81_goodG2B.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_81_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_81_goodG2B.cpp	2025-05-05 11:26:01.998328735 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_wchar_t_81_goodG2B::action(wchar_t * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_82_bad.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_82_bad.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_82_bad.cpp	2025-05-05 11:26:01.985328452 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_wchar_t_82_bad::action(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_82_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_82_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_82_goodB2G.cpp	2025-05-05 11:26:01.993328626 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__new_wchar_t_82_goodB2G::action(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    delete data;
+    callback_new_wchar(data, has_free_new_wchar);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_82_goodG2B.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_82_goodG2B.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_wchar_t_82_goodG2B.cpp	2025-05-05 11:26:02.107331113 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__new_wchar_t_82_goodG2B::action(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_new_wchar(data, no_free_new_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_01.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_01.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_01.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_01.c	2025-05-05 11:26:01.996328692 +0800
@@ -69,7 +69,7 @@
         printLine(data);
     }
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 void CWE401_Memory_Leak__strdup_char_01_good()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_02.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_02.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_02.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_02.c	2025-05-05 11:26:02.024329302 +0800
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -92,7 +92,7 @@
     if(1)
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_03.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_03.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_03.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_03.c	2025-05-05 11:26:02.100330960 +0800
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -92,7 +92,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_04.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_04.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_04.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_04.c	2025-05-05 11:26:02.083330589 +0800
@@ -76,7 +76,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -98,7 +98,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_05.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_05.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_05.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_05.c	2025-05-05 11:26:02.000328779 +0800
@@ -76,7 +76,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -98,7 +98,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_06.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_06.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_06.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_06.c	2025-05-05 11:26:02.110331178 +0800
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -97,7 +97,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_07.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_07.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_07.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_07.c	2025-05-05 11:26:02.099330938 +0800
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -97,7 +97,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_08.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_08.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_08.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_08.c	2025-05-05 11:26:02.079330502 +0800
@@ -83,7 +83,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -105,7 +105,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_09.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_09.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_09.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_09.c	2025-05-05 11:26:01.985328452 +0800
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -92,7 +92,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_10.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_10.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_10.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_10.c	2025-05-05 11:26:02.023329281 +0800
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -92,7 +92,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_11.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_11.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_11.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_11.c	2025-05-05 11:26:01.994328648 +0800
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -92,7 +92,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_12.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_12.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_12.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_12.c	2025-05-05 11:26:02.016329128 +0800
@@ -52,7 +52,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -90,12 +90,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_13.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_13.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_13.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_13.c	2025-05-05 11:26:02.089330720 +0800
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -92,7 +92,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_14.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_14.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_14.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_14.c	2025-05-05 11:26:02.004328866 +0800
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -92,7 +92,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_15.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_15.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_15.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_15.c	2025-05-05 11:26:02.090330742 +0800
@@ -88,7 +88,7 @@
         break;
     default:
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
         break;
     }
 }
@@ -118,7 +118,7 @@
     {
     case 7:
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_16.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_16.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_16.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_16.c	2025-05-05 11:26:02.077330459 +0800
@@ -68,7 +68,7 @@
     while(1)
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
         break;
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_17.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_17.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_17.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_17.c	2025-05-05 11:26:02.094330829 +0800
@@ -67,7 +67,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_18.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_18.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_18.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_18.c	2025-05-05 11:26:02.109331157 +0800
@@ -62,7 +62,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_21.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_21.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_21.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_21.c	2025-05-05 11:26:02.009328975 +0800
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -94,7 +94,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_22b.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_22b.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_22b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_22b.c	2025-05-05 11:26:02.016329128 +0800
@@ -54,7 +54,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
@@ -64,7 +64,7 @@
     if(CWE401_Memory_Leak__strdup_char_22_goodB2G2Global)
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_31.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_31.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_31.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_31.c	2025-05-05 11:26:02.081330546 +0800
@@ -80,7 +80,7 @@
         char * dataCopy = data;
         char * data = dataCopy;
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_32.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_32.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_32.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_32.c	2025-05-05 11:26:02.021329237 +0800
@@ -95,7 +95,7 @@
     {
         char * data = *dataPtr2;
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_33.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_33.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_33.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_33.cpp	2025-05-05 11:26:02.094330829 +0800
@@ -83,7 +83,7 @@
     {
         char * data = dataRef;
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_34.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_34.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_34.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_34.c	2025-05-05 11:26:02.087330676 +0800
@@ -89,7 +89,7 @@
     {
         char * data = myUnion.unionSecond;
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_char(data, has_free_char);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_41.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_41.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_41.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_41.c	2025-05-05 11:26:02.078330480 +0800
@@ -70,7 +70,7 @@
 static void goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_42.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_42.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_42.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_42.c	2025-05-05 11:26:02.008328954 +0800
@@ -87,7 +87,7 @@
     data = NULL;
     data = goodB2GSource(data);
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 void CWE401_Memory_Leak__strdup_char_42_good()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_43.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_43.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_43.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_43.cpp	2025-05-05 11:26:02.027329368 +0800
@@ -87,7 +87,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_44.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_44.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_44.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_44.c	2025-05-05 11:26:02.076330437 +0800
@@ -74,7 +74,7 @@
 static void goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_45.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_45.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_45.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_45.c	2025-05-05 11:26:02.006328910 +0800
@@ -79,7 +79,7 @@
 {
     char * data = CWE401_Memory_Leak__strdup_char_45_goodB2GData;
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_51b.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_51b.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_51b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_51b.c	2025-05-05 11:26:02.023329281 +0800
@@ -44,7 +44,7 @@
 void CWE401_Memory_Leak__strdup_char_51b_goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_52c.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_52c.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_52c.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_52c.c	2025-05-05 11:26:02.001328801 +0800
@@ -44,7 +44,7 @@
 void CWE401_Memory_Leak__strdup_char_52c_goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_53d.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_53d.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_53d.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_53d.c	2025-05-05 11:26:02.090330742 +0800
@@ -44,7 +44,7 @@
 void CWE401_Memory_Leak__strdup_char_53d_goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_54e.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_54e.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_54e.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_54e.c	2025-05-05 11:26:02.022329259 +0800
@@ -44,7 +44,7 @@
 void CWE401_Memory_Leak__strdup_char_54e_goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_61a.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_61a.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_61a.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_61a.c	2025-05-05 11:26:02.000328779 +0800
@@ -60,7 +60,7 @@
     data = NULL;
     data = CWE401_Memory_Leak__strdup_char_61b_goodB2GSource(data);
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 void CWE401_Memory_Leak__strdup_char_61_good()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_62a.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_62a.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_62a.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_62a.cpp	2025-05-05 11:26:02.103331026 +0800
@@ -63,7 +63,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_63b.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_63b.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_63b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_63b.c	2025-05-05 11:26:01.999328757 +0800
@@ -47,7 +47,7 @@
 {
     char * data = *dataPtr;
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_64b.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_64b.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_64b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_64b.c	2025-05-05 11:26:01.994328648 +0800
@@ -56,7 +56,7 @@
     /* dereference dataPtr into data */
     char * data = (*dataPtr);
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_65b.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_65b.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_65b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_65b.c	2025-05-05 11:26:02.018329172 +0800
@@ -44,7 +44,7 @@
 void CWE401_Memory_Leak__strdup_char_65b_goodB2GSink(char * data)
 {
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_66b.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_66b.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_66b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_66b.c	2025-05-05 11:26:02.025329324 +0800
@@ -48,7 +48,7 @@
 {
     char * data = dataArray[2];
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_67b.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_67b.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_67b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_67b.c	2025-05-05 11:26:01.990328561 +0800
@@ -52,7 +52,7 @@
 {
     char * data = myStruct.structFirst;
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_68b.c refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_68b.c
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_68b.c	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_68b.c	2025-05-05 11:26:02.107331113 +0800
@@ -51,7 +51,7 @@
 {
     char * data = CWE401_Memory_Leak__strdup_char_68_goodB2GData;
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_72b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_72b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_72b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_72b.cpp	2025-05-05 11:26:01.998328735 +0800
@@ -54,7 +54,7 @@
 {
     char * data = dataVector[2];
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_73b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_73b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_73b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_73b.cpp	2025-05-05 11:26:02.013329062 +0800
@@ -54,7 +54,7 @@
 {
     char * data = dataList.back();
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_74b.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_74b.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_74b.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_74b.cpp	2025-05-05 11:26:01.991328583 +0800
@@ -54,7 +54,7 @@
 {
     char * data = dataMap[2];
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_81_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_81_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_81_goodB2G.cpp	2025-05-05 11:26:02.015329106 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__strdup_char_81_goodB2G::action(char * data) const
 {
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_82_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_82_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_82_goodB2G.cpp	2025-05-05 11:26:02.081330546 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__strdup_char_82_goodB2G::action(char * data)
 {
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_char(data, has_free_char);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_83_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_83_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_83_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_83_goodB2G.cpp	2025-05-05 11:26:01.995328670 +0800
@@ -36,7 +36,7 @@
 CWE401_Memory_Leak__strdup_char_83_goodB2G::~CWE401_Memory_Leak__strdup_char_83_goodB2G()
 {
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_char(data, has_free_char);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_84_goodB2G.cpp refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_84_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_84_goodB2G.cpp	2017-06-13 04:15:06.000000000 +0800
+++ refined/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_84_goodB2G.cpp	2025-05-05 11:26:02.014329084 +0800
@@ -36,7 +36,7 @@
 CWE401_Memory_Leak__strdup_char_84_goodB2G::~CWE401_Memory_Leak__strdup_char_84_goodB2G()
 {
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_char(data, has_free_char);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_01.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_01.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_01.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_01.c	2025-05-05 11:26:01.780323979 +0800
@@ -69,7 +69,7 @@
         printWLine(data);
     }
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 void CWE401_Memory_Leak__strdup_wchar_t_01_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_02.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_02.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_02.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_02.c	2025-05-05 11:26:01.768323718 +0800
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -92,7 +92,7 @@
     if(1)
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_03.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_03.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_03.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_03.c	2025-05-05 11:26:01.739323085 +0800
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -92,7 +92,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_04.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_04.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_04.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_04.c	2025-05-05 11:26:01.740323107 +0800
@@ -76,7 +76,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -98,7 +98,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_05.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_05.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_05.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_05.c	2025-05-05 11:26:01.778323936 +0800
@@ -76,7 +76,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -98,7 +98,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_06.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_06.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_06.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_06.c	2025-05-05 11:26:01.781324001 +0800
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -97,7 +97,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_07.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_07.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_07.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_07.c	2025-05-05 11:26:01.745323216 +0800
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -97,7 +97,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_08.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_08.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_08.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_08.c	2025-05-05 11:26:01.771323783 +0800
@@ -83,7 +83,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -105,7 +105,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_09.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_09.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_09.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_09.c	2025-05-05 11:26:01.778323936 +0800
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -92,7 +92,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_10.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_10.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_10.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_10.c	2025-05-05 11:26:01.798324372 +0800
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -92,7 +92,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_11.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_11.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_11.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_11.c	2025-05-05 11:26:01.744323194 +0800
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -92,7 +92,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_12.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_12.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_12.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_12.c	2025-05-05 11:26:01.767323696 +0800
@@ -52,7 +52,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -90,12 +90,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_13.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_13.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_13.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_13.c	2025-05-05 11:26:01.743323172 +0800
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -92,7 +92,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_14.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_14.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_14.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_14.c	2025-05-05 11:26:01.774323849 +0800
@@ -70,7 +70,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -92,7 +92,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_15.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_15.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_15.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_15.c	2025-05-05 11:26:01.799324394 +0800
@@ -88,7 +88,7 @@
         break;
     default:
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
         break;
     }
 }
@@ -118,7 +118,7 @@
     {
     case 7:
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_16.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_16.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_16.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_16.c	2025-05-05 11:26:01.747323260 +0800
@@ -68,7 +68,7 @@
     while(1)
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
         break;
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_17.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_17.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_17.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_17.c	2025-05-05 11:26:01.773323827 +0800
@@ -67,7 +67,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_18.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_18.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_18.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_18.c	2025-05-05 11:26:01.794324285 +0800
@@ -62,7 +62,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_21.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_21.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_21.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_21.c	2025-05-05 11:26:01.779323958 +0800
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -94,7 +94,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_22b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_22b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_22b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_22b.c	2025-05-05 11:26:01.751323347 +0800
@@ -54,7 +54,7 @@
     else
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -64,7 +64,7 @@
     if(CWE401_Memory_Leak__strdup_wchar_t_22_goodB2G2Global)
     {
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_31.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_31.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_31.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_31.c	2025-05-05 11:26:01.783324045 +0800
@@ -80,7 +80,7 @@
         wchar_t * dataCopy = data;
         wchar_t * data = dataCopy;
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_32.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_32.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_32.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_32.c	2025-05-05 11:26:01.776323892 +0800
@@ -95,7 +95,7 @@
     {
         wchar_t * data = *dataPtr2;
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_33.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_33.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_33.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_33.cpp	2025-05-05 11:26:01.736323020 +0800
@@ -83,7 +83,7 @@
     {
         wchar_t * data = dataRef;
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_34.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_34.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_34.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_34.c	2025-05-05 11:26:01.771323783 +0800
@@ -89,7 +89,7 @@
     {
         wchar_t * data = myUnion.unionSecond;
         /* FIX: Deallocate memory initialized in the source */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_41.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_41.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_41.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_41.c	2025-05-05 11:26:01.738323063 +0800
@@ -70,7 +70,7 @@
 static void goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_42.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_42.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_42.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_42.c	2025-05-05 11:26:01.779323958 +0800
@@ -87,7 +87,7 @@
     data = NULL;
     data = goodB2GSource(data);
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 void CWE401_Memory_Leak__strdup_wchar_t_42_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_43.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_43.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_43.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_43.cpp	2025-05-05 11:26:01.800324416 +0800
@@ -87,7 +87,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_44.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_44.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_44.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_44.c	2025-05-05 11:26:01.741323129 +0800
@@ -74,7 +74,7 @@
 static void goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_45.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_45.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_45.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_45.c	2025-05-05 11:26:01.794324285 +0800
@@ -79,7 +79,7 @@
 {
     wchar_t * data = CWE401_Memory_Leak__strdup_wchar_t_45_goodB2GData;
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_51b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_51b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_51b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_51b.c	2025-05-05 11:26:01.738323063 +0800
@@ -44,7 +44,7 @@
 void CWE401_Memory_Leak__strdup_wchar_t_51b_goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_52c.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_52c.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_52c.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_52c.c	2025-05-05 11:26:01.764323630 +0800
@@ -44,7 +44,7 @@
 void CWE401_Memory_Leak__strdup_wchar_t_52c_goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_53d.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_53d.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_53d.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_53d.c	2025-05-05 11:26:01.735322998 +0800
@@ -44,7 +44,7 @@
 void CWE401_Memory_Leak__strdup_wchar_t_53d_goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_54e.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_54e.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_54e.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_54e.c	2025-05-05 11:26:01.735322998 +0800
@@ -44,7 +44,7 @@
 void CWE401_Memory_Leak__strdup_wchar_t_54e_goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_61a.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_61a.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_61a.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_61a.c	2025-05-05 11:26:01.748323281 +0800
@@ -60,7 +60,7 @@
     data = NULL;
     data = CWE401_Memory_Leak__strdup_wchar_t_61b_goodB2GSource(data);
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 void CWE401_Memory_Leak__strdup_wchar_t_61_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_62a.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_62a.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_62a.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_62a.cpp	2025-05-05 11:26:01.757323478 +0800
@@ -63,7 +63,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_63b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_63b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_63b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_63b.c	2025-05-05 11:26:01.800324416 +0800
@@ -47,7 +47,7 @@
 {
     wchar_t * data = *dataPtr;
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_64b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_64b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_64b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_64b.c	2025-05-05 11:26:01.772323805 +0800
@@ -56,7 +56,7 @@
     /* dereference dataPtr into data */
     wchar_t * data = (*dataPtr);
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_65b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_65b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_65b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_65b.c	2025-05-05 11:26:01.776323892 +0800
@@ -44,7 +44,7 @@
 void CWE401_Memory_Leak__strdup_wchar_t_65b_goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_66b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_66b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_66b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_66b.c	2025-05-05 11:26:01.768323718 +0800
@@ -48,7 +48,7 @@
 {
     wchar_t * data = dataArray[2];
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_67b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_67b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_67b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_67b.c	2025-05-05 11:26:01.766323674 +0800
@@ -52,7 +52,7 @@
 {
     wchar_t * data = myStruct.structFirst;
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_68b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_68b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_68b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_68b.c	2025-05-05 11:26:01.750323325 +0800
@@ -51,7 +51,7 @@
 {
     wchar_t * data = CWE401_Memory_Leak__strdup_wchar_t_68_goodB2GData;
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_72b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_72b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_72b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_72b.cpp	2025-05-05 11:26:01.786324110 +0800
@@ -54,7 +54,7 @@
 {
     wchar_t * data = dataVector[2];
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_73b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_73b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_73b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_73b.cpp	2025-05-05 11:26:01.786324110 +0800
@@ -54,7 +54,7 @@
 {
     wchar_t * data = dataList.back();
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_74b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_74b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_74b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_74b.cpp	2025-05-05 11:26:01.773323827 +0800
@@ -54,7 +54,7 @@
 {
     wchar_t * data = dataMap[2];
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_81_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_81_goodB2G.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_81_goodB2G.cpp	2025-05-05 11:26:01.743323172 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__strdup_wchar_t_81_goodB2G::action(wchar_t * data) const
 {
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_82_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_82_goodB2G.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_82_goodB2G.cpp	2025-05-05 11:26:01.742323151 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__strdup_wchar_t_82_goodB2G::action(wchar_t * data)
 {
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_83_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_83_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_83_goodB2G.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_83_goodB2G.cpp	2025-05-05 11:26:01.756323456 +0800
@@ -36,7 +36,7 @@
 CWE401_Memory_Leak__strdup_wchar_t_83_goodB2G::~CWE401_Memory_Leak__strdup_wchar_t_83_goodB2G()
 {
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_84_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_84_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_84_goodB2G.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__strdup_wchar_t_84_goodB2G.cpp	2025-05-05 11:26:01.786324110 +0800
@@ -36,7 +36,7 @@
 CWE401_Memory_Leak__strdup_wchar_t_84_goodB2G::~CWE401_Memory_Leak__strdup_wchar_t_84_goodB2G()
 {
     /* FIX: Deallocate memory initialized in the source */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_01.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_01.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_01.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_01.c	2025-05-05 11:26:01.769323739 +0800
@@ -32,7 +32,7 @@
     data[0].intOne = 0;
     data[0].intTwo = 0;
     printStructLine((twoIntsStruct *)&data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
     data[0].intOne = 0;
     data[0].intTwo = 0;
     printStructLine((twoIntsStruct *)&data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -68,7 +68,7 @@
     data[0].intTwo = 0;
     printStructLine((twoIntsStruct *)&data[0]);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_01_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_02.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_02.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_02.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_02.c	2025-05-05 11:26:01.771323783 +0800
@@ -37,7 +37,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_03.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_03.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_03.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_03.c	2025-05-05 11:26:01.778323936 +0800
@@ -37,7 +37,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_04.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_04.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_04.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_04.c	2025-05-05 11:26:01.775323870 +0800
@@ -43,7 +43,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -97,7 +97,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -122,7 +122,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -143,7 +143,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_05.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_05.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_05.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_05.c	2025-05-05 11:26:01.798324372 +0800
@@ -43,7 +43,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -97,7 +97,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -122,7 +122,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -143,7 +143,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_06.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_06.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_06.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_06.c	2025-05-05 11:26:01.745323216 +0800
@@ -42,7 +42,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -74,7 +74,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -96,7 +96,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -121,7 +121,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -142,7 +142,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_07.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_07.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_07.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_07.c	2025-05-05 11:26:01.835325179 +0800
@@ -42,7 +42,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -74,7 +74,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -96,7 +96,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -121,7 +121,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -142,7 +142,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_08.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_08.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_08.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_08.c	2025-05-05 11:26:01.751323347 +0800
@@ -50,7 +50,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -82,7 +82,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -104,7 +104,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -129,7 +129,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -150,7 +150,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_09.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_09.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_09.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_09.c	2025-05-05 11:26:01.755323434 +0800
@@ -37,7 +37,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_10.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_10.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_10.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_10.c	2025-05-05 11:26:01.756323456 +0800
@@ -37,7 +37,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_11.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_11.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_11.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_11.c	2025-05-05 11:26:01.741323129 +0800
@@ -37,7 +37,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_12.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_12.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_12.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_12.c	2025-05-05 11:26:01.760323543 +0800
@@ -46,13 +46,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -90,12 +90,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -126,12 +126,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_13.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_13.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_13.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_13.c	2025-05-05 11:26:01.769323739 +0800
@@ -37,7 +37,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_14.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_14.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_14.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_14.c	2025-05-05 11:26:01.777323914 +0800
@@ -37,7 +37,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_15.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_15.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_15.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_15.c	2025-05-05 11:26:01.768323718 +0800
@@ -44,7 +44,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -87,7 +87,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
         break;
     }
 }
@@ -117,7 +117,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -149,7 +149,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -182,7 +182,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_16.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_16.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_16.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_16.c	2025-05-05 11:26:01.778323936 +0800
@@ -38,7 +38,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -67,7 +67,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
         break;
     }
 }
@@ -89,7 +89,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_17.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_17.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_17.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_17.c	2025-05-05 11:26:01.793324263 +0800
@@ -38,7 +38,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -87,7 +87,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_18.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_18.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_18.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_18.c	2025-05-05 11:26:01.791324220 +0800
@@ -36,7 +36,7 @@
     printStructLine((twoIntsStruct *)&data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -79,7 +79,7 @@
     printStructLine((twoIntsStruct *)&data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_21.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_21.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_21.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_21.c	2025-05-05 11:26:01.788324154 +0800
@@ -28,7 +28,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -68,7 +68,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -93,7 +93,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -117,7 +117,7 @@
 {
     if(goodG2BStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_22b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_22b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_22b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_22b.c	2025-05-05 11:26:01.742323151 +0800
@@ -28,7 +28,7 @@
 {
     if(CWE401_Memory_Leak__struct_twoIntsStruct_calloc_22_badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -53,7 +53,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -63,7 +63,7 @@
     if(CWE401_Memory_Leak__struct_twoIntsStruct_calloc_22_goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -72,7 +72,7 @@
 {
     if(CWE401_Memory_Leak__struct_twoIntsStruct_calloc_22_goodG2BGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_31.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_31.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_31.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_31.c	2025-05-05 11:26:01.744323194 +0800
@@ -35,7 +35,7 @@
     {
         struct _twoIntsStruct * dataCopy = data;
         struct _twoIntsStruct * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -58,7 +58,7 @@
     {
         struct _twoIntsStruct * dataCopy = data;
         struct _twoIntsStruct * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -79,7 +79,7 @@
         struct _twoIntsStruct * dataCopy = data;
         struct _twoIntsStruct * data = dataCopy;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_32.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_32.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_32.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_32.c	2025-05-05 11:26:01.790324198 +0800
@@ -40,7 +40,7 @@
     }
     {
         struct _twoIntsStruct * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -68,7 +68,7 @@
     }
     {
         struct _twoIntsStruct * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -94,7 +94,7 @@
     {
         struct _twoIntsStruct * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_33.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_33.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_33.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_33.cpp	2025-05-05 11:26:01.749323303 +0800
@@ -38,7 +38,7 @@
     printStructLine((twoIntsStruct *)&data[0]);
     {
         struct _twoIntsStruct * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -61,7 +61,7 @@
     printStructLine((twoIntsStruct *)&data[0]);
     {
         struct _twoIntsStruct * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -82,7 +82,7 @@
     {
         struct _twoIntsStruct * data = dataRef;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_34.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_34.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_34.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_34.c	2025-05-05 11:26:01.738323063 +0800
@@ -42,7 +42,7 @@
     myUnion.unionFirst = data;
     {
         struct _twoIntsStruct * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     myUnion.unionFirst = data;
     {
         struct _twoIntsStruct * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -88,7 +88,7 @@
     {
         struct _twoIntsStruct * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_41.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_41.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_41.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_41.c	2025-05-05 11:26:01.801324438 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -48,7 +48,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 static void goodG2BSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -69,7 +69,7 @@
 static void goodB2GSink(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_42.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_42.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_42.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_42.c	2025-05-05 11:26:01.748323281 +0800
@@ -43,7 +43,7 @@
     struct _twoIntsStruct * data;
     data = NULL;
     data = badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -73,7 +73,7 @@
     struct _twoIntsStruct * data;
     data = NULL;
     data = goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -101,7 +101,7 @@
     data = NULL;
     data = goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_42_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_43.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_43.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_43.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_43.cpp	2025-05-05 11:26:01.750323325 +0800
@@ -40,7 +40,7 @@
     struct _twoIntsStruct * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -64,7 +64,7 @@
     struct _twoIntsStruct * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -86,7 +86,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_44.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_44.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_44.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_44.c	2025-05-05 11:26:01.778323936 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -73,7 +73,7 @@
 static void goodB2GSink(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_45.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_45.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_45.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_45.c	2025-05-05 11:26:01.835325179 +0800
@@ -28,7 +28,7 @@
 static void badSink()
 {
     struct _twoIntsStruct * data = CWE401_Memory_Leak__struct_twoIntsStruct_calloc_45_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -55,7 +55,7 @@
 static void goodG2BSink()
 {
     struct _twoIntsStruct * data = CWE401_Memory_Leak__struct_twoIntsStruct_calloc_45_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -78,7 +78,7 @@
 {
     struct _twoIntsStruct * data = CWE401_Memory_Leak__struct_twoIntsStruct_calloc_45_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_51b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_51b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_51b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_51b.c	2025-05-05 11:26:01.737323041 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_51b_badSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_51b_goodG2BSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_51b_goodB2GSink(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_52c.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_52c.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_52c.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_52c.c	2025-05-05 11:26:01.737323041 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_52c_badSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_52c_goodG2BSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_52c_goodB2GSink(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_53d.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_53d.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_53d.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_53d.c	2025-05-05 11:26:01.734322976 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_53d_badSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_53d_goodG2BSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_53d_goodB2GSink(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_54e.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_54e.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_54e.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_54e.c	2025-05-05 11:26:01.757323478 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_54e_badSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_54e_goodG2BSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_54e_goodB2GSink(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_61a.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_61a.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_61a.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_61a.c	2025-05-05 11:26:01.791324220 +0800
@@ -29,7 +29,7 @@
     struct _twoIntsStruct * data;
     data = NULL;
     data = CWE401_Memory_Leak__struct_twoIntsStruct_calloc_61b_badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
     struct _twoIntsStruct * data;
     data = NULL;
     data = CWE401_Memory_Leak__struct_twoIntsStruct_calloc_61b_goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -58,7 +58,7 @@
     data = NULL;
     data = CWE401_Memory_Leak__struct_twoIntsStruct_calloc_61b_goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_61_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_62a.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_62a.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_62a.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_62a.cpp	2025-05-05 11:26:01.742323151 +0800
@@ -32,7 +32,7 @@
     struct _twoIntsStruct * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -48,7 +48,7 @@
     struct _twoIntsStruct * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_63b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_63b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_63b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_63b.c	2025-05-05 11:26:01.834325158 +0800
@@ -24,7 +24,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_63b_badSink(struct _twoIntsStruct * * dataPtr)
 {
     struct _twoIntsStruct * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -36,7 +36,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_63b_goodG2BSink(struct _twoIntsStruct * * dataPtr)
 {
     struct _twoIntsStruct * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 {
     struct _twoIntsStruct * data = *dataPtr;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_64b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_64b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_64b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_64b.c	2025-05-05 11:26:01.799324394 +0800
@@ -27,7 +27,7 @@
     struct _twoIntsStruct * * dataPtr = (struct _twoIntsStruct * *)dataVoidPtr;
     /* dereference dataPtr into data */
     struct _twoIntsStruct * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
     struct _twoIntsStruct * * dataPtr = (struct _twoIntsStruct * *)dataVoidPtr;
     /* dereference dataPtr into data */
     struct _twoIntsStruct * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
     /* dereference dataPtr into data */
     struct _twoIntsStruct * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_65b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_65b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_65b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_65b.c	2025-05-05 11:26:01.753323391 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_65b_badSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_65b_goodG2BSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_65b_goodB2GSink(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_66b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_66b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_66b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_66b.c	2025-05-05 11:26:01.776323892 +0800
@@ -25,7 +25,7 @@
 {
     /* copy data out of dataArray */
     struct _twoIntsStruct * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -37,7 +37,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_66b_goodG2BSink(struct _twoIntsStruct * dataArray[])
 {
     struct _twoIntsStruct * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 {
     struct _twoIntsStruct * data = dataArray[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_67b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_67b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_67b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_67b.c	2025-05-05 11:26:01.763323609 +0800
@@ -29,7 +29,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_67b_badSink(CWE401_Memory_Leak__struct_twoIntsStruct_calloc_67_structType myStruct)
 {
     struct _twoIntsStruct * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_67b_goodG2BSink(CWE401_Memory_Leak__struct_twoIntsStruct_calloc_67_structType myStruct)
 {
     struct _twoIntsStruct * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     struct _twoIntsStruct * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_68b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_68b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_68b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_68b.c	2025-05-05 11:26:01.749323303 +0800
@@ -28,7 +28,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_68b_badSink()
 {
     struct _twoIntsStruct * data = CWE401_Memory_Leak__struct_twoIntsStruct_calloc_68_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -40,7 +40,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_68b_goodG2BSink()
 {
     struct _twoIntsStruct * data = CWE401_Memory_Leak__struct_twoIntsStruct_calloc_68_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
 {
     struct _twoIntsStruct * data = CWE401_Memory_Leak__struct_twoIntsStruct_calloc_68_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_72b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_72b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_72b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_72b.cpp	2025-05-05 11:26:01.783324045 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataVector */
     struct _twoIntsStruct * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(vector<struct _twoIntsStruct *> dataVector)
 {
     struct _twoIntsStruct * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     struct _twoIntsStruct * data = dataVector[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_73b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_73b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_73b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_73b.cpp	2025-05-05 11:26:01.798324372 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataList */
     struct _twoIntsStruct * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(list<struct _twoIntsStruct *> dataList)
 {
     struct _twoIntsStruct * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     struct _twoIntsStruct * data = dataList.back();
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_74b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_74b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_74b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_74b.cpp	2025-05-05 11:26:01.745323216 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataMap */
     struct _twoIntsStruct * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(map<int, struct _twoIntsStruct *> dataMap)
 {
     struct _twoIntsStruct * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     struct _twoIntsStruct * data = dataMap[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_81_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_81_bad.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_81_bad.cpp	2025-05-05 11:26:01.767323696 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_81_bad::action(struct _twoIntsStruct * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_81_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_81_goodB2G.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_81_goodB2G.cpp	2025-05-05 11:26:01.740323107 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_81_goodB2G::action(struct _twoIntsStruct * data) const
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_81_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_81_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_81_goodG2B.cpp	2025-05-05 11:26:01.795324307 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_81_goodG2B::action(struct _twoIntsStruct * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_82_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_82_bad.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_82_bad.cpp	2025-05-05 11:26:01.766323674 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_82_bad::action(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_82_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_82_goodB2G.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_82_goodB2G.cpp	2025-05-05 11:26:01.734322976 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_82_goodB2G::action(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_82_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_82_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_82_goodG2B.cpp	2025-05-05 11:26:01.782324023 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_calloc_82_goodG2B::action(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_83_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_83_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_83_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_83_bad.cpp	2025-05-05 11:26:01.770323761 +0800
@@ -35,7 +35,7 @@
 
 CWE401_Memory_Leak__struct_twoIntsStruct_calloc_83_bad::~CWE401_Memory_Leak__struct_twoIntsStruct_calloc_83_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_83_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_83_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_83_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_83_goodB2G.cpp	2025-05-05 11:26:01.800324416 +0800
@@ -36,7 +36,7 @@
 CWE401_Memory_Leak__struct_twoIntsStruct_calloc_83_goodB2G::~CWE401_Memory_Leak__struct_twoIntsStruct_calloc_83_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_83_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_83_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_83_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_83_goodG2B.cpp	2025-05-05 11:26:01.773323827 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__struct_twoIntsStruct_calloc_83_goodG2B::~CWE401_Memory_Leak__struct_twoIntsStruct_calloc_83_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_84_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_84_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_84_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_84_bad.cpp	2025-05-05 11:26:01.834325158 +0800
@@ -35,7 +35,7 @@
 
 CWE401_Memory_Leak__struct_twoIntsStruct_calloc_84_bad::~CWE401_Memory_Leak__struct_twoIntsStruct_calloc_84_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_84_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_84_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_84_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_84_goodB2G.cpp	2025-05-05 11:26:01.800324416 +0800
@@ -36,7 +36,7 @@
 CWE401_Memory_Leak__struct_twoIntsStruct_calloc_84_goodB2G::~CWE401_Memory_Leak__struct_twoIntsStruct_calloc_84_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_84_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_84_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_84_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_calloc_84_goodG2B.cpp	2025-05-05 11:26:01.798324372 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__struct_twoIntsStruct_calloc_84_goodG2B::~CWE401_Memory_Leak__struct_twoIntsStruct_calloc_84_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_01.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_01.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_01.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_01.c	2025-05-05 11:26:01.747323260 +0800
@@ -32,7 +32,7 @@
     data[0].intOne = 0;
     data[0].intTwo = 0;
     printStructLine((twoIntsStruct *)&data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
     data[0].intOne = 0;
     data[0].intTwo = 0;
     printStructLine((twoIntsStruct *)&data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -68,7 +68,7 @@
     data[0].intTwo = 0;
     printStructLine((twoIntsStruct *)&data[0]);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_01_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_02.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_02.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_02.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_02.c	2025-05-05 11:26:01.766323674 +0800
@@ -37,7 +37,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_03.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_03.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_03.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_03.c	2025-05-05 11:26:01.746323238 +0800
@@ -37,7 +37,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_04.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_04.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_04.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_04.c	2025-05-05 11:26:01.739323085 +0800
@@ -43,7 +43,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -97,7 +97,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -122,7 +122,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -143,7 +143,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_05.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_05.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_05.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_05.c	2025-05-05 11:26:01.767323696 +0800
@@ -43,7 +43,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -97,7 +97,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -122,7 +122,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -143,7 +143,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_06.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_06.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_06.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_06.c	2025-05-05 11:26:01.750323325 +0800
@@ -42,7 +42,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -74,7 +74,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -96,7 +96,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -121,7 +121,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -142,7 +142,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_07.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_07.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_07.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_07.c	2025-05-05 11:26:01.800324416 +0800
@@ -42,7 +42,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -74,7 +74,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -96,7 +96,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -121,7 +121,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -142,7 +142,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_08.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_08.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_08.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_08.c	2025-05-05 11:26:01.792324241 +0800
@@ -50,7 +50,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -82,7 +82,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -104,7 +104,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -129,7 +129,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -150,7 +150,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_09.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_09.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_09.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_09.c	2025-05-05 11:26:01.786324110 +0800
@@ -37,7 +37,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_10.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_10.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_10.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_10.c	2025-05-05 11:26:01.743323172 +0800
@@ -37,7 +37,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_11.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_11.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_11.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_11.c	2025-05-05 11:26:01.790324198 +0800
@@ -37,7 +37,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_12.c	2025-05-05 11:26:01.757323478 +0800
@@ -46,13 +46,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -90,12 +90,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -126,12 +126,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_13.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_13.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_13.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_13.c	2025-05-05 11:26:01.740323107 +0800
@@ -37,7 +37,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_14.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_14.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_14.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_14.c	2025-05-05 11:26:01.753323391 +0800
@@ -37,7 +37,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_15.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_15.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_15.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_15.c	2025-05-05 11:26:01.772323805 +0800
@@ -44,7 +44,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -87,7 +87,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
         break;
     }
 }
@@ -117,7 +117,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -149,7 +149,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -182,7 +182,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_16.c	2025-05-05 11:26:01.763323609 +0800
@@ -38,7 +38,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -67,7 +67,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
         break;
     }
 }
@@ -89,7 +89,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_17.c	2025-05-05 11:26:01.789324176 +0800
@@ -38,7 +38,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -87,7 +87,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_18.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_18.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_18.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_18.c	2025-05-05 11:26:01.777323914 +0800
@@ -36,7 +36,7 @@
     printStructLine((twoIntsStruct *)&data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -79,7 +79,7 @@
     printStructLine((twoIntsStruct *)&data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_21.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_21.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_21.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_21.c	2025-05-05 11:26:01.764323630 +0800
@@ -28,7 +28,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -68,7 +68,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -93,7 +93,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -117,7 +117,7 @@
 {
     if(goodG2BStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_22b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_22b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_22b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_22b.c	2025-05-05 11:26:01.761323565 +0800
@@ -28,7 +28,7 @@
 {
     if(CWE401_Memory_Leak__struct_twoIntsStruct_malloc_22_badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -53,7 +53,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -63,7 +63,7 @@
     if(CWE401_Memory_Leak__struct_twoIntsStruct_malloc_22_goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -72,7 +72,7 @@
 {
     if(CWE401_Memory_Leak__struct_twoIntsStruct_malloc_22_goodG2BGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c	2025-05-05 11:26:01.834325158 +0800
@@ -35,7 +35,7 @@
     {
         struct _twoIntsStruct * dataCopy = data;
         struct _twoIntsStruct * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -58,7 +58,7 @@
     {
         struct _twoIntsStruct * dataCopy = data;
         struct _twoIntsStruct * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -79,7 +79,7 @@
         struct _twoIntsStruct * dataCopy = data;
         struct _twoIntsStruct * data = dataCopy;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_32.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_32.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_32.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_32.c	2025-05-05 11:26:01.774323849 +0800
@@ -40,7 +40,7 @@
     }
     {
         struct _twoIntsStruct * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -68,7 +68,7 @@
     }
     {
         struct _twoIntsStruct * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -94,7 +94,7 @@
     {
         struct _twoIntsStruct * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_33.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_33.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_33.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_33.cpp	2025-05-05 11:26:01.750323325 +0800
@@ -38,7 +38,7 @@
     printStructLine((twoIntsStruct *)&data[0]);
     {
         struct _twoIntsStruct * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -61,7 +61,7 @@
     printStructLine((twoIntsStruct *)&data[0]);
     {
         struct _twoIntsStruct * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -82,7 +82,7 @@
     {
         struct _twoIntsStruct * data = dataRef;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_34.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_34.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_34.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_34.c	2025-05-05 11:26:01.758323499 +0800
@@ -42,7 +42,7 @@
     myUnion.unionFirst = data;
     {
         struct _twoIntsStruct * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     myUnion.unionFirst = data;
     {
         struct _twoIntsStruct * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -88,7 +88,7 @@
     {
         struct _twoIntsStruct * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_41.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_41.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_41.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_41.c	2025-05-05 11:26:01.796324329 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -48,7 +48,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 static void goodG2BSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -69,7 +69,7 @@
 static void goodB2GSink(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_42.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_42.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_42.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_42.c	2025-05-05 11:26:01.783324045 +0800
@@ -43,7 +43,7 @@
     struct _twoIntsStruct * data;
     data = NULL;
     data = badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -73,7 +73,7 @@
     struct _twoIntsStruct * data;
     data = NULL;
     data = goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -101,7 +101,7 @@
     data = NULL;
     data = goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_42_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_43.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_43.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_43.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_43.cpp	2025-05-05 11:26:01.750323325 +0800
@@ -40,7 +40,7 @@
     struct _twoIntsStruct * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -64,7 +64,7 @@
     struct _twoIntsStruct * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -86,7 +86,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_44.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_44.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_44.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_44.c	2025-05-05 11:26:01.737323041 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -73,7 +73,7 @@
 static void goodB2GSink(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_45.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_45.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_45.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_45.c	2025-05-05 11:26:01.834325158 +0800
@@ -28,7 +28,7 @@
 static void badSink()
 {
     struct _twoIntsStruct * data = CWE401_Memory_Leak__struct_twoIntsStruct_malloc_45_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -55,7 +55,7 @@
 static void goodG2BSink()
 {
     struct _twoIntsStruct * data = CWE401_Memory_Leak__struct_twoIntsStruct_malloc_45_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -78,7 +78,7 @@
 {
     struct _twoIntsStruct * data = CWE401_Memory_Leak__struct_twoIntsStruct_malloc_45_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_51b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_51b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_51b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_51b.c	2025-05-05 11:26:01.835325179 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_51b_badSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_51b_goodG2BSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_51b_goodB2GSink(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_52c.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_52c.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_52c.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_52c.c	2025-05-05 11:26:01.782324023 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_52c_badSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_52c_goodG2BSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_52c_goodB2GSink(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_53d.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_53d.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_53d.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_53d.c	2025-05-05 11:26:01.785324089 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_53d_badSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_53d_goodG2BSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_53d_goodB2GSink(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_54e.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_54e.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_54e.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_54e.c	2025-05-05 11:26:01.778323936 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_54e_badSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_54e_goodG2BSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_54e_goodB2GSink(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_61a.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_61a.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_61a.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_61a.c	2025-05-05 11:26:01.834325158 +0800
@@ -29,7 +29,7 @@
     struct _twoIntsStruct * data;
     data = NULL;
     data = CWE401_Memory_Leak__struct_twoIntsStruct_malloc_61b_badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
     struct _twoIntsStruct * data;
     data = NULL;
     data = CWE401_Memory_Leak__struct_twoIntsStruct_malloc_61b_goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -58,7 +58,7 @@
     data = NULL;
     data = CWE401_Memory_Leak__struct_twoIntsStruct_malloc_61b_goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_61_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_62a.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_62a.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_62a.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_62a.cpp	2025-05-05 11:26:01.775323870 +0800
@@ -32,7 +32,7 @@
     struct _twoIntsStruct * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -48,7 +48,7 @@
     struct _twoIntsStruct * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_63b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_63b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_63b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_63b.c	2025-05-05 11:26:01.767323696 +0800
@@ -24,7 +24,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_63b_badSink(struct _twoIntsStruct * * dataPtr)
 {
     struct _twoIntsStruct * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -36,7 +36,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_63b_goodG2BSink(struct _twoIntsStruct * * dataPtr)
 {
     struct _twoIntsStruct * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 {
     struct _twoIntsStruct * data = *dataPtr;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_64b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_64b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_64b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_64b.c	2025-05-05 11:26:01.790324198 +0800
@@ -27,7 +27,7 @@
     struct _twoIntsStruct * * dataPtr = (struct _twoIntsStruct * *)dataVoidPtr;
     /* dereference dataPtr into data */
     struct _twoIntsStruct * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
     struct _twoIntsStruct * * dataPtr = (struct _twoIntsStruct * *)dataVoidPtr;
     /* dereference dataPtr into data */
     struct _twoIntsStruct * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
     /* dereference dataPtr into data */
     struct _twoIntsStruct * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_65b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_65b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_65b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_65b.c	2025-05-05 11:26:01.746323238 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_65b_badSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_65b_goodG2BSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_65b_goodB2GSink(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_66b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_66b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_66b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_66b.c	2025-05-05 11:26:01.776323892 +0800
@@ -25,7 +25,7 @@
 {
     /* copy data out of dataArray */
     struct _twoIntsStruct * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -37,7 +37,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_66b_goodG2BSink(struct _twoIntsStruct * dataArray[])
 {
     struct _twoIntsStruct * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 {
     struct _twoIntsStruct * data = dataArray[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_67b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_67b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_67b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_67b.c	2025-05-05 11:26:01.776323892 +0800
@@ -29,7 +29,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_67b_badSink(CWE401_Memory_Leak__struct_twoIntsStruct_malloc_67_structType myStruct)
 {
     struct _twoIntsStruct * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_67b_goodG2BSink(CWE401_Memory_Leak__struct_twoIntsStruct_malloc_67_structType myStruct)
 {
     struct _twoIntsStruct * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     struct _twoIntsStruct * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_68b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_68b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_68b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_68b.c	2025-05-05 11:26:01.765323652 +0800
@@ -28,7 +28,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_68b_badSink()
 {
     struct _twoIntsStruct * data = CWE401_Memory_Leak__struct_twoIntsStruct_malloc_68_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -40,7 +40,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_68b_goodG2BSink()
 {
     struct _twoIntsStruct * data = CWE401_Memory_Leak__struct_twoIntsStruct_malloc_68_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
 {
     struct _twoIntsStruct * data = CWE401_Memory_Leak__struct_twoIntsStruct_malloc_68_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_72b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_72b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_72b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_72b.cpp	2025-05-05 11:26:01.745323216 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataVector */
     struct _twoIntsStruct * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(vector<struct _twoIntsStruct *> dataVector)
 {
     struct _twoIntsStruct * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     struct _twoIntsStruct * data = dataVector[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_73b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_73b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_73b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_73b.cpp	2025-05-05 11:26:01.757323478 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataList */
     struct _twoIntsStruct * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(list<struct _twoIntsStruct *> dataList)
 {
     struct _twoIntsStruct * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     struct _twoIntsStruct * data = dataList.back();
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_74b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_74b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_74b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_74b.cpp	2025-05-05 11:26:01.761323565 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataMap */
     struct _twoIntsStruct * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(map<int, struct _twoIntsStruct *> dataMap)
 {
     struct _twoIntsStruct * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     struct _twoIntsStruct * data = dataMap[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_81_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_81_bad.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_81_bad.cpp	2025-05-05 11:26:01.736323020 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_81_bad::action(struct _twoIntsStruct * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_81_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_81_goodB2G.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_81_goodB2G.cpp	2025-05-05 11:26:01.797324350 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_81_goodB2G::action(struct _twoIntsStruct * data) const
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_81_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_81_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_81_goodG2B.cpp	2025-05-05 11:26:01.752323368 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_81_goodG2B::action(struct _twoIntsStruct * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_82_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_82_bad.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_82_bad.cpp	2025-05-05 11:26:01.741323129 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_82_bad::action(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_82_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_82_goodB2G.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_82_goodB2G.cpp	2025-05-05 11:26:01.763323609 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_82_goodB2G::action(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_82_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_82_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_82_goodG2B.cpp	2025-05-05 11:26:01.743323172 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_malloc_82_goodG2B::action(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_83_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_83_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_83_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_83_bad.cpp	2025-05-05 11:26:01.745323216 +0800
@@ -35,7 +35,7 @@
 
 CWE401_Memory_Leak__struct_twoIntsStruct_malloc_83_bad::~CWE401_Memory_Leak__struct_twoIntsStruct_malloc_83_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_83_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_83_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_83_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_83_goodB2G.cpp	2025-05-05 11:26:01.756323456 +0800
@@ -36,7 +36,7 @@
 CWE401_Memory_Leak__struct_twoIntsStruct_malloc_83_goodB2G::~CWE401_Memory_Leak__struct_twoIntsStruct_malloc_83_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_83_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_83_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_83_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_83_goodG2B.cpp	2025-05-05 11:26:01.799324394 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__struct_twoIntsStruct_malloc_83_goodG2B::~CWE401_Memory_Leak__struct_twoIntsStruct_malloc_83_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_84_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_84_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_84_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_84_bad.cpp	2025-05-05 11:26:01.766323674 +0800
@@ -35,7 +35,7 @@
 
 CWE401_Memory_Leak__struct_twoIntsStruct_malloc_84_bad::~CWE401_Memory_Leak__struct_twoIntsStruct_malloc_84_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_84_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_84_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_84_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_84_goodB2G.cpp	2025-05-05 11:26:01.777323914 +0800
@@ -36,7 +36,7 @@
 CWE401_Memory_Leak__struct_twoIntsStruct_malloc_84_goodB2G::~CWE401_Memory_Leak__struct_twoIntsStruct_malloc_84_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_84_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_84_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_84_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_84_goodG2B.cpp	2025-05-05 11:26:01.755323434 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__struct_twoIntsStruct_malloc_84_goodG2B::~CWE401_Memory_Leak__struct_twoIntsStruct_malloc_84_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_01.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_01.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_01.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_01.c	2025-05-05 11:26:01.741323129 +0800
@@ -32,7 +32,7 @@
     data[0].intOne = 0;
     data[0].intTwo = 0;
     printStructLine((twoIntsStruct *)&data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
     data[0].intOne = 0;
     data[0].intTwo = 0;
     printStructLine((twoIntsStruct *)&data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -68,7 +68,7 @@
     data[0].intTwo = 0;
     printStructLine((twoIntsStruct *)&data[0]);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_01_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_02.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_02.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_02.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_02.c	2025-05-05 11:26:01.752323368 +0800
@@ -37,7 +37,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_03.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_03.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_03.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_03.c	2025-05-05 11:26:01.749323303 +0800
@@ -37,7 +37,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_04.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_04.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_04.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_04.c	2025-05-05 11:26:01.741323129 +0800
@@ -43,7 +43,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -97,7 +97,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -122,7 +122,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -143,7 +143,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_05.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_05.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_05.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_05.c	2025-05-05 11:26:01.762323587 +0800
@@ -43,7 +43,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -97,7 +97,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -122,7 +122,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -143,7 +143,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_06.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_06.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_06.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_06.c	2025-05-05 11:26:01.777323914 +0800
@@ -42,7 +42,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -74,7 +74,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -96,7 +96,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -121,7 +121,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -142,7 +142,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_07.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_07.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_07.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_07.c	2025-05-05 11:26:01.736323020 +0800
@@ -42,7 +42,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -74,7 +74,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -96,7 +96,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -121,7 +121,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -142,7 +142,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_08.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_08.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_08.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_08.c	2025-05-05 11:26:01.745323216 +0800
@@ -50,7 +50,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -82,7 +82,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -104,7 +104,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -129,7 +129,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -150,7 +150,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_09.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_09.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_09.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_09.c	2025-05-05 11:26:01.754323412 +0800
@@ -37,7 +37,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_10.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_10.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_10.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_10.c	2025-05-05 11:26:01.736323020 +0800
@@ -37,7 +37,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_11.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_11.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_11.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_11.c	2025-05-05 11:26:01.834325158 +0800
@@ -37,7 +37,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_12.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_12.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_12.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_12.c	2025-05-05 11:26:01.745323216 +0800
@@ -46,13 +46,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -90,12 +90,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -126,12 +126,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_13.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_13.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_13.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_13.c	2025-05-05 11:26:01.769323739 +0800
@@ -37,7 +37,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_14.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_14.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_14.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_14.c	2025-05-05 11:26:01.764323630 +0800
@@ -37,7 +37,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_15.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_15.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_15.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_15.c	2025-05-05 11:26:01.763323609 +0800
@@ -44,7 +44,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -87,7 +87,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
         break;
     }
 }
@@ -117,7 +117,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -149,7 +149,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -182,7 +182,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_16.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_16.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_16.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_16.c	2025-05-05 11:26:01.783324045 +0800
@@ -38,7 +38,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -67,7 +67,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
         break;
     }
 }
@@ -89,7 +89,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_17.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_17.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_17.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_17.c	2025-05-05 11:26:01.748323281 +0800
@@ -38,7 +38,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -87,7 +87,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_18.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_18.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_18.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_18.c	2025-05-05 11:26:01.740323107 +0800
@@ -36,7 +36,7 @@
     printStructLine((twoIntsStruct *)&data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -79,7 +79,7 @@
     printStructLine((twoIntsStruct *)&data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_21.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_21.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_21.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_21.c	2025-05-05 11:26:01.794324285 +0800
@@ -28,7 +28,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -68,7 +68,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -93,7 +93,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -117,7 +117,7 @@
 {
     if(goodG2BStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_22b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_22b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_22b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_22b.c	2025-05-05 11:26:01.765323652 +0800
@@ -28,7 +28,7 @@
 {
     if(CWE401_Memory_Leak__struct_twoIntsStruct_realloc_22_badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -53,7 +53,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -63,7 +63,7 @@
     if(CWE401_Memory_Leak__struct_twoIntsStruct_realloc_22_goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -72,7 +72,7 @@
 {
     if(CWE401_Memory_Leak__struct_twoIntsStruct_realloc_22_goodG2BGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_31.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_31.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_31.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_31.c	2025-05-05 11:26:01.786324110 +0800
@@ -35,7 +35,7 @@
     {
         struct _twoIntsStruct * dataCopy = data;
         struct _twoIntsStruct * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -58,7 +58,7 @@
     {
         struct _twoIntsStruct * dataCopy = data;
         struct _twoIntsStruct * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -79,7 +79,7 @@
         struct _twoIntsStruct * dataCopy = data;
         struct _twoIntsStruct * data = dataCopy;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_32.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_32.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_32.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_32.c	2025-05-05 11:26:01.778323936 +0800
@@ -40,7 +40,7 @@
     }
     {
         struct _twoIntsStruct * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -68,7 +68,7 @@
     }
     {
         struct _twoIntsStruct * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -94,7 +94,7 @@
     {
         struct _twoIntsStruct * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_33.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_33.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_33.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_33.cpp	2025-05-05 11:26:01.751323347 +0800
@@ -38,7 +38,7 @@
     printStructLine((twoIntsStruct *)&data[0]);
     {
         struct _twoIntsStruct * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -61,7 +61,7 @@
     printStructLine((twoIntsStruct *)&data[0]);
     {
         struct _twoIntsStruct * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -82,7 +82,7 @@
     {
         struct _twoIntsStruct * data = dataRef;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_34.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_34.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_34.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_34.c	2025-05-05 11:26:01.737323041 +0800
@@ -42,7 +42,7 @@
     myUnion.unionFirst = data;
     {
         struct _twoIntsStruct * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     myUnion.unionFirst = data;
     {
         struct _twoIntsStruct * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -88,7 +88,7 @@
     {
         struct _twoIntsStruct * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_41.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_41.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_41.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_41.c	2025-05-05 11:26:01.745323216 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -48,7 +48,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 static void goodG2BSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -69,7 +69,7 @@
 static void goodB2GSink(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_42.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_42.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_42.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_42.c	2025-05-05 11:26:01.766323674 +0800
@@ -43,7 +43,7 @@
     struct _twoIntsStruct * data;
     data = NULL;
     data = badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -73,7 +73,7 @@
     struct _twoIntsStruct * data;
     data = NULL;
     data = goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -101,7 +101,7 @@
     data = NULL;
     data = goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_42_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_43.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_43.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_43.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_43.cpp	2025-05-05 11:26:01.734322976 +0800
@@ -40,7 +40,7 @@
     struct _twoIntsStruct * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -64,7 +64,7 @@
     struct _twoIntsStruct * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -86,7 +86,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_44.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_44.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_44.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_44.c	2025-05-05 11:26:01.735322998 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -73,7 +73,7 @@
 static void goodB2GSink(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_45.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_45.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_45.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_45.c	2025-05-05 11:26:01.801324438 +0800
@@ -28,7 +28,7 @@
 static void badSink()
 {
     struct _twoIntsStruct * data = CWE401_Memory_Leak__struct_twoIntsStruct_realloc_45_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -55,7 +55,7 @@
 static void goodG2BSink()
 {
     struct _twoIntsStruct * data = CWE401_Memory_Leak__struct_twoIntsStruct_realloc_45_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -78,7 +78,7 @@
 {
     struct _twoIntsStruct * data = CWE401_Memory_Leak__struct_twoIntsStruct_realloc_45_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_51b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_51b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_51b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_51b.c	2025-05-05 11:26:01.766323674 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_51b_badSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_51b_goodG2BSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_51b_goodB2GSink(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_52c.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_52c.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_52c.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_52c.c	2025-05-05 11:26:01.739323085 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_52c_badSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_52c_goodG2BSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_52c_goodB2GSink(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_53d.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_53d.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_53d.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_53d.c	2025-05-05 11:26:01.801324438 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_53d_badSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_53d_goodG2BSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_53d_goodB2GSink(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_54e.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_54e.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_54e.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_54e.c	2025-05-05 11:26:01.792324241 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_54e_badSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_54e_goodG2BSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_54e_goodB2GSink(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_61a.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_61a.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_61a.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_61a.c	2025-05-05 11:26:01.789324176 +0800
@@ -29,7 +29,7 @@
     struct _twoIntsStruct * data;
     data = NULL;
     data = CWE401_Memory_Leak__struct_twoIntsStruct_realloc_61b_badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
     struct _twoIntsStruct * data;
     data = NULL;
     data = CWE401_Memory_Leak__struct_twoIntsStruct_realloc_61b_goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -58,7 +58,7 @@
     data = NULL;
     data = CWE401_Memory_Leak__struct_twoIntsStruct_realloc_61b_goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_61_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_62a.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_62a.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_62a.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_62a.cpp	2025-05-05 11:26:01.762323587 +0800
@@ -32,7 +32,7 @@
     struct _twoIntsStruct * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -48,7 +48,7 @@
     struct _twoIntsStruct * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_63b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_63b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_63b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_63b.c	2025-05-05 11:26:01.798324372 +0800
@@ -24,7 +24,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_63b_badSink(struct _twoIntsStruct * * dataPtr)
 {
     struct _twoIntsStruct * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -36,7 +36,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_63b_goodG2BSink(struct _twoIntsStruct * * dataPtr)
 {
     struct _twoIntsStruct * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 {
     struct _twoIntsStruct * data = *dataPtr;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_64b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_64b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_64b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_64b.c	2025-05-05 11:26:01.788324154 +0800
@@ -27,7 +27,7 @@
     struct _twoIntsStruct * * dataPtr = (struct _twoIntsStruct * *)dataVoidPtr;
     /* dereference dataPtr into data */
     struct _twoIntsStruct * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
     struct _twoIntsStruct * * dataPtr = (struct _twoIntsStruct * *)dataVoidPtr;
     /* dereference dataPtr into data */
     struct _twoIntsStruct * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
     /* dereference dataPtr into data */
     struct _twoIntsStruct * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_65b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_65b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_65b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_65b.c	2025-05-05 11:26:01.801324438 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_65b_badSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_65b_goodG2BSink(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_65b_goodB2GSink(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_66b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_66b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_66b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_66b.c	2025-05-05 11:26:01.787324132 +0800
@@ -25,7 +25,7 @@
 {
     /* copy data out of dataArray */
     struct _twoIntsStruct * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -37,7 +37,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_66b_goodG2BSink(struct _twoIntsStruct * dataArray[])
 {
     struct _twoIntsStruct * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 {
     struct _twoIntsStruct * data = dataArray[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_67b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_67b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_67b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_67b.c	2025-05-05 11:26:01.769323739 +0800
@@ -29,7 +29,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_67b_badSink(CWE401_Memory_Leak__struct_twoIntsStruct_realloc_67_structType myStruct)
 {
     struct _twoIntsStruct * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_67b_goodG2BSink(CWE401_Memory_Leak__struct_twoIntsStruct_realloc_67_structType myStruct)
 {
     struct _twoIntsStruct * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     struct _twoIntsStruct * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_68b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_68b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_68b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_68b.c	2025-05-05 11:26:01.753323391 +0800
@@ -28,7 +28,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_68b_badSink()
 {
     struct _twoIntsStruct * data = CWE401_Memory_Leak__struct_twoIntsStruct_realloc_68_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -40,7 +40,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_68b_goodG2BSink()
 {
     struct _twoIntsStruct * data = CWE401_Memory_Leak__struct_twoIntsStruct_realloc_68_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
 {
     struct _twoIntsStruct * data = CWE401_Memory_Leak__struct_twoIntsStruct_realloc_68_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_72b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_72b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_72b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_72b.cpp	2025-05-05 11:26:01.795324307 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataVector */
     struct _twoIntsStruct * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(vector<struct _twoIntsStruct *> dataVector)
 {
     struct _twoIntsStruct * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     struct _twoIntsStruct * data = dataVector[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_73b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_73b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_73b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_73b.cpp	2025-05-05 11:26:01.776323892 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataList */
     struct _twoIntsStruct * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(list<struct _twoIntsStruct *> dataList)
 {
     struct _twoIntsStruct * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     struct _twoIntsStruct * data = dataList.back();
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_74b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_74b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_74b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_74b.cpp	2025-05-05 11:26:01.750323325 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataMap */
     struct _twoIntsStruct * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(map<int, struct _twoIntsStruct *> dataMap)
 {
     struct _twoIntsStruct * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     struct _twoIntsStruct * data = dataMap[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_81_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_81_bad.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_81_bad.cpp	2025-05-05 11:26:01.784324067 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_81_bad::action(struct _twoIntsStruct * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_81_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_81_goodB2G.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_81_goodB2G.cpp	2025-05-05 11:26:01.792324241 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_81_goodB2G::action(struct _twoIntsStruct * data) const
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_81_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_81_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_81_goodG2B.cpp	2025-05-05 11:26:01.789324176 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_81_goodG2B::action(struct _twoIntsStruct * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_82_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_82_bad.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_82_bad.cpp	2025-05-05 11:26:01.771323783 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_82_bad::action(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_82_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_82_goodB2G.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_82_goodB2G.cpp	2025-05-05 11:26:01.753323391 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_82_goodB2G::action(struct _twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_82_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_82_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_82_goodG2B.cpp	2025-05-05 11:26:01.779323958 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__struct_twoIntsStruct_realloc_82_goodG2B::action(struct _twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_83_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_83_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_83_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_83_bad.cpp	2025-05-05 11:26:01.750323325 +0800
@@ -35,7 +35,7 @@
 
 CWE401_Memory_Leak__struct_twoIntsStruct_realloc_83_bad::~CWE401_Memory_Leak__struct_twoIntsStruct_realloc_83_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_83_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_83_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_83_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_83_goodB2G.cpp	2025-05-05 11:26:01.734322976 +0800
@@ -36,7 +36,7 @@
 CWE401_Memory_Leak__struct_twoIntsStruct_realloc_83_goodB2G::~CWE401_Memory_Leak__struct_twoIntsStruct_realloc_83_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_83_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_83_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_83_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_83_goodG2B.cpp	2025-05-05 11:26:01.749323303 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__struct_twoIntsStruct_realloc_83_goodG2B::~CWE401_Memory_Leak__struct_twoIntsStruct_realloc_83_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_84_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_84_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_84_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_84_bad.cpp	2025-05-05 11:26:01.735322998 +0800
@@ -35,7 +35,7 @@
 
 CWE401_Memory_Leak__struct_twoIntsStruct_realloc_84_bad::~CWE401_Memory_Leak__struct_twoIntsStruct_realloc_84_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_84_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_84_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_84_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_84_goodB2G.cpp	2025-05-05 11:26:01.752323368 +0800
@@ -36,7 +36,7 @@
 CWE401_Memory_Leak__struct_twoIntsStruct_realloc_84_goodB2G::~CWE401_Memory_Leak__struct_twoIntsStruct_realloc_84_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_84_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_84_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_84_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_realloc_84_goodG2B.cpp	2025-05-05 11:26:01.742323151 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__struct_twoIntsStruct_realloc_84_goodG2B::~CWE401_Memory_Leak__struct_twoIntsStruct_realloc_84_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_01.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_01.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_01.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_01.c	2025-05-05 11:26:01.749323303 +0800
@@ -32,7 +32,7 @@
     data[0].intOne = 0;
     data[0].intTwo = 0;
     printStructLine(&data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
     data[0].intOne = 0;
     data[0].intTwo = 0;
     printStructLine(&data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -68,7 +68,7 @@
     data[0].intTwo = 0;
     printStructLine(&data[0]);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void CWE401_Memory_Leak__twoIntsStruct_calloc_01_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_02.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_02.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_02.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_02.c	2025-05-05 11:26:01.791324220 +0800
@@ -37,7 +37,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_03.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_03.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_03.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_03.c	2025-05-05 11:26:01.734322976 +0800
@@ -37,7 +37,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_04.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_04.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_04.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_04.c	2025-05-05 11:26:01.787324132 +0800
@@ -43,7 +43,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -97,7 +97,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -122,7 +122,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -143,7 +143,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_05.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_05.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_05.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_05.c	2025-05-05 11:26:01.801324438 +0800
@@ -43,7 +43,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -97,7 +97,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -122,7 +122,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -143,7 +143,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_06.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_06.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_06.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_06.c	2025-05-05 11:26:01.774323849 +0800
@@ -42,7 +42,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -74,7 +74,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -96,7 +96,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -121,7 +121,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -142,7 +142,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_07.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_07.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_07.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_07.c	2025-05-05 11:26:01.746323238 +0800
@@ -42,7 +42,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -74,7 +74,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -96,7 +96,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -121,7 +121,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -142,7 +142,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_08.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_08.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_08.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_08.c	2025-05-05 11:26:01.752323368 +0800
@@ -50,7 +50,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -82,7 +82,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -104,7 +104,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -129,7 +129,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -150,7 +150,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_09.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_09.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_09.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_09.c	2025-05-05 11:26:01.751323347 +0800
@@ -37,7 +37,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_10.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_10.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_10.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_10.c	2025-05-05 11:26:01.771323783 +0800
@@ -37,7 +37,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_11.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_11.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_11.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_11.c	2025-05-05 11:26:01.772323805 +0800
@@ -37,7 +37,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_12.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_12.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_12.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_12.c	2025-05-05 11:26:01.785324089 +0800
@@ -46,13 +46,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -90,12 +90,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -126,12 +126,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_13.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_13.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_13.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_13.c	2025-05-05 11:26:01.761323565 +0800
@@ -37,7 +37,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_14.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_14.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_14.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_14.c	2025-05-05 11:26:01.784324067 +0800
@@ -37,7 +37,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_15.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_15.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_15.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_15.c	2025-05-05 11:26:01.833325136 +0800
@@ -44,7 +44,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -87,7 +87,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
         break;
     }
 }
@@ -117,7 +117,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -149,7 +149,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -182,7 +182,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_16.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_16.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_16.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_16.c	2025-05-05 11:26:01.762323587 +0800
@@ -38,7 +38,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -67,7 +67,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
         break;
     }
 }
@@ -89,7 +89,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_17.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_17.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_17.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_17.c	2025-05-05 11:26:01.748323281 +0800
@@ -38,7 +38,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -87,7 +87,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_18.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_18.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_18.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_18.c	2025-05-05 11:26:01.772323805 +0800
@@ -36,7 +36,7 @@
     printStructLine(&data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -79,7 +79,7 @@
     printStructLine(&data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_21.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_21.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_21.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_21.c	2025-05-05 11:26:01.785324089 +0800
@@ -28,7 +28,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -68,7 +68,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -93,7 +93,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -117,7 +117,7 @@
 {
     if(goodG2BStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_22b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_22b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_22b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_22b.c	2025-05-05 11:26:01.783324045 +0800
@@ -28,7 +28,7 @@
 {
     if(CWE401_Memory_Leak__twoIntsStruct_calloc_22_badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -53,7 +53,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -63,7 +63,7 @@
     if(CWE401_Memory_Leak__twoIntsStruct_calloc_22_goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -72,7 +72,7 @@
 {
     if(CWE401_Memory_Leak__twoIntsStruct_calloc_22_goodG2BGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_31.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_31.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_31.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_31.c	2025-05-05 11:26:01.834325158 +0800
@@ -35,7 +35,7 @@
     {
         twoIntsStruct * dataCopy = data;
         twoIntsStruct * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -58,7 +58,7 @@
     {
         twoIntsStruct * dataCopy = data;
         twoIntsStruct * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -79,7 +79,7 @@
         twoIntsStruct * dataCopy = data;
         twoIntsStruct * data = dataCopy;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_32.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_32.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_32.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_32.c	2025-05-05 11:26:01.787324132 +0800
@@ -40,7 +40,7 @@
     }
     {
         twoIntsStruct * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -68,7 +68,7 @@
     }
     {
         twoIntsStruct * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -94,7 +94,7 @@
     {
         twoIntsStruct * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_33.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_33.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_33.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_33.cpp	2025-05-05 11:26:01.833325136 +0800
@@ -38,7 +38,7 @@
     printStructLine(&data[0]);
     {
         twoIntsStruct * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -61,7 +61,7 @@
     printStructLine(&data[0]);
     {
         twoIntsStruct * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -82,7 +82,7 @@
     {
         twoIntsStruct * data = dataRef;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_34.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_34.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_34.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_34.c	2025-05-05 11:26:01.787324132 +0800
@@ -42,7 +42,7 @@
     myUnion.unionFirst = data;
     {
         twoIntsStruct * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     myUnion.unionFirst = data;
     {
         twoIntsStruct * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -88,7 +88,7 @@
     {
         twoIntsStruct * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_41.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_41.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_41.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_41.c	2025-05-05 11:26:01.734322976 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -48,7 +48,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 static void goodG2BSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -69,7 +69,7 @@
 static void goodB2GSink(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_42.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_42.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_42.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_42.c	2025-05-05 11:26:01.755323434 +0800
@@ -38,7 +38,7 @@
     twoIntsStruct * data;
     data = NULL;
     data = badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -63,7 +63,7 @@
     twoIntsStruct * data;
     data = NULL;
     data = goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -86,7 +86,7 @@
     data = NULL;
     data = goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void CWE401_Memory_Leak__twoIntsStruct_calloc_42_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_43.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_43.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_43.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_43.cpp	2025-05-05 11:26:01.776323892 +0800
@@ -40,7 +40,7 @@
     twoIntsStruct * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -64,7 +64,7 @@
     twoIntsStruct * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -86,7 +86,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_44.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_44.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_44.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_44.c	2025-05-05 11:26:01.756323456 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -73,7 +73,7 @@
 static void goodB2GSink(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_45.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_45.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_45.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_45.c	2025-05-05 11:26:01.757323478 +0800
@@ -28,7 +28,7 @@
 static void badSink()
 {
     twoIntsStruct * data = CWE401_Memory_Leak__twoIntsStruct_calloc_45_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -55,7 +55,7 @@
 static void goodG2BSink()
 {
     twoIntsStruct * data = CWE401_Memory_Leak__twoIntsStruct_calloc_45_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -78,7 +78,7 @@
 {
     twoIntsStruct * data = CWE401_Memory_Leak__twoIntsStruct_calloc_45_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_51b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_51b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_51b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_51b.c	2025-05-05 11:26:01.764323630 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__twoIntsStruct_calloc_51b_badSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__twoIntsStruct_calloc_51b_goodG2BSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_calloc_51b_goodB2GSink(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_52c.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_52c.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_52c.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_52c.c	2025-05-05 11:26:01.739323085 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__twoIntsStruct_calloc_52c_badSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__twoIntsStruct_calloc_52c_goodG2BSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_calloc_52c_goodB2GSink(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_53d.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_53d.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_53d.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_53d.c	2025-05-05 11:26:01.797324350 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__twoIntsStruct_calloc_53d_badSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__twoIntsStruct_calloc_53d_goodG2BSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_calloc_53d_goodB2GSink(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_54e.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_54e.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_54e.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_54e.c	2025-05-05 11:26:01.771323783 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__twoIntsStruct_calloc_54e_badSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__twoIntsStruct_calloc_54e_goodG2BSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_calloc_54e_goodB2GSink(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_61a.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_61a.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_61a.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_61a.c	2025-05-05 11:26:01.751323347 +0800
@@ -29,7 +29,7 @@
     twoIntsStruct * data;
     data = NULL;
     data = CWE401_Memory_Leak__twoIntsStruct_calloc_61b_badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
     twoIntsStruct * data;
     data = NULL;
     data = CWE401_Memory_Leak__twoIntsStruct_calloc_61b_goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -58,7 +58,7 @@
     data = NULL;
     data = CWE401_Memory_Leak__twoIntsStruct_calloc_61b_goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void CWE401_Memory_Leak__twoIntsStruct_calloc_61_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_62a.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_62a.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_62a.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_62a.cpp	2025-05-05 11:26:01.734322976 +0800
@@ -32,7 +32,7 @@
     twoIntsStruct * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -48,7 +48,7 @@
     twoIntsStruct * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_63b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_63b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_63b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_63b.c	2025-05-05 11:26:01.795324307 +0800
@@ -24,7 +24,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_calloc_63b_badSink(twoIntsStruct * * dataPtr)
 {
     twoIntsStruct * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -36,7 +36,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_calloc_63b_goodG2BSink(twoIntsStruct * * dataPtr)
 {
     twoIntsStruct * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 {
     twoIntsStruct * data = *dataPtr;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_64b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_64b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_64b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_64b.c	2025-05-05 11:26:01.745323216 +0800
@@ -27,7 +27,7 @@
     twoIntsStruct * * dataPtr = (twoIntsStruct * *)dataVoidPtr;
     /* dereference dataPtr into data */
     twoIntsStruct * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
     twoIntsStruct * * dataPtr = (twoIntsStruct * *)dataVoidPtr;
     /* dereference dataPtr into data */
     twoIntsStruct * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
     /* dereference dataPtr into data */
     twoIntsStruct * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_65b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_65b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_65b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_65b.c	2025-05-05 11:26:01.777323914 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__twoIntsStruct_calloc_65b_badSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__twoIntsStruct_calloc_65b_goodG2BSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_calloc_65b_goodB2GSink(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_66b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_66b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_66b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_66b.c	2025-05-05 11:26:01.802324460 +0800
@@ -25,7 +25,7 @@
 {
     /* copy data out of dataArray */
     twoIntsStruct * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -37,7 +37,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_calloc_66b_goodG2BSink(twoIntsStruct * dataArray[])
 {
     twoIntsStruct * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 {
     twoIntsStruct * data = dataArray[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_67b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_67b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_67b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_67b.c	2025-05-05 11:26:01.738323063 +0800
@@ -29,7 +29,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_calloc_67b_badSink(CWE401_Memory_Leak__twoIntsStruct_calloc_67_structType myStruct)
 {
     twoIntsStruct * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_calloc_67b_goodG2BSink(CWE401_Memory_Leak__twoIntsStruct_calloc_67_structType myStruct)
 {
     twoIntsStruct * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     twoIntsStruct * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_68b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_68b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_68b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_68b.c	2025-05-05 11:26:01.787324132 +0800
@@ -28,7 +28,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_calloc_68b_badSink()
 {
     twoIntsStruct * data = CWE401_Memory_Leak__twoIntsStruct_calloc_68_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -40,7 +40,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_calloc_68b_goodG2BSink()
 {
     twoIntsStruct * data = CWE401_Memory_Leak__twoIntsStruct_calloc_68_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
 {
     twoIntsStruct * data = CWE401_Memory_Leak__twoIntsStruct_calloc_68_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_72b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_72b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_72b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_72b.cpp	2025-05-05 11:26:01.767323696 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataVector */
     twoIntsStruct * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(vector<twoIntsStruct *> dataVector)
 {
     twoIntsStruct * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     twoIntsStruct * data = dataVector[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_73b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_73b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_73b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_73b.cpp	2025-05-05 11:26:01.755323434 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataList */
     twoIntsStruct * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(list<twoIntsStruct *> dataList)
 {
     twoIntsStruct * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     twoIntsStruct * data = dataList.back();
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_74b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_74b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_74b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_74b.cpp	2025-05-05 11:26:01.785324089 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataMap */
     twoIntsStruct * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(map<int, twoIntsStruct *> dataMap)
 {
     twoIntsStruct * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     twoIntsStruct * data = dataMap[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_81_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_81_bad.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_81_bad.cpp	2025-05-05 11:26:01.794324285 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__twoIntsStruct_calloc_81_bad::action(twoIntsStruct * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_81_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_81_goodB2G.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_81_goodB2G.cpp	2025-05-05 11:26:01.770323761 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_calloc_81_goodB2G::action(twoIntsStruct * data) const
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_81_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_81_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_81_goodG2B.cpp	2025-05-05 11:26:01.786324110 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__twoIntsStruct_calloc_81_goodG2B::action(twoIntsStruct * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_82_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_82_bad.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_82_bad.cpp	2025-05-05 11:26:01.734322976 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__twoIntsStruct_calloc_82_bad::action(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_82_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_82_goodB2G.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_82_goodB2G.cpp	2025-05-05 11:26:01.754323412 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_calloc_82_goodB2G::action(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_82_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_82_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_82_goodG2B.cpp	2025-05-05 11:26:01.777323914 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__twoIntsStruct_calloc_82_goodG2B::action(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_83_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_83_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_83_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_83_bad.cpp	2025-05-05 11:26:01.796324329 +0800
@@ -35,7 +35,7 @@
 
 CWE401_Memory_Leak__twoIntsStruct_calloc_83_bad::~CWE401_Memory_Leak__twoIntsStruct_calloc_83_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_83_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_83_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_83_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_83_goodB2G.cpp	2025-05-05 11:26:01.799324394 +0800
@@ -36,7 +36,7 @@
 CWE401_Memory_Leak__twoIntsStruct_calloc_83_goodB2G::~CWE401_Memory_Leak__twoIntsStruct_calloc_83_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_83_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_83_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_83_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_83_goodG2B.cpp	2025-05-05 11:26:01.789324176 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__twoIntsStruct_calloc_83_goodG2B::~CWE401_Memory_Leak__twoIntsStruct_calloc_83_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_84_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_84_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_84_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_84_bad.cpp	2025-05-05 11:26:01.734322976 +0800
@@ -35,7 +35,7 @@
 
 CWE401_Memory_Leak__twoIntsStruct_calloc_84_bad::~CWE401_Memory_Leak__twoIntsStruct_calloc_84_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_84_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_84_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_84_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_84_goodB2G.cpp	2025-05-05 11:26:01.776323892 +0800
@@ -36,7 +36,7 @@
 CWE401_Memory_Leak__twoIntsStruct_calloc_84_goodB2G::~CWE401_Memory_Leak__twoIntsStruct_calloc_84_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_84_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_84_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_84_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_84_goodG2B.cpp	2025-05-05 11:26:01.756323456 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__twoIntsStruct_calloc_84_goodG2B::~CWE401_Memory_Leak__twoIntsStruct_calloc_84_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_01.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_01.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_01.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_01.c	2025-05-05 11:26:01.794324285 +0800
@@ -32,7 +32,7 @@
     data[0].intOne = 0;
     data[0].intTwo = 0;
     printStructLine(&data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
     data[0].intOne = 0;
     data[0].intTwo = 0;
     printStructLine(&data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -68,7 +68,7 @@
     data[0].intTwo = 0;
     printStructLine(&data[0]);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void CWE401_Memory_Leak__twoIntsStruct_malloc_01_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_02.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_02.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_02.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_02.c	2025-05-05 11:26:01.782324023 +0800
@@ -37,7 +37,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_03.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_03.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_03.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_03.c	2025-05-05 11:26:01.785324089 +0800
@@ -37,7 +37,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_04.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_04.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_04.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_04.c	2025-05-05 11:26:01.792324241 +0800
@@ -43,7 +43,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -97,7 +97,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -122,7 +122,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -143,7 +143,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_05.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_05.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_05.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_05.c	2025-05-05 11:26:01.792324241 +0800
@@ -43,7 +43,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -97,7 +97,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -122,7 +122,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -143,7 +143,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_06.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_06.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_06.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_06.c	2025-05-05 11:26:01.775323870 +0800
@@ -42,7 +42,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -74,7 +74,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -96,7 +96,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -121,7 +121,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -142,7 +142,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_07.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_07.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_07.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_07.c	2025-05-05 11:26:01.761323565 +0800
@@ -42,7 +42,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -74,7 +74,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -96,7 +96,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -121,7 +121,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -142,7 +142,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_08.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_08.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_08.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_08.c	2025-05-05 11:26:01.765323652 +0800
@@ -50,7 +50,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -82,7 +82,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -104,7 +104,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -129,7 +129,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -150,7 +150,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_09.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_09.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_09.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_09.c	2025-05-05 11:26:01.774323849 +0800
@@ -37,7 +37,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_10.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_10.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_10.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_10.c	2025-05-05 11:26:01.753323391 +0800
@@ -37,7 +37,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_11.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_11.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_11.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_11.c	2025-05-05 11:26:01.748323281 +0800
@@ -37,7 +37,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_12.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_12.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_12.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_12.c	2025-05-05 11:26:01.743323172 +0800
@@ -46,13 +46,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -90,12 +90,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -126,12 +126,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_13.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_13.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_13.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_13.c	2025-05-05 11:26:01.760323543 +0800
@@ -37,7 +37,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_14.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_14.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_14.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_14.c	2025-05-05 11:26:01.759323521 +0800
@@ -37,7 +37,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_15.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_15.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_15.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_15.c	2025-05-05 11:26:01.789324176 +0800
@@ -44,7 +44,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -87,7 +87,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
         break;
     }
 }
@@ -117,7 +117,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -149,7 +149,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -182,7 +182,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_16.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_16.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_16.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_16.c	2025-05-05 11:26:01.736323020 +0800
@@ -38,7 +38,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -67,7 +67,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
         break;
     }
 }
@@ -89,7 +89,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_17.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_17.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_17.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_17.c	2025-05-05 11:26:01.769323739 +0800
@@ -38,7 +38,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -87,7 +87,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_18.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_18.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_18.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_18.c	2025-05-05 11:26:01.797324350 +0800
@@ -36,7 +36,7 @@
     printStructLine(&data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -79,7 +79,7 @@
     printStructLine(&data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_21.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_21.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_21.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_21.c	2025-05-05 11:26:01.798324372 +0800
@@ -28,7 +28,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -68,7 +68,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -93,7 +93,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -117,7 +117,7 @@
 {
     if(goodG2BStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_22b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_22b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_22b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_22b.c	2025-05-05 11:26:01.778323936 +0800
@@ -28,7 +28,7 @@
 {
     if(CWE401_Memory_Leak__twoIntsStruct_malloc_22_badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -53,7 +53,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -63,7 +63,7 @@
     if(CWE401_Memory_Leak__twoIntsStruct_malloc_22_goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -72,7 +72,7 @@
 {
     if(CWE401_Memory_Leak__twoIntsStruct_malloc_22_goodG2BGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_31.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_31.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_31.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_31.c	2025-05-05 11:26:01.790324198 +0800
@@ -35,7 +35,7 @@
     {
         twoIntsStruct * dataCopy = data;
         twoIntsStruct * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -58,7 +58,7 @@
     {
         twoIntsStruct * dataCopy = data;
         twoIntsStruct * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -79,7 +79,7 @@
         twoIntsStruct * dataCopy = data;
         twoIntsStruct * data = dataCopy;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_32.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_32.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_32.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_32.c	2025-05-05 11:26:01.779323958 +0800
@@ -40,7 +40,7 @@
     }
     {
         twoIntsStruct * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -68,7 +68,7 @@
     }
     {
         twoIntsStruct * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -94,7 +94,7 @@
     {
         twoIntsStruct * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_33.cpp	2025-05-05 11:26:01.752323368 +0800
@@ -38,7 +38,7 @@
     printStructLine(&data[0]);
     {
         twoIntsStruct * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -61,7 +61,7 @@
     printStructLine(&data[0]);
     {
         twoIntsStruct * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -82,7 +82,7 @@
     {
         twoIntsStruct * data = dataRef;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_34.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_34.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_34.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_34.c	2025-05-05 11:26:01.757323478 +0800
@@ -42,7 +42,7 @@
     myUnion.unionFirst = data;
     {
         twoIntsStruct * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     myUnion.unionFirst = data;
     {
         twoIntsStruct * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -88,7 +88,7 @@
     {
         twoIntsStruct * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_41.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_41.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_41.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_41.c	2025-05-05 11:26:01.789324176 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -48,7 +48,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 static void goodG2BSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -69,7 +69,7 @@
 static void goodB2GSink(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_42.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_42.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_42.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_42.c	2025-05-05 11:26:01.786324110 +0800
@@ -38,7 +38,7 @@
     twoIntsStruct * data;
     data = NULL;
     data = badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -63,7 +63,7 @@
     twoIntsStruct * data;
     data = NULL;
     data = goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -86,7 +86,7 @@
     data = NULL;
     data = goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void CWE401_Memory_Leak__twoIntsStruct_malloc_42_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_43.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_43.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_43.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_43.cpp	2025-05-05 11:26:01.792324241 +0800
@@ -40,7 +40,7 @@
     twoIntsStruct * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -64,7 +64,7 @@
     twoIntsStruct * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -86,7 +86,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_44.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_44.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_44.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_44.c	2025-05-05 11:26:01.781324001 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -73,7 +73,7 @@
 static void goodB2GSink(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_45.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_45.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_45.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_45.c	2025-05-05 11:26:01.765323652 +0800
@@ -28,7 +28,7 @@
 static void badSink()
 {
     twoIntsStruct * data = CWE401_Memory_Leak__twoIntsStruct_malloc_45_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -55,7 +55,7 @@
 static void goodG2BSink()
 {
     twoIntsStruct * data = CWE401_Memory_Leak__twoIntsStruct_malloc_45_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -78,7 +78,7 @@
 {
     twoIntsStruct * data = CWE401_Memory_Leak__twoIntsStruct_malloc_45_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_51b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_51b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_51b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_51b.c	2025-05-05 11:26:01.768323718 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__twoIntsStruct_malloc_51b_badSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__twoIntsStruct_malloc_51b_goodG2BSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_malloc_51b_goodB2GSink(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_52c.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_52c.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_52c.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_52c.c	2025-05-05 11:26:01.739323085 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__twoIntsStruct_malloc_52c_badSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__twoIntsStruct_malloc_52c_goodG2BSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_malloc_52c_goodB2GSink(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_53d.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_53d.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_53d.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_53d.c	2025-05-05 11:26:01.763323609 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__twoIntsStruct_malloc_53d_badSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__twoIntsStruct_malloc_53d_goodG2BSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_malloc_53d_goodB2GSink(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_54e.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_54e.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_54e.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_54e.c	2025-05-05 11:26:01.796324329 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__twoIntsStruct_malloc_54e_badSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__twoIntsStruct_malloc_54e_goodG2BSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_malloc_54e_goodB2GSink(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_61a.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_61a.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_61a.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_61a.c	2025-05-05 11:26:01.763323609 +0800
@@ -29,7 +29,7 @@
     twoIntsStruct * data;
     data = NULL;
     data = CWE401_Memory_Leak__twoIntsStruct_malloc_61b_badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
     twoIntsStruct * data;
     data = NULL;
     data = CWE401_Memory_Leak__twoIntsStruct_malloc_61b_goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -58,7 +58,7 @@
     data = NULL;
     data = CWE401_Memory_Leak__twoIntsStruct_malloc_61b_goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void CWE401_Memory_Leak__twoIntsStruct_malloc_61_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_62a.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_62a.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_62a.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_62a.cpp	2025-05-05 11:26:01.835325179 +0800
@@ -32,7 +32,7 @@
     twoIntsStruct * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -48,7 +48,7 @@
     twoIntsStruct * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_63b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_63b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_63b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_63b.c	2025-05-05 11:26:01.766323674 +0800
@@ -24,7 +24,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_malloc_63b_badSink(twoIntsStruct * * dataPtr)
 {
     twoIntsStruct * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -36,7 +36,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_malloc_63b_goodG2BSink(twoIntsStruct * * dataPtr)
 {
     twoIntsStruct * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 {
     twoIntsStruct * data = *dataPtr;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_64b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_64b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_64b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_64b.c	2025-05-05 11:26:01.782324023 +0800
@@ -27,7 +27,7 @@
     twoIntsStruct * * dataPtr = (twoIntsStruct * *)dataVoidPtr;
     /* dereference dataPtr into data */
     twoIntsStruct * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
     twoIntsStruct * * dataPtr = (twoIntsStruct * *)dataVoidPtr;
     /* dereference dataPtr into data */
     twoIntsStruct * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
     /* dereference dataPtr into data */
     twoIntsStruct * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_65b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_65b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_65b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_65b.c	2025-05-05 11:26:01.796324329 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__twoIntsStruct_malloc_65b_badSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__twoIntsStruct_malloc_65b_goodG2BSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_malloc_65b_goodB2GSink(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_66b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_66b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_66b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_66b.c	2025-05-05 11:26:01.781324001 +0800
@@ -25,7 +25,7 @@
 {
     /* copy data out of dataArray */
     twoIntsStruct * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -37,7 +37,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_malloc_66b_goodG2BSink(twoIntsStruct * dataArray[])
 {
     twoIntsStruct * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 {
     twoIntsStruct * data = dataArray[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_67b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_67b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_67b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_67b.c	2025-05-05 11:26:01.756323456 +0800
@@ -29,7 +29,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_malloc_67b_badSink(CWE401_Memory_Leak__twoIntsStruct_malloc_67_structType myStruct)
 {
     twoIntsStruct * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_malloc_67b_goodG2BSink(CWE401_Memory_Leak__twoIntsStruct_malloc_67_structType myStruct)
 {
     twoIntsStruct * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     twoIntsStruct * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_68b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_68b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_68b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_68b.c	2025-05-05 11:26:01.766323674 +0800
@@ -28,7 +28,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_malloc_68b_badSink()
 {
     twoIntsStruct * data = CWE401_Memory_Leak__twoIntsStruct_malloc_68_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -40,7 +40,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_malloc_68b_goodG2BSink()
 {
     twoIntsStruct * data = CWE401_Memory_Leak__twoIntsStruct_malloc_68_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
 {
     twoIntsStruct * data = CWE401_Memory_Leak__twoIntsStruct_malloc_68_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_72b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_72b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_72b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_72b.cpp	2025-05-05 11:26:01.761323565 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataVector */
     twoIntsStruct * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(vector<twoIntsStruct *> dataVector)
 {
     twoIntsStruct * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     twoIntsStruct * data = dataVector[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_73b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_73b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_73b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_73b.cpp	2025-05-05 11:26:01.794324285 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataList */
     twoIntsStruct * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(list<twoIntsStruct *> dataList)
 {
     twoIntsStruct * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     twoIntsStruct * data = dataList.back();
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_74b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_74b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_74b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_74b.cpp	2025-05-05 11:26:01.735322998 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataMap */
     twoIntsStruct * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(map<int, twoIntsStruct *> dataMap)
 {
     twoIntsStruct * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     twoIntsStruct * data = dataMap[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_81_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_81_bad.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_81_bad.cpp	2025-05-05 11:26:01.797324350 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__twoIntsStruct_malloc_81_bad::action(twoIntsStruct * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_81_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_81_goodB2G.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_81_goodB2G.cpp	2025-05-05 11:26:01.787324132 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_malloc_81_goodB2G::action(twoIntsStruct * data) const
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_81_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_81_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_81_goodG2B.cpp	2025-05-05 11:26:01.744323194 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__twoIntsStruct_malloc_81_goodG2B::action(twoIntsStruct * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_82_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_82_bad.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_82_bad.cpp	2025-05-05 11:26:01.797324350 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__twoIntsStruct_malloc_82_bad::action(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_82_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_82_goodB2G.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_82_goodB2G.cpp	2025-05-05 11:26:01.774323849 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_malloc_82_goodB2G::action(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_82_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_82_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_82_goodG2B.cpp	2025-05-05 11:26:01.749323303 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__twoIntsStruct_malloc_82_goodG2B::action(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_83_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_83_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_83_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_83_bad.cpp	2025-05-05 11:26:01.747323260 +0800
@@ -35,7 +35,7 @@
 
 CWE401_Memory_Leak__twoIntsStruct_malloc_83_bad::~CWE401_Memory_Leak__twoIntsStruct_malloc_83_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_83_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_83_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_83_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_83_goodB2G.cpp	2025-05-05 11:26:01.791324220 +0800
@@ -36,7 +36,7 @@
 CWE401_Memory_Leak__twoIntsStruct_malloc_83_goodB2G::~CWE401_Memory_Leak__twoIntsStruct_malloc_83_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_83_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_83_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_83_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_83_goodG2B.cpp	2025-05-05 11:26:01.739323085 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__twoIntsStruct_malloc_83_goodG2B::~CWE401_Memory_Leak__twoIntsStruct_malloc_83_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_84_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_84_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_84_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_84_bad.cpp	2025-05-05 11:26:01.800324416 +0800
@@ -35,7 +35,7 @@
 
 CWE401_Memory_Leak__twoIntsStruct_malloc_84_bad::~CWE401_Memory_Leak__twoIntsStruct_malloc_84_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_84_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_84_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_84_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_84_goodB2G.cpp	2025-05-05 11:26:01.784324067 +0800
@@ -36,7 +36,7 @@
 CWE401_Memory_Leak__twoIntsStruct_malloc_84_goodB2G::~CWE401_Memory_Leak__twoIntsStruct_malloc_84_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_84_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_84_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_84_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_malloc_84_goodG2B.cpp	2025-05-05 11:26:01.761323565 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__twoIntsStruct_malloc_84_goodG2B::~CWE401_Memory_Leak__twoIntsStruct_malloc_84_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_01.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_01.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_01.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_01.c	2025-05-05 11:26:01.740323107 +0800
@@ -32,7 +32,7 @@
     data[0].intOne = 0;
     data[0].intTwo = 0;
     printStructLine(&data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
     data[0].intOne = 0;
     data[0].intTwo = 0;
     printStructLine(&data[0]);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -68,7 +68,7 @@
     data[0].intTwo = 0;
     printStructLine(&data[0]);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void CWE401_Memory_Leak__twoIntsStruct_realloc_01_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_02.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_02.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_02.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_02.c	2025-05-05 11:26:01.739323085 +0800
@@ -37,7 +37,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_03.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_03.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_03.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_03.c	2025-05-05 11:26:01.771323783 +0800
@@ -37,7 +37,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_04.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_04.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_04.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_04.c	2025-05-05 11:26:01.793324263 +0800
@@ -43,7 +43,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -97,7 +97,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -122,7 +122,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -143,7 +143,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_05.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_05.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_05.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_05.c	2025-05-05 11:26:01.791324220 +0800
@@ -43,7 +43,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -75,7 +75,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -97,7 +97,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -122,7 +122,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -143,7 +143,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_06.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_06.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_06.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_06.c	2025-05-05 11:26:01.740323107 +0800
@@ -42,7 +42,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -74,7 +74,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -96,7 +96,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -121,7 +121,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -142,7 +142,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_07.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_07.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_07.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_07.c	2025-05-05 11:26:01.770323761 +0800
@@ -42,7 +42,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -74,7 +74,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -96,7 +96,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -121,7 +121,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -142,7 +142,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_08.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_08.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_08.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_08.c	2025-05-05 11:26:01.773323827 +0800
@@ -50,7 +50,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -82,7 +82,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -104,7 +104,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -129,7 +129,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -150,7 +150,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_09.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_09.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_09.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_09.c	2025-05-05 11:26:01.784324067 +0800
@@ -37,7 +37,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_10.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_10.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_10.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_10.c	2025-05-05 11:26:01.753323391 +0800
@@ -37,7 +37,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_11.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_11.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_11.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_11.c	2025-05-05 11:26:01.801324438 +0800
@@ -37,7 +37,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_12.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_12.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_12.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_12.c	2025-05-05 11:26:01.741323129 +0800
@@ -46,13 +46,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -90,12 +90,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -126,12 +126,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_13.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_13.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_13.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_13.c	2025-05-05 11:26:01.735322998 +0800
@@ -37,7 +37,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_14.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_14.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_14.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_14.c	2025-05-05 11:26:01.740323107 +0800
@@ -37,7 +37,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -69,7 +69,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -91,7 +91,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -116,7 +116,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_15.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_15.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_15.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_15.c	2025-05-05 11:26:01.801324438 +0800
@@ -44,7 +44,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -87,7 +87,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
         break;
     }
 }
@@ -117,7 +117,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -149,7 +149,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -182,7 +182,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_16.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_16.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_16.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_16.c	2025-05-05 11:26:01.754323412 +0800
@@ -38,7 +38,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -67,7 +67,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
         break;
     }
 }
@@ -89,7 +89,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_17.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_17.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_17.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_17.c	2025-05-05 11:26:01.747323260 +0800
@@ -38,7 +38,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -87,7 +87,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_18.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_18.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_18.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_18.c	2025-05-05 11:26:01.777323914 +0800
@@ -36,7 +36,7 @@
     printStructLine(&data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -79,7 +79,7 @@
     printStructLine(&data[0]);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_21.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_21.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_21.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_21.c	2025-05-05 11:26:01.788324154 +0800
@@ -28,7 +28,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -68,7 +68,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -93,7 +93,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -117,7 +117,7 @@
 {
     if(goodG2BStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_22b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_22b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_22b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_22b.c	2025-05-05 11:26:01.835325179 +0800
@@ -28,7 +28,7 @@
 {
     if(CWE401_Memory_Leak__twoIntsStruct_realloc_22_badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -53,7 +53,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -63,7 +63,7 @@
     if(CWE401_Memory_Leak__twoIntsStruct_realloc_22_goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
@@ -72,7 +72,7 @@
 {
     if(CWE401_Memory_Leak__twoIntsStruct_realloc_22_goodG2BGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_31.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_31.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_31.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_31.c	2025-05-05 11:26:01.746323238 +0800
@@ -35,7 +35,7 @@
     {
         twoIntsStruct * dataCopy = data;
         twoIntsStruct * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -58,7 +58,7 @@
     {
         twoIntsStruct * dataCopy = data;
         twoIntsStruct * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -79,7 +79,7 @@
         twoIntsStruct * dataCopy = data;
         twoIntsStruct * data = dataCopy;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_32.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_32.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_32.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_32.c	2025-05-05 11:26:01.776323892 +0800
@@ -40,7 +40,7 @@
     }
     {
         twoIntsStruct * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -68,7 +68,7 @@
     }
     {
         twoIntsStruct * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -94,7 +94,7 @@
     {
         twoIntsStruct * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_33.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_33.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_33.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_33.cpp	2025-05-05 11:26:01.761323565 +0800
@@ -38,7 +38,7 @@
     printStructLine(&data[0]);
     {
         twoIntsStruct * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -61,7 +61,7 @@
     printStructLine(&data[0]);
     {
         twoIntsStruct * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -82,7 +82,7 @@
     {
         twoIntsStruct * data = dataRef;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_34.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_34.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_34.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_34.c	2025-05-05 11:26:01.760323543 +0800
@@ -42,7 +42,7 @@
     myUnion.unionFirst = data;
     {
         twoIntsStruct * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     myUnion.unionFirst = data;
     {
         twoIntsStruct * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_struct(data, no_free_struct);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -88,7 +88,7 @@
     {
         twoIntsStruct * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_struct(data, has_free_struct);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_41.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_41.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_41.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_41.c	2025-05-05 11:26:01.779323958 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -48,7 +48,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 static void goodG2BSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -69,7 +69,7 @@
 static void goodB2GSink(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_42.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_42.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_42.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_42.c	2025-05-05 11:26:01.779323958 +0800
@@ -38,7 +38,7 @@
     twoIntsStruct * data;
     data = NULL;
     data = badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -63,7 +63,7 @@
     twoIntsStruct * data;
     data = NULL;
     data = goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -86,7 +86,7 @@
     data = NULL;
     data = goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void CWE401_Memory_Leak__twoIntsStruct_realloc_42_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_43.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_43.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_43.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_43.cpp	2025-05-05 11:26:01.753323391 +0800
@@ -40,7 +40,7 @@
     twoIntsStruct * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -64,7 +64,7 @@
     twoIntsStruct * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -86,7 +86,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_44.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_44.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_44.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_44.c	2025-05-05 11:26:01.735322998 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -51,7 +51,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -73,7 +73,7 @@
 static void goodB2GSink(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_45.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_45.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_45.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_45.c	2025-05-05 11:26:01.772323805 +0800
@@ -28,7 +28,7 @@
 static void badSink()
 {
     twoIntsStruct * data = CWE401_Memory_Leak__twoIntsStruct_realloc_45_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -55,7 +55,7 @@
 static void goodG2BSink()
 {
     twoIntsStruct * data = CWE401_Memory_Leak__twoIntsStruct_realloc_45_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -78,7 +78,7 @@
 {
     twoIntsStruct * data = CWE401_Memory_Leak__twoIntsStruct_realloc_45_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_51b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_51b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_51b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_51b.c	2025-05-05 11:26:01.755323434 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__twoIntsStruct_realloc_51b_badSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__twoIntsStruct_realloc_51b_goodG2BSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_realloc_51b_goodB2GSink(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_52c.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_52c.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_52c.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_52c.c	2025-05-05 11:26:01.760323543 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__twoIntsStruct_realloc_52c_badSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__twoIntsStruct_realloc_52c_goodG2BSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_realloc_52c_goodB2GSink(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_53d.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_53d.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_53d.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_53d.c	2025-05-05 11:26:01.737323041 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__twoIntsStruct_realloc_53d_badSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__twoIntsStruct_realloc_53d_goodG2BSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_realloc_53d_goodB2GSink(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_54e.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_54e.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_54e.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_54e.c	2025-05-05 11:26:01.799324394 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__twoIntsStruct_realloc_54e_badSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__twoIntsStruct_realloc_54e_goodG2BSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_realloc_54e_goodB2GSink(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_61a.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_61a.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_61a.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_61a.c	2025-05-05 11:26:01.790324198 +0800
@@ -29,7 +29,7 @@
     twoIntsStruct * data;
     data = NULL;
     data = CWE401_Memory_Leak__twoIntsStruct_realloc_61b_badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
     twoIntsStruct * data;
     data = NULL;
     data = CWE401_Memory_Leak__twoIntsStruct_realloc_61b_goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -58,7 +58,7 @@
     data = NULL;
     data = CWE401_Memory_Leak__twoIntsStruct_realloc_61b_goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void CWE401_Memory_Leak__twoIntsStruct_realloc_61_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_62a.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_62a.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_62a.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_62a.cpp	2025-05-05 11:26:01.798324372 +0800
@@ -32,7 +32,7 @@
     twoIntsStruct * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -48,7 +48,7 @@
     twoIntsStruct * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_63b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_63b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_63b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_63b.c	2025-05-05 11:26:01.750323325 +0800
@@ -24,7 +24,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_realloc_63b_badSink(twoIntsStruct * * dataPtr)
 {
     twoIntsStruct * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -36,7 +36,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_realloc_63b_goodG2BSink(twoIntsStruct * * dataPtr)
 {
     twoIntsStruct * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 {
     twoIntsStruct * data = *dataPtr;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_64b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_64b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_64b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_64b.c	2025-05-05 11:26:01.797324350 +0800
@@ -27,7 +27,7 @@
     twoIntsStruct * * dataPtr = (twoIntsStruct * *)dataVoidPtr;
     /* dereference dataPtr into data */
     twoIntsStruct * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
     twoIntsStruct * * dataPtr = (twoIntsStruct * *)dataVoidPtr;
     /* dereference dataPtr into data */
     twoIntsStruct * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
     /* dereference dataPtr into data */
     twoIntsStruct * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_65b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_65b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_65b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_65b.c	2025-05-05 11:26:01.794324285 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__twoIntsStruct_realloc_65b_badSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__twoIntsStruct_realloc_65b_goodG2BSink(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_realloc_65b_goodB2GSink(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_66b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_66b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_66b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_66b.c	2025-05-05 11:26:01.741323129 +0800
@@ -25,7 +25,7 @@
 {
     /* copy data out of dataArray */
     twoIntsStruct * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -37,7 +37,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_realloc_66b_goodG2BSink(twoIntsStruct * dataArray[])
 {
     twoIntsStruct * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 {
     twoIntsStruct * data = dataArray[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_67b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_67b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_67b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_67b.c	2025-05-05 11:26:01.788324154 +0800
@@ -29,7 +29,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_realloc_67b_badSink(CWE401_Memory_Leak__twoIntsStruct_realloc_67_structType myStruct)
 {
     twoIntsStruct * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_realloc_67b_goodG2BSink(CWE401_Memory_Leak__twoIntsStruct_realloc_67_structType myStruct)
 {
     twoIntsStruct * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     twoIntsStruct * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_68b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_68b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_68b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_68b.c	2025-05-05 11:26:01.781324001 +0800
@@ -28,7 +28,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_realloc_68b_badSink()
 {
     twoIntsStruct * data = CWE401_Memory_Leak__twoIntsStruct_realloc_68_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -40,7 +40,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_realloc_68b_goodG2BSink()
 {
     twoIntsStruct * data = CWE401_Memory_Leak__twoIntsStruct_realloc_68_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
 {
     twoIntsStruct * data = CWE401_Memory_Leak__twoIntsStruct_realloc_68_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_72b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_72b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_72b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_72b.cpp	2025-05-05 11:26:01.781324001 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataVector */
     twoIntsStruct * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(vector<twoIntsStruct *> dataVector)
 {
     twoIntsStruct * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     twoIntsStruct * data = dataVector[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_73b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_73b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_73b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_73b.cpp	2025-05-05 11:26:01.756323456 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataList */
     twoIntsStruct * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(list<twoIntsStruct *> dataList)
 {
     twoIntsStruct * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     twoIntsStruct * data = dataList.back();
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_74b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_74b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_74b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_74b.cpp	2025-05-05 11:26:01.778323936 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataMap */
     twoIntsStruct * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(map<int, twoIntsStruct *> dataMap)
 {
     twoIntsStruct * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     twoIntsStruct * data = dataMap[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_81_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_81_bad.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_81_bad.cpp	2025-05-05 11:26:01.780323979 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__twoIntsStruct_realloc_81_bad::action(twoIntsStruct * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_81_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_81_goodB2G.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_81_goodB2G.cpp	2025-05-05 11:26:01.742323151 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_realloc_81_goodB2G::action(twoIntsStruct * data) const
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_81_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_81_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_81_goodG2B.cpp	2025-05-05 11:26:01.759323521 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__twoIntsStruct_realloc_81_goodG2B::action(twoIntsStruct * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_82_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_82_bad.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_82_bad.cpp	2025-05-05 11:26:01.774323849 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__twoIntsStruct_realloc_82_bad::action(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_82_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_82_goodB2G.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_82_goodB2G.cpp	2025-05-05 11:26:01.796324329 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__twoIntsStruct_realloc_82_goodB2G::action(twoIntsStruct * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_82_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_82_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_82_goodG2B.cpp	2025-05-05 11:26:01.772323805 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__twoIntsStruct_realloc_82_goodG2B::action(twoIntsStruct * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_83_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_83_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_83_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_83_bad.cpp	2025-05-05 11:26:01.747323260 +0800
@@ -35,7 +35,7 @@
 
 CWE401_Memory_Leak__twoIntsStruct_realloc_83_bad::~CWE401_Memory_Leak__twoIntsStruct_realloc_83_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_83_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_83_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_83_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_83_goodB2G.cpp	2025-05-05 11:26:01.769323739 +0800
@@ -36,7 +36,7 @@
 CWE401_Memory_Leak__twoIntsStruct_realloc_83_goodB2G::~CWE401_Memory_Leak__twoIntsStruct_realloc_83_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_83_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_83_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_83_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_83_goodG2B.cpp	2025-05-05 11:26:01.738323063 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__twoIntsStruct_realloc_83_goodG2B::~CWE401_Memory_Leak__twoIntsStruct_realloc_83_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_84_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_84_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_84_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_84_bad.cpp	2025-05-05 11:26:01.786324110 +0800
@@ -35,7 +35,7 @@
 
 CWE401_Memory_Leak__twoIntsStruct_realloc_84_bad::~CWE401_Memory_Leak__twoIntsStruct_realloc_84_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_84_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_84_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_84_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_84_goodB2G.cpp	2025-05-05 11:26:01.788324154 +0800
@@ -36,7 +36,7 @@
 CWE401_Memory_Leak__twoIntsStruct_realloc_84_goodB2G::~CWE401_Memory_Leak__twoIntsStruct_realloc_84_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_struct(data, has_free_struct);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_84_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_84_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_84_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_realloc_84_goodG2B.cpp	2025-05-05 11:26:01.738323063 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__twoIntsStruct_realloc_84_goodG2B::~CWE401_Memory_Leak__twoIntsStruct_realloc_84_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_struct(data, no_free_struct);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_01.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_01.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_01.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_01.c	2025-05-05 11:26:01.748323281 +0800
@@ -31,7 +31,7 @@
     /* Initialize and make use of data */
     wcscpy(data, L"A String");
     printWLine(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
     /* Initialize and make use of data */
     wcscpy(data, L"A String");
     printWLine(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -65,7 +65,7 @@
     wcscpy(data, L"A String");
     printWLine(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 void CWE401_Memory_Leak__wchar_t_calloc_01_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_02.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_02.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_02.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_02.c	2025-05-05 11:26:01.775323870 +0800
@@ -36,7 +36,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -88,7 +88,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_03.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_03.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_03.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_03.c	2025-05-05 11:26:01.785324089 +0800
@@ -36,7 +36,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -88,7 +88,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_04.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_04.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_04.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_04.c	2025-05-05 11:26:01.781324001 +0800
@@ -42,7 +42,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -94,7 +94,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -138,7 +138,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_05.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_05.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_05.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_05.c	2025-05-05 11:26:01.736323020 +0800
@@ -42,7 +42,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -94,7 +94,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -138,7 +138,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_06.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_06.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_06.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_06.c	2025-05-05 11:26:01.758323499 +0800
@@ -41,7 +41,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -93,7 +93,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -117,7 +117,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_07.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_07.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_07.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_07.c	2025-05-05 11:26:01.795324307 +0800
@@ -41,7 +41,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -93,7 +93,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -117,7 +117,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_08.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_08.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_08.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_08.c	2025-05-05 11:26:01.736323020 +0800
@@ -49,7 +49,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -101,7 +101,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -125,7 +125,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -145,7 +145,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_09.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_09.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_09.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_09.c	2025-05-05 11:26:01.757323478 +0800
@@ -36,7 +36,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -88,7 +88,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_10.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_10.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_10.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_10.c	2025-05-05 11:26:01.749323303 +0800
@@ -36,7 +36,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_11.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_11.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_11.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_11.c	2025-05-05 11:26:01.744323194 +0800
@@ -36,7 +36,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_12.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_12.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_12.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_12.c	2025-05-05 11:26:01.747323260 +0800
@@ -44,13 +44,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -86,12 +86,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -120,12 +120,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_13.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_13.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_13.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_13.c	2025-05-05 11:26:01.736323020 +0800
@@ -36,7 +36,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -88,7 +88,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_14.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_14.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_14.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_14.c	2025-05-05 11:26:01.797324350 +0800
@@ -36,7 +36,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_15.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_15.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_15.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_15.c	2025-05-05 11:26:01.777323914 +0800
@@ -43,7 +43,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -85,7 +85,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
         break;
     }
 }
@@ -114,7 +114,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -145,7 +145,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -177,7 +177,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_16.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_16.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_16.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_16.c	2025-05-05 11:26:01.792324241 +0800
@@ -37,7 +37,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -65,7 +65,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
         break;
     }
 }
@@ -86,7 +86,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_17.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_17.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_17.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_17.c	2025-05-05 11:26:01.761323565 +0800
@@ -37,7 +37,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -64,7 +64,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -84,7 +84,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_18.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_18.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_18.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_18.c	2025-05-05 11:26:01.746323238 +0800
@@ -35,7 +35,7 @@
     printWLine(data);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -76,7 +76,7 @@
     printWLine(data);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_21.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_21.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_21.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_21.c	2025-05-05 11:26:01.762323587 +0800
@@ -28,7 +28,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -91,7 +91,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -114,7 +114,7 @@
 {
     if(goodG2BStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_22b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_22b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_22b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_22b.c	2025-05-05 11:26:01.767323696 +0800
@@ -28,7 +28,7 @@
 {
     if(CWE401_Memory_Leak__wchar_t_calloc_22_badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -53,7 +53,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -63,7 +63,7 @@
     if(CWE401_Memory_Leak__wchar_t_calloc_22_goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -72,7 +72,7 @@
 {
     if(CWE401_Memory_Leak__wchar_t_calloc_22_goodG2BGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_31.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_31.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_31.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_31.c	2025-05-05 11:26:01.768323718 +0800
@@ -34,7 +34,7 @@
     {
         wchar_t * dataCopy = data;
         wchar_t * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -56,7 +56,7 @@
     {
         wchar_t * dataCopy = data;
         wchar_t * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -76,7 +76,7 @@
         wchar_t * dataCopy = data;
         wchar_t * data = dataCopy;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_32.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_32.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_32.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_32.c	2025-05-05 11:26:01.773323827 +0800
@@ -39,7 +39,7 @@
     }
     {
         wchar_t * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     }
     {
         wchar_t * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -91,7 +91,7 @@
     {
         wchar_t * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_33.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_33.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_33.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_33.cpp	2025-05-05 11:26:01.792324241 +0800
@@ -37,7 +37,7 @@
     printWLine(data);
     {
         wchar_t * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -59,7 +59,7 @@
     printWLine(data);
     {
         wchar_t * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -79,7 +79,7 @@
     {
         wchar_t * data = dataRef;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_34.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_34.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_34.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_34.c	2025-05-05 11:26:01.760323543 +0800
@@ -41,7 +41,7 @@
     myUnion.unionFirst = data;
     {
         wchar_t * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -64,7 +64,7 @@
     myUnion.unionFirst = data;
     {
         wchar_t * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -85,7 +85,7 @@
     {
         wchar_t * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_41.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_41.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_41.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_41.c	2025-05-05 11:26:01.769323739 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 static void goodG2BSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -67,7 +67,7 @@
 static void goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_42.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_42.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_42.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_42.c	2025-05-05 11:26:01.793324263 +0800
@@ -37,7 +37,7 @@
     wchar_t * data;
     data = NULL;
     data = badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     wchar_t * data;
     data = NULL;
     data = goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -83,7 +83,7 @@
     data = NULL;
     data = goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 void CWE401_Memory_Leak__wchar_t_calloc_42_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_43.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_43.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_43.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_43.cpp	2025-05-05 11:26:01.752323368 +0800
@@ -39,7 +39,7 @@
     wchar_t * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -62,7 +62,7 @@
     wchar_t * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -83,7 +83,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_44.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_44.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_44.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_44.c	2025-05-05 11:26:01.801324438 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -71,7 +71,7 @@
 static void goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_45.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_45.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_45.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_45.c	2025-05-05 11:26:01.738323063 +0800
@@ -28,7 +28,7 @@
 static void badSink()
 {
     wchar_t * data = CWE401_Memory_Leak__wchar_t_calloc_45_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 static void goodG2BSink()
 {
     wchar_t * data = CWE401_Memory_Leak__wchar_t_calloc_45_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -76,7 +76,7 @@
 {
     wchar_t * data = CWE401_Memory_Leak__wchar_t_calloc_45_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_51b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_51b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_51b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_51b.c	2025-05-05 11:26:01.796324329 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__wchar_t_calloc_51b_badSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__wchar_t_calloc_51b_goodG2BSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__wchar_t_calloc_51b_goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_52c.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_52c.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_52c.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_52c.c	2025-05-05 11:26:01.760323543 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__wchar_t_calloc_52c_badSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__wchar_t_calloc_52c_goodG2BSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__wchar_t_calloc_52c_goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_53d.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_53d.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_53d.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_53d.c	2025-05-05 11:26:01.773323827 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__wchar_t_calloc_53d_badSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__wchar_t_calloc_53d_goodG2BSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__wchar_t_calloc_53d_goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_54e.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_54e.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_54e.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_54e.c	2025-05-05 11:26:01.767323696 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__wchar_t_calloc_54e_badSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__wchar_t_calloc_54e_goodG2BSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__wchar_t_calloc_54e_goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_61a.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_61a.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_61a.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_61a.c	2025-05-05 11:26:01.758323499 +0800
@@ -29,7 +29,7 @@
     wchar_t * data;
     data = NULL;
     data = CWE401_Memory_Leak__wchar_t_calloc_61b_badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
     wchar_t * data;
     data = NULL;
     data = CWE401_Memory_Leak__wchar_t_calloc_61b_goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -58,7 +58,7 @@
     data = NULL;
     data = CWE401_Memory_Leak__wchar_t_calloc_61b_goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 void CWE401_Memory_Leak__wchar_t_calloc_61_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_62a.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_62a.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_62a.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_62a.cpp	2025-05-05 11:26:01.788324154 +0800
@@ -32,7 +32,7 @@
     wchar_t * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -48,7 +48,7 @@
     wchar_t * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_63b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_63b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_63b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_63b.c	2025-05-05 11:26:01.785324089 +0800
@@ -24,7 +24,7 @@
 void CWE401_Memory_Leak__wchar_t_calloc_63b_badSink(wchar_t * * dataPtr)
 {
     wchar_t * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -36,7 +36,7 @@
 void CWE401_Memory_Leak__wchar_t_calloc_63b_goodG2BSink(wchar_t * * dataPtr)
 {
     wchar_t * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 {
     wchar_t * data = *dataPtr;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_64b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_64b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_64b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_64b.c	2025-05-05 11:26:01.772323805 +0800
@@ -27,7 +27,7 @@
     wchar_t * * dataPtr = (wchar_t * *)dataVoidPtr;
     /* dereference dataPtr into data */
     wchar_t * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
     wchar_t * * dataPtr = (wchar_t * *)dataVoidPtr;
     /* dereference dataPtr into data */
     wchar_t * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
     /* dereference dataPtr into data */
     wchar_t * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_65b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_65b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_65b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_65b.c	2025-05-05 11:26:01.739323085 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__wchar_t_calloc_65b_badSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__wchar_t_calloc_65b_goodG2BSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__wchar_t_calloc_65b_goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_66b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_66b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_66b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_66b.c	2025-05-05 11:26:01.747323260 +0800
@@ -25,7 +25,7 @@
 {
     /* copy data out of dataArray */
     wchar_t * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -37,7 +37,7 @@
 void CWE401_Memory_Leak__wchar_t_calloc_66b_goodG2BSink(wchar_t * dataArray[])
 {
     wchar_t * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 {
     wchar_t * data = dataArray[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_67b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_67b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_67b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_67b.c	2025-05-05 11:26:01.783324045 +0800
@@ -29,7 +29,7 @@
 void CWE401_Memory_Leak__wchar_t_calloc_67b_badSink(CWE401_Memory_Leak__wchar_t_calloc_67_structType myStruct)
 {
     wchar_t * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void CWE401_Memory_Leak__wchar_t_calloc_67b_goodG2BSink(CWE401_Memory_Leak__wchar_t_calloc_67_structType myStruct)
 {
     wchar_t * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     wchar_t * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_68b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_68b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_68b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_68b.c	2025-05-05 11:26:01.734322976 +0800
@@ -28,7 +28,7 @@
 void CWE401_Memory_Leak__wchar_t_calloc_68b_badSink()
 {
     wchar_t * data = CWE401_Memory_Leak__wchar_t_calloc_68_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -40,7 +40,7 @@
 void CWE401_Memory_Leak__wchar_t_calloc_68b_goodG2BSink()
 {
     wchar_t * data = CWE401_Memory_Leak__wchar_t_calloc_68_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
 {
     wchar_t * data = CWE401_Memory_Leak__wchar_t_calloc_68_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_72b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_72b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_72b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_72b.cpp	2025-05-05 11:26:01.771323783 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataVector */
     wchar_t * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(vector<wchar_t *> dataVector)
 {
     wchar_t * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     wchar_t * data = dataVector[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_73b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_73b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_73b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_73b.cpp	2025-05-05 11:26:01.751323347 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataList */
     wchar_t * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(list<wchar_t *> dataList)
 {
     wchar_t * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     wchar_t * data = dataList.back();
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_74b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_74b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_74b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_74b.cpp	2025-05-05 11:26:01.760323543 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataMap */
     wchar_t * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(map<int, wchar_t *> dataMap)
 {
     wchar_t * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     wchar_t * data = dataMap[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_81_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_81_bad.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_81_bad.cpp	2025-05-05 11:26:01.795324307 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__wchar_t_calloc_81_bad::action(wchar_t * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_81_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_81_goodB2G.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_81_goodB2G.cpp	2025-05-05 11:26:01.746323238 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__wchar_t_calloc_81_goodB2G::action(wchar_t * data) const
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_81_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_81_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_81_goodG2B.cpp	2025-05-05 11:26:01.763323609 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__wchar_t_calloc_81_goodG2B::action(wchar_t * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_82_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_82_bad.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_82_bad.cpp	2025-05-05 11:26:01.771323783 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__wchar_t_calloc_82_bad::action(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_82_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_82_goodB2G.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_82_goodB2G.cpp	2025-05-05 11:26:01.762323587 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__wchar_t_calloc_82_goodB2G::action(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_82_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_82_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_82_goodG2B.cpp	2025-05-05 11:26:01.791324220 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__wchar_t_calloc_82_goodG2B::action(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_83_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_83_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_83_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_83_bad.cpp	2025-05-05 11:26:01.781324001 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__wchar_t_calloc_83_bad::~CWE401_Memory_Leak__wchar_t_calloc_83_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_83_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_83_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_83_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_83_goodB2G.cpp	2025-05-05 11:26:01.746323238 +0800
@@ -35,7 +35,7 @@
 CWE401_Memory_Leak__wchar_t_calloc_83_goodB2G::~CWE401_Memory_Leak__wchar_t_calloc_83_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_83_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_83_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_83_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_83_goodG2B.cpp	2025-05-05 11:26:01.790324198 +0800
@@ -33,7 +33,7 @@
 
 CWE401_Memory_Leak__wchar_t_calloc_83_goodG2B::~CWE401_Memory_Leak__wchar_t_calloc_83_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_84_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_84_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_84_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_84_bad.cpp	2025-05-05 11:26:01.766323674 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__wchar_t_calloc_84_bad::~CWE401_Memory_Leak__wchar_t_calloc_84_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_84_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_84_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_84_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_84_goodB2G.cpp	2025-05-05 11:26:01.784324067 +0800
@@ -35,7 +35,7 @@
 CWE401_Memory_Leak__wchar_t_calloc_84_goodB2G::~CWE401_Memory_Leak__wchar_t_calloc_84_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_84_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_84_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_84_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_calloc_84_goodG2B.cpp	2025-05-05 11:26:01.787324132 +0800
@@ -33,7 +33,7 @@
 
 CWE401_Memory_Leak__wchar_t_calloc_84_goodG2B::~CWE401_Memory_Leak__wchar_t_calloc_84_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_01.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_01.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_01.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_01.c	2025-05-05 11:26:01.778323936 +0800
@@ -31,7 +31,7 @@
     /* Initialize and make use of data */
     wcscpy(data, L"A String");
     printWLine(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
     /* Initialize and make use of data */
     wcscpy(data, L"A String");
     printWLine(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -65,7 +65,7 @@
     wcscpy(data, L"A String");
     printWLine(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 void CWE401_Memory_Leak__wchar_t_malloc_01_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_02.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_02.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_02.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_02.c	2025-05-05 11:26:01.762323587 +0800
@@ -36,7 +36,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -88,7 +88,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_03.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_03.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_03.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_03.c	2025-05-05 11:26:01.767323696 +0800
@@ -36,7 +36,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -88,7 +88,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_04.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_04.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_04.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_04.c	2025-05-05 11:26:01.798324372 +0800
@@ -42,7 +42,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -94,7 +94,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -138,7 +138,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_05.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_05.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_05.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_05.c	2025-05-05 11:26:01.834325158 +0800
@@ -42,7 +42,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -94,7 +94,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -138,7 +138,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_06.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_06.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_06.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_06.c	2025-05-05 11:26:01.776323892 +0800
@@ -41,7 +41,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -93,7 +93,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -117,7 +117,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_07.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_07.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_07.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_07.c	2025-05-05 11:26:01.761323565 +0800
@@ -41,7 +41,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -93,7 +93,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -117,7 +117,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_08.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_08.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_08.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_08.c	2025-05-05 11:26:01.738323063 +0800
@@ -49,7 +49,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -101,7 +101,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -125,7 +125,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -145,7 +145,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_09.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_09.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_09.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_09.c	2025-05-05 11:26:01.748323281 +0800
@@ -36,7 +36,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -88,7 +88,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_10.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_10.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_10.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_10.c	2025-05-05 11:26:01.783324045 +0800
@@ -36,7 +36,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_11.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_11.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_11.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_11.c	2025-05-05 11:26:01.782324023 +0800
@@ -36,7 +36,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_12.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_12.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_12.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_12.c	2025-05-05 11:26:01.787324132 +0800
@@ -44,13 +44,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -86,12 +86,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -120,12 +120,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_13.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_13.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_13.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_13.c	2025-05-05 11:26:01.770323761 +0800
@@ -36,7 +36,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -88,7 +88,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_14.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_14.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_14.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_14.c	2025-05-05 11:26:01.755323434 +0800
@@ -36,7 +36,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_15.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_15.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_15.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_15.c	2025-05-05 11:26:01.771323783 +0800
@@ -43,7 +43,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -85,7 +85,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
         break;
     }
 }
@@ -114,7 +114,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -145,7 +145,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -177,7 +177,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_16.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_16.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_16.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_16.c	2025-05-05 11:26:01.790324198 +0800
@@ -37,7 +37,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -65,7 +65,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
         break;
     }
 }
@@ -86,7 +86,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_17.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_17.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_17.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_17.c	2025-05-05 11:26:01.736323020 +0800
@@ -37,7 +37,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -64,7 +64,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -84,7 +84,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_18.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_18.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_18.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_18.c	2025-05-05 11:26:01.780323979 +0800
@@ -35,7 +35,7 @@
     printWLine(data);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -76,7 +76,7 @@
     printWLine(data);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_21.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_21.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_21.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_21.c	2025-05-05 11:26:01.759323521 +0800
@@ -28,7 +28,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -91,7 +91,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -114,7 +114,7 @@
 {
     if(goodG2BStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_22b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_22b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_22b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_22b.c	2025-05-05 11:26:01.770323761 +0800
@@ -28,7 +28,7 @@
 {
     if(CWE401_Memory_Leak__wchar_t_malloc_22_badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -53,7 +53,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -63,7 +63,7 @@
     if(CWE401_Memory_Leak__wchar_t_malloc_22_goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -72,7 +72,7 @@
 {
     if(CWE401_Memory_Leak__wchar_t_malloc_22_goodG2BGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_31.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_31.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_31.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_31.c	2025-05-05 11:26:01.751323347 +0800
@@ -34,7 +34,7 @@
     {
         wchar_t * dataCopy = data;
         wchar_t * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -56,7 +56,7 @@
     {
         wchar_t * dataCopy = data;
         wchar_t * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -76,7 +76,7 @@
         wchar_t * dataCopy = data;
         wchar_t * data = dataCopy;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_32.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_32.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_32.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_32.c	2025-05-05 11:26:01.769323739 +0800
@@ -39,7 +39,7 @@
     }
     {
         wchar_t * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     }
     {
         wchar_t * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -91,7 +91,7 @@
     {
         wchar_t * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_33.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_33.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_33.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_33.cpp	2025-05-05 11:26:01.757323478 +0800
@@ -37,7 +37,7 @@
     printWLine(data);
     {
         wchar_t * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -59,7 +59,7 @@
     printWLine(data);
     {
         wchar_t * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -79,7 +79,7 @@
     {
         wchar_t * data = dataRef;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_34.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_34.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_34.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_34.c	2025-05-05 11:26:01.764323630 +0800
@@ -41,7 +41,7 @@
     myUnion.unionFirst = data;
     {
         wchar_t * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -64,7 +64,7 @@
     myUnion.unionFirst = data;
     {
         wchar_t * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -85,7 +85,7 @@
     {
         wchar_t * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_41.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_41.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_41.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_41.c	2025-05-05 11:26:01.763323609 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 static void goodG2BSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -67,7 +67,7 @@
 static void goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_42.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_42.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_42.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_42.c	2025-05-05 11:26:01.797324350 +0800
@@ -37,7 +37,7 @@
     wchar_t * data;
     data = NULL;
     data = badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     wchar_t * data;
     data = NULL;
     data = goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -83,7 +83,7 @@
     data = NULL;
     data = goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 void CWE401_Memory_Leak__wchar_t_malloc_42_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_43.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_43.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_43.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_43.cpp	2025-05-05 11:26:01.785324089 +0800
@@ -39,7 +39,7 @@
     wchar_t * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -62,7 +62,7 @@
     wchar_t * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -83,7 +83,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_44.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_44.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_44.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_44.c	2025-05-05 11:26:01.742323151 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -71,7 +71,7 @@
 static void goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_45.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_45.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_45.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_45.c	2025-05-05 11:26:01.750323325 +0800
@@ -28,7 +28,7 @@
 static void badSink()
 {
     wchar_t * data = CWE401_Memory_Leak__wchar_t_malloc_45_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 static void goodG2BSink()
 {
     wchar_t * data = CWE401_Memory_Leak__wchar_t_malloc_45_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -76,7 +76,7 @@
 {
     wchar_t * data = CWE401_Memory_Leak__wchar_t_malloc_45_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_51b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_51b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_51b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_51b.c	2025-05-05 11:26:01.737323041 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__wchar_t_malloc_51b_badSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__wchar_t_malloc_51b_goodG2BSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__wchar_t_malloc_51b_goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_52c.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_52c.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_52c.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_52c.c	2025-05-05 11:26:01.783324045 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__wchar_t_malloc_52c_badSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__wchar_t_malloc_52c_goodG2BSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__wchar_t_malloc_52c_goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_53d.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_53d.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_53d.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_53d.c	2025-05-05 11:26:01.767323696 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__wchar_t_malloc_53d_badSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__wchar_t_malloc_53d_goodG2BSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__wchar_t_malloc_53d_goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_54e.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_54e.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_54e.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_54e.c	2025-05-05 11:26:01.795324307 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__wchar_t_malloc_54e_badSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__wchar_t_malloc_54e_goodG2BSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__wchar_t_malloc_54e_goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_61a.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_61a.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_61a.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_61a.c	2025-05-05 11:26:01.754323412 +0800
@@ -29,7 +29,7 @@
     wchar_t * data;
     data = NULL;
     data = CWE401_Memory_Leak__wchar_t_malloc_61b_badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
     wchar_t * data;
     data = NULL;
     data = CWE401_Memory_Leak__wchar_t_malloc_61b_goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -58,7 +58,7 @@
     data = NULL;
     data = CWE401_Memory_Leak__wchar_t_malloc_61b_goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 void CWE401_Memory_Leak__wchar_t_malloc_61_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_62a.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_62a.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_62a.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_62a.cpp	2025-05-05 11:26:01.742323151 +0800
@@ -32,7 +32,7 @@
     wchar_t * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -48,7 +48,7 @@
     wchar_t * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_63b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_63b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_63b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_63b.c	2025-05-05 11:26:01.799324394 +0800
@@ -24,7 +24,7 @@
 void CWE401_Memory_Leak__wchar_t_malloc_63b_badSink(wchar_t * * dataPtr)
 {
     wchar_t * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -36,7 +36,7 @@
 void CWE401_Memory_Leak__wchar_t_malloc_63b_goodG2BSink(wchar_t * * dataPtr)
 {
     wchar_t * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 {
     wchar_t * data = *dataPtr;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_64b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_64b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_64b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_64b.c	2025-05-05 11:26:01.753323391 +0800
@@ -27,7 +27,7 @@
     wchar_t * * dataPtr = (wchar_t * *)dataVoidPtr;
     /* dereference dataPtr into data */
     wchar_t * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
     wchar_t * * dataPtr = (wchar_t * *)dataVoidPtr;
     /* dereference dataPtr into data */
     wchar_t * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
     /* dereference dataPtr into data */
     wchar_t * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_65b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_65b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_65b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_65b.c	2025-05-05 11:26:01.747323260 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__wchar_t_malloc_65b_badSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__wchar_t_malloc_65b_goodG2BSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__wchar_t_malloc_65b_goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_66b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_66b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_66b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_66b.c	2025-05-05 11:26:01.744323194 +0800
@@ -25,7 +25,7 @@
 {
     /* copy data out of dataArray */
     wchar_t * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -37,7 +37,7 @@
 void CWE401_Memory_Leak__wchar_t_malloc_66b_goodG2BSink(wchar_t * dataArray[])
 {
     wchar_t * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 {
     wchar_t * data = dataArray[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_67b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_67b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_67b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_67b.c	2025-05-05 11:26:01.787324132 +0800
@@ -29,7 +29,7 @@
 void CWE401_Memory_Leak__wchar_t_malloc_67b_badSink(CWE401_Memory_Leak__wchar_t_malloc_67_structType myStruct)
 {
     wchar_t * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void CWE401_Memory_Leak__wchar_t_malloc_67b_goodG2BSink(CWE401_Memory_Leak__wchar_t_malloc_67_structType myStruct)
 {
     wchar_t * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     wchar_t * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_68b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_68b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_68b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_68b.c	2025-05-05 11:26:01.753323391 +0800
@@ -28,7 +28,7 @@
 void CWE401_Memory_Leak__wchar_t_malloc_68b_badSink()
 {
     wchar_t * data = CWE401_Memory_Leak__wchar_t_malloc_68_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -40,7 +40,7 @@
 void CWE401_Memory_Leak__wchar_t_malloc_68b_goodG2BSink()
 {
     wchar_t * data = CWE401_Memory_Leak__wchar_t_malloc_68_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
 {
     wchar_t * data = CWE401_Memory_Leak__wchar_t_malloc_68_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_72b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_72b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_72b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_72b.cpp	2025-05-05 11:26:01.781324001 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataVector */
     wchar_t * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(vector<wchar_t *> dataVector)
 {
     wchar_t * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     wchar_t * data = dataVector[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_73b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_73b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_73b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_73b.cpp	2025-05-05 11:26:01.771323783 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataList */
     wchar_t * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(list<wchar_t *> dataList)
 {
     wchar_t * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     wchar_t * data = dataList.back();
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_74b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_74b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_74b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_74b.cpp	2025-05-05 11:26:01.796324329 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataMap */
     wchar_t * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(map<int, wchar_t *> dataMap)
 {
     wchar_t * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     wchar_t * data = dataMap[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_81_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_81_bad.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_81_bad.cpp	2025-05-05 11:26:01.780323979 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__wchar_t_malloc_81_bad::action(wchar_t * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_81_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_81_goodB2G.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_81_goodB2G.cpp	2025-05-05 11:26:01.758323499 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__wchar_t_malloc_81_goodB2G::action(wchar_t * data) const
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_81_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_81_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_81_goodG2B.cpp	2025-05-05 11:26:01.756323456 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__wchar_t_malloc_81_goodG2B::action(wchar_t * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_82_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_82_bad.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_82_bad.cpp	2025-05-05 11:26:01.796324329 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__wchar_t_malloc_82_bad::action(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_82_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_82_goodB2G.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_82_goodB2G.cpp	2025-05-05 11:26:01.761323565 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__wchar_t_malloc_82_goodB2G::action(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_82_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_82_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_82_goodG2B.cpp	2025-05-05 11:26:01.762323587 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__wchar_t_malloc_82_goodG2B::action(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_83_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_83_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_83_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_83_bad.cpp	2025-05-05 11:26:01.768323718 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__wchar_t_malloc_83_bad::~CWE401_Memory_Leak__wchar_t_malloc_83_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_83_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_83_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_83_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_83_goodB2G.cpp	2025-05-05 11:26:01.800324416 +0800
@@ -35,7 +35,7 @@
 CWE401_Memory_Leak__wchar_t_malloc_83_goodB2G::~CWE401_Memory_Leak__wchar_t_malloc_83_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_83_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_83_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_83_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_83_goodG2B.cpp	2025-05-05 11:26:01.757323478 +0800
@@ -33,7 +33,7 @@
 
 CWE401_Memory_Leak__wchar_t_malloc_83_goodG2B::~CWE401_Memory_Leak__wchar_t_malloc_83_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_84_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_84_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_84_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_84_bad.cpp	2025-05-05 11:26:01.751323347 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__wchar_t_malloc_84_bad::~CWE401_Memory_Leak__wchar_t_malloc_84_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_84_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_84_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_84_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_84_goodB2G.cpp	2025-05-05 11:26:01.759323521 +0800
@@ -35,7 +35,7 @@
 CWE401_Memory_Leak__wchar_t_malloc_84_goodB2G::~CWE401_Memory_Leak__wchar_t_malloc_84_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_84_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_84_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_84_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_malloc_84_goodG2B.cpp	2025-05-05 11:26:01.736323020 +0800
@@ -33,7 +33,7 @@
 
 CWE401_Memory_Leak__wchar_t_malloc_84_goodG2B::~CWE401_Memory_Leak__wchar_t_malloc_84_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_01.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_01.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_01.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_01.c	2025-05-05 11:26:01.780323979 +0800
@@ -31,7 +31,7 @@
     /* Initialize and make use of data */
     wcscpy(data, L"A String");
     printWLine(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
     /* Initialize and make use of data */
     wcscpy(data, L"A String");
     printWLine(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -65,7 +65,7 @@
     wcscpy(data, L"A String");
     printWLine(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 void CWE401_Memory_Leak__wchar_t_realloc_01_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_02.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_02.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_02.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_02.c	2025-05-05 11:26:01.761323565 +0800
@@ -36,7 +36,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -88,7 +88,7 @@
     if(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_03.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_03.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_03.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_03.c	2025-05-05 11:26:01.769323739 +0800
@@ -36,7 +36,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -88,7 +88,7 @@
     if(5==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(5==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_04.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_04.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_04.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_04.c	2025-05-05 11:26:01.790324198 +0800
@@ -42,7 +42,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -94,7 +94,7 @@
     if(STATIC_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -138,7 +138,7 @@
     }
     if(STATIC_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_05.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_05.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_05.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_05.c	2025-05-05 11:26:01.770323761 +0800
@@ -42,7 +42,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -73,7 +73,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -94,7 +94,7 @@
     if(staticTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -118,7 +118,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -138,7 +138,7 @@
     }
     if(staticTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_06.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_06.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_06.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_06.c	2025-05-05 11:26:01.745323216 +0800
@@ -41,7 +41,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -93,7 +93,7 @@
     if(STATIC_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -117,7 +117,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(STATIC_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_07.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_07.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_07.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_07.c	2025-05-05 11:26:01.785324089 +0800
@@ -41,7 +41,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -72,7 +72,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -93,7 +93,7 @@
     if(staticFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -117,7 +117,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -137,7 +137,7 @@
     }
     if(staticFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_08.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_08.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_08.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_08.c	2025-05-05 11:26:01.770323761 +0800
@@ -49,7 +49,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -80,7 +80,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -101,7 +101,7 @@
     if(staticReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -125,7 +125,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -145,7 +145,7 @@
     }
     if(staticReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_09.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_09.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_09.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_09.c	2025-05-05 11:26:01.799324394 +0800
@@ -36,7 +36,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -88,7 +88,7 @@
     if(GLOBAL_CONST_TRUE)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(GLOBAL_CONST_TRUE)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_10.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_10.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_10.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_10.c	2025-05-05 11:26:01.792324241 +0800
@@ -36,7 +36,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalTrue)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalTrue)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_11.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_11.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_11.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_11.c	2025-05-05 11:26:01.797324350 +0800
@@ -36,7 +36,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalReturnsTrue())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalReturnsTrue())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_12.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_12.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_12.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_12.c	2025-05-05 11:26:01.773323827 +0800
@@ -44,13 +44,13 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -86,12 +86,12 @@
     if(globalReturnsTrueOrFalse())
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -120,12 +120,12 @@
     }
     if(globalReturnsTrueOrFalse())
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
     else
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_13.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_13.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_13.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_13.c	2025-05-05 11:26:01.764323630 +0800
@@ -36,7 +36,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -88,7 +88,7 @@
     if(GLOBAL_CONST_FIVE==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(GLOBAL_CONST_FIVE==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_14.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_14.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_14.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_14.c	2025-05-05 11:26:01.765323652 +0800
@@ -36,7 +36,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -88,7 +88,7 @@
     if(globalFive==5)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -112,7 +112,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -132,7 +132,7 @@
     }
     if(globalFive==5)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_15.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_15.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_15.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_15.c	2025-05-05 11:26:01.765323652 +0800
@@ -43,7 +43,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -85,7 +85,7 @@
         break;
     default:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
         break;
     }
 }
@@ -114,7 +114,7 @@
     {
     case 7:
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
         break;
     default:
         /* INCIDENTAL: CWE 561 Dead Code, the code below will never run */
@@ -145,7 +145,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
         break;
     default:
@@ -177,7 +177,7 @@
     switch(7)
     {
     case 7:
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
         break;
     default:
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_16.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_16.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_16.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_16.c	2025-05-05 11:26:01.744323194 +0800
@@ -37,7 +37,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
         break;
     }
@@ -65,7 +65,7 @@
     while(1)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
         break;
     }
 }
@@ -86,7 +86,7 @@
     }
     while(1)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
         break;
     }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_17.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_17.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_17.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_17.c	2025-05-05 11:26:01.796324329 +0800
@@ -37,7 +37,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -64,7 +64,7 @@
     for(k = 0; k < 1; k++)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -84,7 +84,7 @@
     }
     for(j = 0; j < 1; j++)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_18.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_18.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_18.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_18.c	2025-05-05 11:26:01.780323979 +0800
@@ -35,7 +35,7 @@
     printWLine(data);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -59,7 +59,7 @@
     goto sink;
 sink:
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 /* goodG2B() - use goodsource and badsink by reversing the blocks on the first goto statement */
@@ -76,7 +76,7 @@
     printWLine(data);
     goto sink;
 sink:
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_21.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_21.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_21.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_21.c	2025-05-05 11:26:01.765323652 +0800
@@ -28,7 +28,7 @@
 {
     if(badStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -67,7 +67,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -91,7 +91,7 @@
     if(goodB2G2Static)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -114,7 +114,7 @@
 {
     if(goodG2BStatic)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_22b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_22b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_22b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_22b.c	2025-05-05 11:26:01.750323325 +0800
@@ -28,7 +28,7 @@
 {
     if(CWE401_Memory_Leak__wchar_t_realloc_22_badGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -53,7 +53,7 @@
     else
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -63,7 +63,7 @@
     if(CWE401_Memory_Leak__wchar_t_realloc_22_goodB2G2Global)
     {
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
@@ -72,7 +72,7 @@
 {
     if(CWE401_Memory_Leak__wchar_t_realloc_22_goodG2BGlobal)
     {
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_31.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_31.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_31.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_31.c	2025-05-05 11:26:01.779323958 +0800
@@ -34,7 +34,7 @@
     {
         wchar_t * dataCopy = data;
         wchar_t * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -56,7 +56,7 @@
     {
         wchar_t * dataCopy = data;
         wchar_t * data = dataCopy;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -76,7 +76,7 @@
         wchar_t * dataCopy = data;
         wchar_t * data = dataCopy;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_32.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_32.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_32.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_32.c	2025-05-05 11:26:01.792324241 +0800
@@ -39,7 +39,7 @@
     }
     {
         wchar_t * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -66,7 +66,7 @@
     }
     {
         wchar_t * data = *dataPtr2;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -91,7 +91,7 @@
     {
         wchar_t * data = *dataPtr2;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_33.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_33.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_33.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_33.cpp	2025-05-05 11:26:01.746323238 +0800
@@ -37,7 +37,7 @@
     printWLine(data);
     {
         wchar_t * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -59,7 +59,7 @@
     printWLine(data);
     {
         wchar_t * data = dataRef;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -79,7 +79,7 @@
     {
         wchar_t * data = dataRef;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_34.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_34.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_34.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_34.c	2025-05-05 11:26:01.747323260 +0800
@@ -41,7 +41,7 @@
     myUnion.unionFirst = data;
     {
         wchar_t * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -64,7 +64,7 @@
     myUnion.unionFirst = data;
     {
         wchar_t * data = myUnion.unionSecond;
-        /* POTENTIAL FLAW: No deallocation */
+        callback_wchar(data, no_free_wchar);
         ; /* empty statement needed for some flow variants */
     }
 }
@@ -85,7 +85,7 @@
     {
         wchar_t * data = myUnion.unionSecond;
         /* FIX: Deallocate memory */
-        free(data);
+        callback_wchar(data, has_free_wchar);
     }
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_41.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_41.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_41.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_41.c	2025-05-05 11:26:01.750323325 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -47,7 +47,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 static void goodG2BSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -67,7 +67,7 @@
 static void goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_42.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_42.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_42.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_42.c	2025-05-05 11:26:01.734322976 +0800
@@ -37,7 +37,7 @@
     wchar_t * data;
     data = NULL;
     data = badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     wchar_t * data;
     data = NULL;
     data = goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -83,7 +83,7 @@
     data = NULL;
     data = goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 void CWE401_Memory_Leak__wchar_t_realloc_42_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_43.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_43.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_43.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_43.cpp	2025-05-05 11:26:01.800324416 +0800
@@ -39,7 +39,7 @@
     wchar_t * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -62,7 +62,7 @@
     wchar_t * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -83,7 +83,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_44.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_44.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_44.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_44.c	2025-05-05 11:26:01.756323456 +0800
@@ -23,7 +23,7 @@
 
 static void badSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 /* goodG2B() uses the GoodSource with the BadSink */
 static void goodG2BSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -71,7 +71,7 @@
 static void goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_45.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_45.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_45.c	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_45.c	2025-05-05 11:26:01.784324067 +0800
@@ -28,7 +28,7 @@
 static void badSink()
 {
     wchar_t * data = CWE401_Memory_Leak__wchar_t_realloc_45_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
 static void goodG2BSink()
 {
     wchar_t * data = CWE401_Memory_Leak__wchar_t_realloc_45_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -76,7 +76,7 @@
 {
     wchar_t * data = CWE401_Memory_Leak__wchar_t_realloc_45_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 static void goodB2G()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_51b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_51b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_51b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_51b.c	2025-05-05 11:26:01.777323914 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__wchar_t_realloc_51b_badSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__wchar_t_realloc_51b_goodG2BSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__wchar_t_realloc_51b_goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_52c.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_52c.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_52c.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_52c.c	2025-05-05 11:26:01.786324110 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__wchar_t_realloc_52c_badSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__wchar_t_realloc_52c_goodG2BSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__wchar_t_realloc_52c_goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_53d.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_53d.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_53d.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_53d.c	2025-05-05 11:26:01.748323281 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__wchar_t_realloc_53d_badSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__wchar_t_realloc_53d_goodG2BSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__wchar_t_realloc_53d_goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_54e.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_54e.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_54e.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_54e.c	2025-05-05 11:26:01.802324460 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__wchar_t_realloc_54e_badSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__wchar_t_realloc_54e_goodG2BSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__wchar_t_realloc_54e_goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_61a.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_61a.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_61a.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_61a.c	2025-05-05 11:26:01.746323238 +0800
@@ -29,7 +29,7 @@
     wchar_t * data;
     data = NULL;
     data = CWE401_Memory_Leak__wchar_t_realloc_61b_badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
     wchar_t * data;
     data = NULL;
     data = CWE401_Memory_Leak__wchar_t_realloc_61b_goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -58,7 +58,7 @@
     data = NULL;
     data = CWE401_Memory_Leak__wchar_t_realloc_61b_goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 void CWE401_Memory_Leak__wchar_t_realloc_61_good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_62a.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_62a.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_62a.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_62a.cpp	2025-05-05 11:26:01.786324110 +0800
@@ -32,7 +32,7 @@
     wchar_t * data;
     data = NULL;
     badSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -48,7 +48,7 @@
     wchar_t * data;
     data = NULL;
     goodG2BSource(data);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -61,7 +61,7 @@
     data = NULL;
     goodB2GSource(data);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 void good()
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_63b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_63b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_63b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_63b.c	2025-05-05 11:26:01.756323456 +0800
@@ -24,7 +24,7 @@
 void CWE401_Memory_Leak__wchar_t_realloc_63b_badSink(wchar_t * * dataPtr)
 {
     wchar_t * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -36,7 +36,7 @@
 void CWE401_Memory_Leak__wchar_t_realloc_63b_goodG2BSink(wchar_t * * dataPtr)
 {
     wchar_t * data = *dataPtr;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -45,7 +45,7 @@
 {
     wchar_t * data = *dataPtr;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_64b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_64b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_64b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_64b.c	2025-05-05 11:26:01.795324307 +0800
@@ -27,7 +27,7 @@
     wchar_t * * dataPtr = (wchar_t * *)dataVoidPtr;
     /* dereference dataPtr into data */
     wchar_t * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
     wchar_t * * dataPtr = (wchar_t * *)dataVoidPtr;
     /* dereference dataPtr into data */
     wchar_t * data = (*dataPtr);
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -54,7 +54,7 @@
     /* dereference dataPtr into data */
     wchar_t * data = (*dataPtr);
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_65b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_65b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_65b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_65b.c	2025-05-05 11:26:01.748323281 +0800
@@ -23,7 +23,7 @@
 
 void CWE401_Memory_Leak__wchar_t_realloc_65b_badSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -34,7 +34,7 @@
 /* goodG2B uses the GoodSource with the BadSink */
 void CWE401_Memory_Leak__wchar_t_realloc_65b_goodG2BSink(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -42,7 +42,7 @@
 void CWE401_Memory_Leak__wchar_t_realloc_65b_goodB2GSink(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_66b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_66b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_66b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_66b.c	2025-05-05 11:26:01.740323107 +0800
@@ -25,7 +25,7 @@
 {
     /* copy data out of dataArray */
     wchar_t * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -37,7 +37,7 @@
 void CWE401_Memory_Leak__wchar_t_realloc_66b_goodG2BSink(wchar_t * dataArray[])
 {
     wchar_t * data = dataArray[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -46,7 +46,7 @@
 {
     wchar_t * data = dataArray[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_67b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_67b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_67b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_67b.c	2025-05-05 11:26:01.742323151 +0800
@@ -29,7 +29,7 @@
 void CWE401_Memory_Leak__wchar_t_realloc_67b_badSink(CWE401_Memory_Leak__wchar_t_realloc_67_structType myStruct)
 {
     wchar_t * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -41,7 +41,7 @@
 void CWE401_Memory_Leak__wchar_t_realloc_67b_goodG2BSink(CWE401_Memory_Leak__wchar_t_realloc_67_structType myStruct)
 {
     wchar_t * data = myStruct.structFirst;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -50,7 +50,7 @@
 {
     wchar_t * data = myStruct.structFirst;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_68b.c refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_68b.c
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_68b.c	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_68b.c	2025-05-05 11:26:01.788324154 +0800
@@ -28,7 +28,7 @@
 void CWE401_Memory_Leak__wchar_t_realloc_68b_badSink()
 {
     wchar_t * data = CWE401_Memory_Leak__wchar_t_realloc_68_badData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -40,7 +40,7 @@
 void CWE401_Memory_Leak__wchar_t_realloc_68b_goodG2BSink()
 {
     wchar_t * data = CWE401_Memory_Leak__wchar_t_realloc_68_goodG2BData;
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -49,7 +49,7 @@
 {
     wchar_t * data = CWE401_Memory_Leak__wchar_t_realloc_68_goodB2GData;
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_72b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_72b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_72b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_72b.cpp	2025-05-05 11:26:01.791324220 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataVector */
     wchar_t * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(vector<wchar_t *> dataVector)
 {
     wchar_t * data = dataVector[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     wchar_t * data = dataVector[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_73b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_73b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_73b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_73b.cpp	2025-05-05 11:26:01.741323129 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataList */
     wchar_t * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(list<wchar_t *> dataList)
 {
     wchar_t * data = dataList.back();
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     wchar_t * data = dataList.back();
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_74b.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_74b.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_74b.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_74b.cpp	2025-05-05 11:26:01.799324394 +0800
@@ -31,7 +31,7 @@
 {
     /* copy data out of dataMap */
     wchar_t * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -43,7 +43,7 @@
 void goodG2BSink(map<int, wchar_t *> dataMap)
 {
     wchar_t * data = dataMap[2];
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
@@ -52,7 +52,7 @@
 {
     wchar_t * data = dataMap[2];
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_81_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_81_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_81_bad.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_81_bad.cpp	2025-05-05 11:26:01.759323521 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__wchar_t_realloc_81_bad::action(wchar_t * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_81_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_81_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_81_goodB2G.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_81_goodB2G.cpp	2025-05-05 11:26:01.737323041 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__wchar_t_realloc_81_goodB2G::action(wchar_t * data) const
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_81_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_81_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_81_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_81_goodG2B.cpp	2025-05-05 11:26:01.746323238 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__wchar_t_realloc_81_goodG2B::action(wchar_t * data) const
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_82_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_82_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_82_bad.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_82_bad.cpp	2025-05-05 11:26:01.755323434 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__wchar_t_realloc_82_bad::action(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_82_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_82_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_82_goodB2G.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_82_goodB2G.cpp	2025-05-05 11:26:01.737323041 +0800
@@ -25,7 +25,7 @@
 void CWE401_Memory_Leak__wchar_t_realloc_82_goodB2G::action(wchar_t * data)
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_82_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_82_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_82_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_82_goodG2B.cpp	2025-05-05 11:26:01.785324089 +0800
@@ -24,7 +24,7 @@
 
 void CWE401_Memory_Leak__wchar_t_realloc_82_goodG2B::action(wchar_t * data)
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_83_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_83_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_83_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_83_bad.cpp	2025-05-05 11:26:01.759323521 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__wchar_t_realloc_83_bad::~CWE401_Memory_Leak__wchar_t_realloc_83_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_83_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_83_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_83_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_83_goodB2G.cpp	2025-05-05 11:26:01.741323129 +0800
@@ -35,7 +35,7 @@
 CWE401_Memory_Leak__wchar_t_realloc_83_goodB2G::~CWE401_Memory_Leak__wchar_t_realloc_83_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_83_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_83_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_83_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_83_goodG2B.cpp	2025-05-05 11:26:01.781324001 +0800
@@ -33,7 +33,7 @@
 
 CWE401_Memory_Leak__wchar_t_realloc_83_goodG2B::~CWE401_Memory_Leak__wchar_t_realloc_83_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_84_bad.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_84_bad.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_84_bad.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_84_bad.cpp	2025-05-05 11:26:01.764323630 +0800
@@ -34,7 +34,7 @@
 
 CWE401_Memory_Leak__wchar_t_realloc_84_bad::~CWE401_Memory_Leak__wchar_t_realloc_84_bad()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 }
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_84_goodB2G.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_84_goodB2G.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_84_goodB2G.cpp	2017-08-12 03:38:30.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_84_goodB2G.cpp	2025-05-05 11:26:01.740323107 +0800
@@ -35,7 +35,7 @@
 CWE401_Memory_Leak__wchar_t_realloc_84_goodB2G::~CWE401_Memory_Leak__wchar_t_realloc_84_goodB2G()
 {
     /* FIX: Deallocate memory */
-    free(data);
+    callback_wchar(data, has_free_wchar);
 }
 }
 #endif /* OMITGOOD */
diff -ruw benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_84_goodG2B.cpp refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_84_goodG2B.cpp
--- benchmark/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_84_goodG2B.cpp	2017-06-13 04:15:07.000000000 +0800
+++ refined/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__wchar_t_realloc_84_goodG2B.cpp	2025-05-05 11:26:01.791324220 +0800
@@ -33,7 +33,7 @@
 
 CWE401_Memory_Leak__wchar_t_realloc_84_goodG2B::~CWE401_Memory_Leak__wchar_t_realloc_84_goodG2B()
 {
-    /* POTENTIAL FLAW: No deallocation */
+    callback_wchar(data, no_free_wchar);
     ; /* empty statement needed for some flow variants */
 }
 }
